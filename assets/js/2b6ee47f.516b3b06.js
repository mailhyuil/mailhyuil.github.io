"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[218544],{529087:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var o=n(596363);const s={},t=o.createContext(s);function a(e){const r=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:r},e.children)}},838052:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"nodejs/nodejs module multicore worker_threads","title":"node worker_threads","description":"worker_threads\uc758 \uac00\uc7a5 \uc911\uc694\ud55c \ubaa9\ud45c\ub294 I/O \uc791\uc5c5\uc774 \uc544\ub2cc CPU \uc9d1\uc57d\uc801\uc778 \uc791\uc5c5\uc758 \ud37c\ud3ec\uba3c\uc2a4\ub97c \ud5a5\uc0c1\uc2dc\ud0a4\ub294 \uac81\ub2c8\ub2e4.","source":"@site/docs/nodejs/nodejs module multicore worker_threads.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs module multicore worker_threads","permalink":"/docs/nodejs/nodejs module multicore worker_threads","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"node worker_threads","permalink":"/docs/nodejs/nodejs module multicore worker_threads workerpool"},"next":{"title":"nodejs module net (TCP)","permalink":"/docs/nodejs/nodejs module net - TCP"}}');var s=n(447259),t=n(529087);const a={},i="node worker_threads",l={},d=[{value:"import",id:"import",level:2},{value:"usage",id:"usage",level:2},{value:"main.js",id:"mainjs",level:3},{value:"job.js",id:"jobjs",level:3},{value:"sample",id:"sample",level:2}];function c(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"node-worker_threads",children:"node worker_threads"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"worker_threads\uc758 \uac00\uc7a5 \uc911\uc694\ud55c \ubaa9\ud45c\ub294 I/O \uc791\uc5c5\uc774 \uc544\ub2cc CPU \uc9d1\uc57d\uc801\uc778 \uc791\uc5c5\uc758 \ud37c\ud3ec\uba3c\uc2a4\ub97c \ud5a5\uc0c1\uc2dc\ud0a4\ub294 \uac81\ub2c8\ub2e4."}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"parallel threading\ub97c \uad6c\ud604"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\uac01 \ucf54\uc5b4\uc5d0\uc11c thread\ub97c \uc0dd\uc131\ud574\uc11c \uc791\uc5c5 \uac00\ub2a5"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"javascript thread\ub97c \uba40\ud2f0\ucf54\uc5b4\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \uac83 (nodejs \uc571\uc740 \ud558\ub098)"}),"\n",(0,s.jsx)(r.p,{children:"\uc0c8\ub85c\uc6b4 thread\ub97c \uc0dd\uc131\ud574\uc11c \uadf8 \uc704\uc5d0 v8 \uc5d4\uc9c4\uc744 \uc62c\ub824\uc11c \uc2e4\ud589\ud558\ub294 \uac83"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"import",children:"import"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const { Worker } = require("worker_threads");\r\n\r\nconst { isMainThread, workerPort, parentPort, MessageChannel, workerData } = require("worker_threads");\r\n\r\nconst worker = new Worker("./job.js", {\r\n  workerData: { data: "hi" }, // worker\uc5d0\uac8c \uc804\ub2ec\ud560 \ub370\uc774\ud130\r\n}); // worker \uc0dd\uc131\r\n\r\nparentPort.postMessage("message"); // worker\uc5d0\uac8c \uba54\uc2dc\uc9c0 \uc804\ub2ec\r\nworkerPort.postMessage("message"); // main\uc5d0\uac8c \uba54\uc2dc\uc9c0 \uc804\ub2ec\n'})}),"\n",(0,s.jsx)(r.h2,{id:"usage",children:"usage"}),"\n",(0,s.jsx)(r.h3,{id:"mainjs",children:"main.js"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const { Worker, isMainThread, parentPort } = require("worker_threads");\r\n\r\nconst main = async () => {\r\n  try {\r\n    const start = Date.now();\r\n    const values = await Promise.all([work(1), work(2), work(3)]);\r\n    console.log(values);\r\n    console.log(`done! total duration : ${Date.now() - start}ms`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst work = async id => {\r\n  return new Promise((resolve, reject) => {\r\n    const start = Date.now();\r\n    // worker \uc0dd\uc131\r\n    const worker = new Worker("./job.js", {\r\n      workerData: { id },\r\n    });\r\n    // worker\uc5d0\uc11c parentPort.postMessage\ub85c \ubcf4\ub0b8 \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc74c\r\n    worker.once("message", message => {\r\n      console.log(`threadId : [${worker.threadId}] duration : ${Date.now() - start}ms`);\r\n      resolve(message);\r\n    });\r\n\r\n    worker.once("error", error => {\r\n      reject(error);\r\n    });\r\n  });\r\n};\r\n\r\nmain();\n'})}),"\n",(0,s.jsx)(r.h3,{id:"jobjs",children:"job.js"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'const process = require("process");\r\nconst { parentPort, workerData } = require("worker_threads");\r\n\r\nfor (let i = 0; i < 1000000; i++) {\r\n  console.log(`i\'m a worker [${workerData.id}] in pid [${process.pid}]!`);\r\n}\r\n\r\nparentPort.postMessage(`worker [${workerData.id}] done`);\n'})}),"\n",(0,s.jsx)(r.h2,{id:"sample",children:"sample"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const { Worker, isMainThread, parentPort } = require("worker_threads");\r\n\r\nif (isMainThread) {\r\n  console.time("start");\r\n  const worker = new Worker(__filename); // worker \uc0dd\uc131\r\n\r\n  worker.on("message", message => {\r\n    console.log("from worker", message);\r\n    console.timeEnd("start");\r\n  });\r\n  worker.on("error", message => console.error(message));\r\n  worker.on("exit", message => console.log("worker exit", message));\r\n\r\n  console.log("i\'m main");\r\n  let count = 0;\r\n  console.time("hi");\r\n  for (let i = 0; i < 10000000000; i++) {\r\n    count++;\r\n  }\r\n  console.timeEnd("hi");\r\n} else {\r\n  console.log("i\'m worker");\r\n  let count = 0;\r\n  console.time("hi");\r\n  for (let i = 0; i < 10000000000; i++) {\r\n    count++;\r\n  }\r\n  console.timeEnd("hi");\r\n\r\n  parentPort.postMessage(count);\r\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);