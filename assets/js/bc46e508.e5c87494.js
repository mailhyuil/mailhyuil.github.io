"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[312006],{529087:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>l});var t=o(596363);const s={},c=t.createContext(s);function r(n){const e=t.useContext(c);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(c.Provider,{value:e},n.children)}},542770:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"nestjs/nest graceful shutdown","title":"nest graceful shutdown","description":"log\uc758 \uacbd\uc6b0 buffer\uc5d0 \ub0a8\uc740 \ub85c\uadf8\uac00 \uc788\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c, log\ub97c flush\ud558\ub294 \uc791\uc5c5\uc774 \ud544\uc694\ud558\ub2e4.","source":"@site/docs/nestjs/nest graceful shutdown.md","sourceDirName":"nestjs","slug":"/nestjs/nest graceful shutdown","permalink":"/docs/nestjs/nest graceful shutdown","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest graceful shutdown","permalink":"/docs/nestjs/nest graceful shutdown onApplicationShutdown"},"next":{"title":"nest helmet","permalink":"/docs/nestjs/nest helmet"}}');var s=o(447259),c=o(529087);const r={},l="nest graceful shutdown",i={},u=[{value:"main.ts",id:"maints",level:2}];function a(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"nest-graceful-shutdown",children:"nest graceful shutdown"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"log\uc758 \uacbd\uc6b0 buffer\uc5d0 \ub0a8\uc740 \ub85c\uadf8\uac00 \uc788\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c, log\ub97c flush\ud558\ub294 \uc791\uc5c5\uc774 \ud544\uc694\ud558\ub2e4."}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"consumer\uc758 \uacbd\uc6b0 consume\uc744 \uc911\ub2e8\ud558\uace0 \ub0a8\uc740 \uba54\uc2dc\uc9c0\ub97c \ucc98\ub9ac\ud574\uc57c \ud55c\ub2e4."}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\ud504\ub85c\uc138\uc2a4 \uc885\ub8cc\ub294 SIGINT\ub97c \ubcf4\ub0b8\ub2e4. (pm2 \uae30\uc900) (SIGTERM\uc73c\ub85c \ub300\uccb4\ud560 \uc218\ub3c4 \uc788\uc74c)"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"SIGINT\ub97c \ubc1b\uace0 1.6s \ub3d9\uc548 exit\ud558\uc9c0 \uc54a\uc73c\uba74 SIGKILL\uc744 \ubcf4\ub0b8\ub2e4."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"maints",children:"main.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'async function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n\r\n  const server = app.listen(3000, () => console.log("Running\u2026"));\r\n\r\n  setInterval(() => server.getConnections((err, connections) => console.log(`${connections} connections currently open`)), 1000);\r\n\r\n  // SIGTERM, SIGINT\ub97c \ubc1b\uc73c\uba74 shutDown \ud568\uc218\ub97c \uc2e4\ud589\ud55c\ub2e4.\r\n  process.on("SIGTERM", shutDown);\r\n  process.on("SIGINT", shutDown);\r\n\r\n  // \ucd94\uac00\ub41c connection\uc744 connections\uc5d0 \ucd94\uac00\ud558\uace0, close\ub418\ub294 connection\uc744 connections\uc5d0\uc11c \uc81c\uac70\ud55c\ub2e4.\r\n  const connections = [];\r\n  server.on("connection", (connection) => {\r\n    connections.push(connection);\r\n    connection.on("close", () => (connections = connections.filter((curr) => curr !== connection)));\r\n  });\r\n}\r\n\r\nfunction shutDown() {\r\n  console.log("Received kill signal, shutting down gracefully");\r\n  app.close(() => {\r\n    console.log("Closed out remaining connections");\r\n    process.exit(0);\r\n  });\r\n\r\n  setTimeout(() => {\r\n    console.error("Could not close connections in time, forcefully shutting down");\r\n    process.exit(1);\r\n  }, 10000);\r\n\r\n  connections.forEach((curr) => curr.end()); // close all open connections\r\n  setTimeout(() => connections.forEach((curr) => curr.destroy()), 5000); // destroy all open connections\r\n}\n'})})]})}function d(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}}}]);