"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[757656],{529087:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>o});var t=r(596363);const l={},a=t.createContext(l);function s(n){const e=t.useContext(a);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:s(n.components),t.createElement(a.Provider,{value:e},n.children)}},863583:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"angular/angular compiler ng-morph - template","title":"compile ng-morph template","description":"cheerio\ub97c \uc0ac\uc6a9","source":"@site/docs/angular/angular compiler ng-morph - template.md","sourceDirName":"angular","slug":"/angular/angular compiler ng-morph - template","permalink":"/docs/angular/angular compiler ng-morph - template","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"compile angular/compiler ivy","permalink":"/docs/angular/angular compiler ivy"},"next":{"title":"compile ng-morph","permalink":"/docs/angular/angular compiler ng-morph"}}');var l=r(447259),a=r(529087);const s={},o="compile ng-morph template",i={},c=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2}];function p(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"compile-ng-morph-template",children:"compile ng-morph template"})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"cheerio\ub97c \uc0ac\uc6a9"}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"install",children:"install"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sh",children:"npm i cheerio\n"})}),"\n",(0,l.jsx)(e.h2,{id:"usage",children:"usage"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:'import fs from "fs";\r\nimport path from "path";\r\n\r\nconst baseDir = path.resolve(__dirname, "../apps/admin");\r\n\r\nfunction walk(dir: string) {\r\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\r\n  for (const entry of entries) {\r\n    const fullPath = path.join(dir, entry.name);\r\n    if (entry.isDirectory()) {\r\n      walk(fullPath);\r\n    } else if (entry.name.endsWith(".html")) {\r\n      transformFile(fullPath);\r\n    }\r\n  }\r\n}\r\n\r\nfunction transformFile(filePath: string) {\r\n  let content = fs.readFileSync(filePath, "utf8");\r\n\r\n  // \uc815\uaddc\uc2dd: <lepi-icon ...>...</lepi-icon> \ub610\ub294 <lepi-icon ... />\r\n  const regex = /<lepi-icon([^>]*)name="([^"]+)"([^>]*)\\/?>\\s*<\\/lepi-icon>?/gi;\r\n\r\n  const replaced = content.replace(regex, (_, preAttrs, iconName, postAttrs) => {\r\n    // \ubaa8\ub4e0 \uc18d\uc131 \ubb38\uc790\uc5f4 \ud569\uce68\r\n    const allAttrs = `${preAttrs} ${postAttrs}`.trim();\r\n\r\n    // class \ucd94\ucd9c\r\n    const classMatch = /class="([^"]*)"/.exec(allAttrs);\r\n    const originalClass = classMatch ? classMatch[1] : "";\r\n    const iconClass = `icon-[${iconName.replace(":", "--")}]`;\r\n    const fullClass = `${originalClass} ${iconClass}`.trim();\r\n\r\n    return `<span class="${fullClass}"></span>`;\r\n  });\r\n\r\n  if (replaced !== content) {\r\n    fs.writeFileSync(filePath, replaced);\r\n    console.log(`\u2705 Updated: ${filePath}`);\r\n  }\r\n}\r\n\r\nwalk(baseDir);\n'})})]})}function m(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(p,{...n})}):p(n)}}}]);