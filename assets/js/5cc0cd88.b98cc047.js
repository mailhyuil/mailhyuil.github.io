"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[552879],{529087:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var o=t(596363);const s={},r=o.createContext(s);function d(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}},873242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"nodejs/nodejs module readline system input & output","title":"system input & output","description":"node ``\uc73c\ub85c run","source":"@site/docs/nodejs/nodejs module readline system input & output.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs module readline system input & output","permalink":"/docs/nodejs/nodejs module readline system input & output","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs module process","permalink":"/docs/nodejs/nodejs module process"},"next":{"title":"nodejs module resolution","permalink":"/docs/nodejs/nodejs module resolution"}}');var s=t(447259),r=t(529087);const d={},l="system input & output",u={},i=[{value:"\ud55c\uc904 \uc785\ub825",id:"\ud55c\uc904-\uc785\ub825",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"system-input--output",children:"system input & output"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["node ",(0,s.jsx)(n.code,{children:"<filename>"}),"\uc73c\ub85c run"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ud55c\uc904-\uc785\ub825",children:"\ud55c\uc904 \uc785\ub825"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import readline from "readline";\r\n\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\n\r\nrl.on("line", line => {\r\n  console.log("hello !", line);\r\n  rl.close();\r\n}).on("close", () => {\r\n  process.exit();\r\n});\n'})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);