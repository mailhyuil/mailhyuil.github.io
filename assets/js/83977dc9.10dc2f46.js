"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["939762"],{882718:function(e,t,r){r.r(t),r.d(t,{frontMatter:()=>d,toc:()=>c,default:()=>l,metadata:()=>a,assets:()=>o,contentTitle:()=>s});var a=JSON.parse('{"id":"x data structure/data Tree Quad Tree","title":"Quad Tree","description":"","source":"@site/docs/x data structure/data Tree Quad Tree.md","sourceDirName":"x data structure","slug":"/x data structure/data Tree Quad Tree","permalink":"/docs/x data structure/data Tree Quad Tree","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Heap Binary Tree","permalink":"/docs/x data structure/data Heap Binary Tree"},"next":{"title":"Trie","permalink":"/docs/x data structure/data Tree Trie"}}'),n=r(447259),u=r(255511);let d={},s="Quad Tree",o={},c=[];function i(e){let t={h1:"h1",header:"header",...(0,u.R)(),...e.components};return(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"quad-tree",children:"Quad Tree"})})}function l(e={}){let{wrapper:t}={...(0,u.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},255511:function(e,t,r){r.d(t,{R:()=>d,x:()=>s});var a=r(596363);let n={},u=a.createContext(n);function d(e){let t=a.useContext(u);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),a.createElement(u.Provider,{value:t},e.children)}}}]);