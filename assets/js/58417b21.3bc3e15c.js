"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[6253],{529087:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var n=t(596363);const o={},s=n.createContext(o);function i(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:r},e.children)}},780368:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"firebase/firebase flutter service","title":"firebase flutter service","description":"","source":"@site/docs/firebase/firebase flutter service.md","sourceDirName":"firebase","slug":"/firebase/firebase flutter service","permalink":"/docs/firebase/firebase flutter service","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"firebase firestore","permalink":"/docs/firebase/firebase firestore"},"next":{"title":"firebase flutter","permalink":"/docs/firebase/firebase flutter"}}');var o=t(447259),s=t(529087);const i={},a="firebase flutter service",c={},m=[];function d(e){const r={code:"code",h1:"h1",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"firebase-flutter-service",children:"firebase flutter service"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-dart",children:"import 'package:cloud_firestore/cloud_firestore.dart';\r\nimport 'package:flutter_firebase/models/memo_model.dart';\r\n\r\nclass FirestoreService {\r\n  final firestore = FirebaseFirestore.instance;\r\n\r\n  Stream<List<MemoModel>> getMemos() {\r\n    try {\r\n      return firestore.collection('memos').snapshots().map((querySnapshot) {\r\n        return querySnapshot.docs\r\n            .map((doc) => MemoModel.fromJson(doc.data()))\r\n            .toList();\r\n      });\r\n    } catch (e) {\r\n      print('Error getting memos: $e');\r\n      return Stream.value([]); // Return an empty list on error\r\n    }\r\n  }\r\n\r\n  Future<void> createMemo(MemoModel memo) async {\r\n    try {\r\n      await firestore.collection('memos').add(memo.toJson());\r\n    } catch (e) {\r\n      print('Error creating memo: $e');\r\n    }\r\n  }\r\n\r\n  Future<void> updateMemo(String memoId, MemoModel updatedMemo) async {\r\n    try {\r\n      await firestore\r\n          .collection('memos')\r\n          .doc(memoId)\r\n          .update(updatedMemo.toJson());\r\n    } catch (e) {\r\n      print('Error updating memo: $e');\r\n    }\r\n  }\r\n\r\n  Future<void> deleteMemo(String memoId) async {\r\n    try {\r\n      await firestore.collection('memos').doc(memoId).delete();\r\n    } catch (e) {\r\n      print('Error deleting memo: $e');\r\n    }\r\n  }\r\n}\n"})})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);