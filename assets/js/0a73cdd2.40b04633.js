"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[241463],{529087:(e,l,r)=>{r.d(l,{R:()=>i,x:()=>o});var a=r(596363);const t={},n=a.createContext(t);function i(e){const l=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(n.Provider,{value:l},e.children)}},760081:(e,l,r)=>{r.r(l),r.d(l,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"angular/angular material virtual scroll","title":"angular material virtual scroll","description":"ts","source":"@site/docs/angular/angular material virtual scroll.md","sourceDirName":"angular","slug":"/angular/angular material virtual scroll","permalink":"/docs/angular/angular material virtual scroll","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular material theme custom","permalink":"/docs/angular/angular material theme custom"},"next":{"title":"angular material tailwindcss\uc640 \ud568\uaed8 \uc0ac\uc6a9","permalink":"/docs/angular/angular material with tailwindcss"}}');var t=r(447259),n=r(529087);const i={},o="angular material virtual scroll",s={},c=[{value:"ts",id:"ts",level:2},{value:"html",id:"html",level:2}];function u(e){const l={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.header,{children:(0,t.jsx)(l.h1,{id:"angular-material-virtual-scroll",children:"angular material virtual scroll"})}),"\n",(0,t.jsx)(l.h2,{id:"ts",children:"ts"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:'import { ChangeDetectionStrategy, Component } from "@angular/core";\r\nimport { ScrollingModule } from "@angular/cdk/scrolling";\r\n\r\n/** @title Virtual scroll with view recycling disabled. */\r\n@Component({\r\n  selector: "cdk-virtual-scroll-append-only-example",\r\n  styleUrls: ["cdk-virtual-scroll-append-only-example.css"],\r\n  templateUrl: "cdk-virtual-scroll-append-only-example.html",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [ScrollingModule],\r\n})\r\nexport class CdkVirtualScrollAppendOnlyExample {\r\n  items = Array.from({ length: 100000 }).map((_, i) => `Item #${i}`);\r\n}\n'})}),"\n",(0,t.jsx)(l.h2,{id:"html",children:"html"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-html",children:'<cdk-virtual-scroll-viewport appendOnly itemSize="50" class="example-viewport">\r\n  <div *cdkVirtualFor="let item of items" class="example-item">{{item}}</div>\r\n</cdk-virtual-scroll-viewport>\n'})})]})}function m(e={}){const{wrapper:l}={...(0,n.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);