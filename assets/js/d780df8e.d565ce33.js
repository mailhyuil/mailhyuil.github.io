"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["931872"],{211197:function(n,e,s){s.r(e),s.d(e,{frontMatter:()=>o,toc:()=>a,default:()=>d,metadata:()=>r,assets:()=>l,contentTitle:()=>c});var r=JSON.parse('{"id":"cicd github actions/cicd github actions","title":"github actions","description":"\uC21C\uC11C","source":"@site/docs/cicd github actions/cicd github actions.md","sourceDirName":"cicd github actions","slug":"/cicd github actions/","permalink":"/docs/cicd github actions/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"cicd github actions uses","permalink":"/docs/cicd github actions/cicd github actions uses"},"next":{"title":"CI/CD Jenkins","permalink":"/docs/category/cicd-jenkins"}}'),t=s(447259),i=s(255511);let o={},c="github actions",l={},a=[{value:"\uC21C\uC11C",id:"\uC21C\uC11C",level:2},{value:"\uBCC0\uC218 \uC124\uC815",id:"\uBCC0\uC218-\uC124\uC815",level:2},{value:".github/workflows/deploy.yaml",id:"githubworkflowsdeployyaml",level:2},{value:"slack-notify workflow",id:"slack-notify-workflow",level:2},{value:"deploy workflow",id:"deploy-workflow",level:2}];function u(n){let e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"github-actions",children:"github actions"})}),"\n",(0,t.jsx)(e.h2,{id:"\uC21C\uC11C",children:"\uC21C\uC11C"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sh",children:"1. \uB808\uD3EC\uC9C0\uD1A0\uB9AC \uC0DD\uC131\r\n2. local ssh key \uAE43\uD5C8\uBE0C\uC5D0 \uB4F1\uB85D (ssh-keygen isa_rsa.pub \uD30C\uC77C)\r\n3. ec2 \uC11C\uBC84 ssh key \uAE43\uD5C8\uBE0C\uC5D0 \uB4F1\uB85D (ssh-keygen isa_rsa.pub \uD30C\uC77C)\r\n4. ec2 git \uC124\uCE58 (sudo yum install git)\r\n5. git init -> git remote add ssh_url\r\n6. output files gitignore\r\n7. \uC2AC\uB799, \uB514\uC2A4\uCF54\uB4DC \uC5F0\uB3D9\r\n8. test \uB4F1\uB4F1 \uCD94\uAC00\r\n9. repository Actions \uD0ED\uC5D0\uC11C nodejs \uCD94\uAC00\r\n10. \uC124\uC815\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\uBCC0\uC218-\uC124\uC815",children:"\uBCC0\uC218 \uC124\uC815"}),"\n",(0,t.jsx)(e.p,{children:"repository -> settings -> secrets and variables -> Actions"}),"\n",(0,t.jsx)(e.h2,{id:"githubworkflowsdeployyaml",children:".github/workflows/deploy.yaml"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'name: Deploy Client\r\non:\r\n  push:\r\n    branches:\r\n      - main\r\npermissions:\r\n  contents: read\r\nenv:\r\n  SSH_USER: ubuntu\r\n  SSH_HOST: 103.218.158.175\r\n  DEPLOY_PATH: /home/ubuntu/samil-client\r\njobs:\r\n  deploy:\r\n    name: Deploy Client\r\n    runs-on: self-hosted\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n        with:\r\n          fetch-depth: 0\r\n          ref: main\r\n      - name: Install and Build\r\n        run: |\r\n          yarn install\r\n          yarn build\r\n      - name: Upload files\r\n        run: |\r\n          ssh -i ./scripts/samil-key.pem -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "rm -rf ${{ env.DEPLOY_PATH }}/.output"\r\n          ssh -i ./scripts/samil-key.pem -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "mkdir ${{ env.DEPLOY_PATH }}/.output"\r\n          scp -i ./scripts/samil-key.pem -r .output ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.DEPLOY_PATH }}\r\n          scp -i ./scripts/samil-key.pem -r .env.production ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.DEPLOY_PATH }}\r\n          scp -i ./scripts/samil-key.pem -r ecosystem.config.js ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.DEPLOY_PATH }}\r\n      - name: Run Process Manager\r\n        run: |\r\n          ssh -i ./scripts/samil-key.pem -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "pm2 restart ${{ env.DEPLOY_PATH }}/ecosystem.config.js"\r\n          ssh -i ./scripts/samil-key.pem -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "pm2 save"\n'})}),"\n",(0,t.jsx)(e.h2,{id:"slack-notify-workflow",children:"slack-notify workflow"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"on: push\r\nname: Slack Notification Demo\r\njobs:\r\n  slackNotification:\r\n    name: Slack Notification\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n      - name: Slack Notification\r\n        uses: rtCamp/action-slack-notify@v2\r\n        env:\r\n          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"deploy-workflow",children:"deploy workflow"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"appleboy/ssh-action \uC0AC\uC6A9"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'name: deploy\r\n  on:\r\n    workflow_run:\r\n      workflow: ["test_workflow", "lint_workflow"]\r\n      types:\r\n        - completed\r\n  jobs:\r\n    deploy:\r\n      runs-on: ubuntu-latest\r\n      steps:\r\n      - name: remote-ssh\r\n        uses: appleboy/ssh-action@v0.1.8\r\n        with:\r\n          host: ${{ secrets.HOST }}\r\n          username: ${{ secrets.USERNAME }}\r\n          key: ${{ secrets.KEY }}\r\n          port: ${{ secrets.PORT }}\r\n          script: |\r\n            cd my_server\r\n            git pull\r\n            pm2 restart ecosystem.config.js\n'})})]})}function d(n={}){let{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},255511:function(n,e,s){s.d(e,{R:()=>o,x:()=>c});var r=s(596363);let t={},i=r.createContext(t);function o(n){let e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);