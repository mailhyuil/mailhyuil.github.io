"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["623731"],{334458:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>o,toc:()=>l,default:()=>d,metadata:()=>r,assets:()=>c,contentTitle:()=>i});var r=JSON.parse('{"id":"react & nextjs/next base SSG","title":"next SSG (Static Site Generation)","description":"\uBE4C\uB4DC \uC2DC\uC5D0 HTML\uC774 \uC0DD\uC131\uB418\uACE0, \uB9E4 \uC694\uCCAD\uB9C8\uB2E4 \uC7AC\uC0AC\uC6A9","source":"@site/docs/react & nextjs/next base SSG.md","sourceDirName":"react & nextjs","slug":"/react & nextjs/next base SSG","permalink":"/docs/react & nextjs/next base SSG","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"React & Next.js","permalink":"/docs/category/react--nextjs"},"next":{"title":"next base Server Component vs Client Component","permalink":"/docs/react & nextjs/next base SSR Server Component vs Client Component"}}'),s=n(447259),a=n(255511);let o={},i="next SSG (Static Site Generation)",c={},l=[];function p(e){let t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"next-ssg-static-site-generation",children:"next SSG (Static Site Generation)"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"\uBE4C\uB4DC \uC2DC\uC5D0 HTML\uC774 \uC0DD\uC131\uB418\uACE0, \uB9E4 \uC694\uCCAD\uB9C8\uB2E4 \uC7AC\uC0AC\uC6A9"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"interface Post {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\n// Next.js will invalidate the cache when a\r\n// request comes in, at most once every 60 seconds.\r\nexport const revalidate = 60;\r\n\r\n// We'll prerender only the params from `generateStaticParams` at build time.\r\n// If a request comes in for a path that hasn't been generated,\r\n// Next.js will server-render the page on-demand.\r\nexport const dynamicParams = true; // or false, to 404 on unknown paths\r\n\r\nexport async function generateStaticParams() {\r\n  const posts: Post[] = await fetch(\"https://api.vercel.app/blog\").then(res => res.json());\r\n  return posts.map(post => ({\r\n    id: String(post.id),\r\n  }));\r\n}\r\n\r\nexport default async function Page({ params }: { params: Promise<{ id: string }> }) {\r\n  const { id } = await params;\r\n  const post: Post = await fetch(`https://api.vercel.app/blog/${id}`).then(res => res.json());\r\n  return (\r\n    <main>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n    </main>\r\n  );\r\n}\n"})})]})}function d(e={}){let{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},255511:function(e,t,n){n.d(t,{R:()=>o,x:()=>i});var r=n(596363);let s={},a=r.createContext(s);function o(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);