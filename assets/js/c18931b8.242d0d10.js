"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[123448],{529087:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(596363);const a={},s=n.createContext(a);function i(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:r},e.children)}},840867:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"db-prisma/prisma update relation - PUT \ubc29\uc2dd\uc77c \ub54c","title":"prisma update relation (PUT \ubc29\uc2dd\uc77c \ub54c)","description":"","source":"@site/docs/db-prisma/prisma update relation - PUT \ubc29\uc2dd\uc77c \ub54c.md","sourceDirName":"db-prisma","slug":"/db-prisma/prisma update relation - PUT \ubc29\uc2dd\uc77c \ub54c","permalink":"/docs/db-prisma/prisma update relation - PUT \ubc29\uc2dd\uc77c \ub54c","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prisma satisfies","permalink":"/docs/db-prisma/prisma type satisfies"},"next":{"title":"prisma where date","permalink":"/docs/db-prisma/prisma where DateTime"}}');var a=t(447259),s=t(529087);const i={},o="prisma update relation (PUT \ubc29\uc2dd\uc77c \ub54c)",d={},p=[];function m(e){const r={code:"code",h1:"h1",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"prisma-update-relation-put-\ubc29\uc2dd\uc77c-\ub54c",children:"prisma update relation (PUT \ubc29\uc2dd\uc77c \ub54c)"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"private async updateSomeRelation(\r\n  tx: Prisma.TransactionClient,\r\n  productId: string,\r\n  existing: Some[],\r\n  somes: CreateSomeDTO[],\r\n) {\r\n  const map = new Map(existing.map((i) => [i.id, i]));\r\n  for (const some of somes) {\r\n    if (!some.id) {\r\n      // id\uac00 \uc5c6\uc73c\uba74 \uc0c8\ub85c \uc0dd\uc131\r\n      await tx.some.create({\r\n        data: {\r\n          ...some,\r\n          product: {\r\n            connect: { id: productId },\r\n          },\r\n        },\r\n      });\r\n    } else if (map.has(some.id)) {\r\n      // id\uac00 \uc788\uace0 CreateDTO\uac00 \uc788\uc73c\uba74 \uc5c5\ub370\uc774\ud2b8\r\n      await tx.some.update({\r\n        where: { id: some.id },\r\n        data: some,\r\n      });\r\n    } else {\r\n      // id\uac00 \uc788\uace0 CreateDTO\uac00 \uc5c6\uc73c\uba74 \uc0ad\uc81c\r\n      await tx.some.delete({\r\n        where: { id: some.id },\r\n      });\r\n    }\r\n  }\r\n}\n"})})]})}function c(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);