"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["928759"],{311149:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>s,toc:()=>g,default:()=>d,metadata:()=>t,assets:()=>l,contentTitle:()=>a});var t=JSON.parse('{"id":"go/go http fiber \uC138\uD305 settings","title":"go fiber","description":"install","source":"@site/docs/go/go http fiber \uC138\uD305 settings.md","sourceDirName":"go","slug":"/go/go http fiber \uC138\uD305 settings","permalink":"/docs/go/go http fiber \uC138\uD305 settings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"go fiber validator","permalink":"/docs/go/go http fiber validator"},"next":{"title":"go fiber","permalink":"/docs/go/go http fiber"}}'),o=n(447259),i=n(255511);let s={},a="go fiber",l={},g=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2}];function c(e){let r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"go-fiber",children:"go fiber"})}),"\n",(0,o.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-sh",children:"# fiber\r\ngo get github.com/gofiber/fiber/v2\r\n\r\n# dotenv\r\ngo get github.com/joho/godotenv\n"})}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:"usage"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-go",children:'package main\r\n\r\nimport (\r\n	"log"\r\n	"os"\r\n\r\n	"github.com/gofiber/fiber/v2"\r\n	"github.com/gofiber/fiber/v2/middleware/cors"\r\n	"github.com/gofiber/fiber/v2/middleware/logger"\r\n	"github.com/gofiber/fiber/v2/middleware/recover"\r\n	"github.com/gofiber/fiber/v2/middleware/compress"\r\n	"github.com/gofiber/fiber/v2/middleware/helmet"\r\n	"github.com/gofiber/fiber/v2/middleware/limiter"\r\n	"github.com/gofiber/fiber/v2/middleware/etag"\r\n	"github.com/gofiber/fiber/v2/middleware/cache"\r\n\r\n	"github.com/joho/godotenv"\r\n)\r\n\r\nfunc main() {\r\n	err := godotenv.Load()\r\n\r\n	if err != nil {\r\n	  log.Fatal("Error loading .env file")\r\n	}\r\n\r\n    app := fiber.New()\r\n\r\n	/** Recover Settings */\r\n	/** - Recover middleware handles panics and sends a 500 response */\r\n	/** - It also logs the error to the console */\r\n	app.Use(recover.New())\r\n	/** CORS Settings */\r\n	app.Use(cors.New())\r\n	/** Logger */\r\n	app.Use(logger.New())\r\n	/** helmet */\r\n	app.Use(helmet.New())\r\n	/** Compress */\r\n	app.Use(compress.New())\r\n	/** Rate Limiter */\r\n	app.Use(limiter.New())\r\n	/** Etag */\r\n	app.Use(etag.New())\r\n	/** Cache */\r\n	app.Use(cache.New())\r\n	/** Json Guard */\r\n	app.Use(func (c *fiber.Ctx) error {\r\n        if c.Is("json") {\r\n            return c.Next()\r\n        }\r\n        return c.SendString("Only JSON allowed!")\r\n    })\r\n\r\n	/** Handlers */\r\n    app.Get("/", func (c *fiber.Ctx) error {\r\n        return c.SendString("Hello, World!")\r\n    })\r\n\r\n	port := os.Getenv("PORT")\r\n\r\n	if port == "" {\r\n		port = ":3000"\r\n	}\r\n\r\n    log.Fatal(app.Listen(port))\r\n}\n'})})]})}function d(e={}){let{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},255511:function(e,r,n){n.d(r,{R:()=>s,x:()=>a});var t=n(596363);let o={},i=t.createContext(o);function s(e){let r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);