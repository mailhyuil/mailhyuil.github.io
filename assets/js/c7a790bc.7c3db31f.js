"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[890319],{318645:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"how to implement/\ud37c\ub110","title":"\ud37c\ub110","description":"flow.service.ts","source":"@site/docs/how to implement/\ud37c\ub110.md","sourceDirName":"how to implement","slug":"/how to implement/\ud37c\ub110","permalink":"/docs/how to implement/\ud37c\ub110","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud14d\uc2a4\ud2b8 \ub9c8\uc2a4\ud0b9","permalink":"/docs/how to implement/\ud14d\uc2a4\ud2b8 \ub9c8\uc2a4\ud0b9"},"next":{"title":"Java","permalink":"/docs/category/java"}}');var t=n(447259),s=n(529087);const i={},c="\ud37c\ub110",a={},l=[{value:"flow.service.ts",id:"flowservicets",level:2},{value:"payment.component.ts",id:"paymentcomponentts",level:2},{value:"form-escrow.component.ts",id:"form-escrowcomponentts",level:2}];function m(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"\ud37c\ub110",children:"\ud37c\ub110"})}),"\n",(0,t.jsx)(r.h2,{id:"flowservicets",children:"flow.service.ts"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"\ud37c\ub110 flow\ub97c \uad00\ub9ac\ud558\ub294 \uc11c\ube44\uc2a4"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { inject, Injectable, OnDestroy } from "@angular/core";\r\nimport { ActivatedRoute, NavigationEnd, Router } from "@angular/router";\r\nimport { filter, Subscription } from "rxjs";\r\n\r\n@Injectable({\r\n  providedIn: "root",\r\n})\r\nexport class FlowService implements OnDestroy {\r\n  private pageCount: number; // \ub8e8\ud2b8 \ud398\uc774\uc9c0(payment.component)\ub85c\ubd80\ud130 \uc774\ub3d9\ud55c \ud398\uc774\uc9c0 \uc218\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n  }\r\n\r\n  async start(url: string) {\r\n    this.pageCount = 0;\r\n\r\n    const sub = this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event) => {\r\n      this.pageCount++;\r\n    });\r\n    this.subscriptions.push(sub);\r\n\r\n    this.router.navigate([url], {\r\n      relativeTo: this.route,\r\n    });\r\n  }\r\n\r\n  async end() {\r\n    if (this.pageCount > 0) {\r\n      // \ub8e8\ud2b8 \ud398\uc774\uc9c0\ub85c \uc774\ub3d9 (\ub8e8\ud2b8 \ud398\uc774\uc9c0\ub85c\ubd80\ud130 \uc774\ub3d9\ud55c \ud398\uc774\uc9c0 \uc218\ub9cc\ud07c \ub4a4\ub85c\uac00\uae30)\r\n      window.history.go(-this.pageCount);\r\n    }\r\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"paymentcomponentts",children:"payment.component.ts"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { Component, inject } from "@angular/core";\r\nimport { FormsModule, NonNullableFormBuilder, ReactiveFormsModule } from "@angular/forms";\r\nimport { ActivatedRoute, Router, RouterModule } from "@angular/router";\r\nimport { FlowService } from "@/client/src/services/flow.service";\r\nimport { FormEscrowComponent } from "./components/form-escrow/form-escrow.component";\r\n\r\n@Component({\r\n  selector: "app-payment",\r\n  standalone: true,\r\n  templateUrl: "./payment.component.html",\r\n  styleUrls: ["./payment.component.scss"],\r\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule, FormEscrowComponent],\r\n})\r\nexport class PaymentComponent {\r\n  isEscrowAvailable = true;\r\n  isSMSCertificationRequired = false;\r\n  isPINRequired = false;\r\n  router = inject(Router);\r\n  route = inject(ActivatedRoute);\r\n  flowService = inject(FlowService);\r\n  fb = inject(NonNullableFormBuilder);\r\n  form = this.fb.group({});\r\n\r\n  async submit() {\r\n    if (this.isEscrowAvailable) {\r\n      await this.flowService.start("escrow"); // \uc5d0\uc2a4\ud06c\ub85c \ud750\ub984 \uc2dc\uc791\ud558\uae30\r\n    }\r\n    if (this.isSMSCertificationRequired) {\r\n      await this.flowService.start("sms"); // SMS \uc778\uc99d \ud750\ub984 \uc2dc\uc791\ud558\uae30\r\n    }\r\n    if (this.isPINRequired) {\r\n      await this.flowService.start("payment-password"); // \uacb0\uc81c \ube44\ubc00\ubc88\ud638 \uc785\ub825 \ud750\ub984 \uc2dc\uc791\ud558\uae30\r\n    }\r\n    await this.confirm();\r\n  }\r\n  async confirm() {\r\n    const body = this.form.value;\r\n    console.log(body);\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"form-escrowcomponentts",children:"form-escrow.component.ts"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { Component, inject } from "@angular/core";\r\nimport { FlowService } from "@/client/src/services/flow.service";\r\n\r\n@Component({\r\n  selector: "app-form-escrow",\r\n  templateUrl: "./form-escrow.component.html",\r\n  styleUrls: ["./form-escrow.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class FormEscrowComponent {\r\n  flowService = inject(FlowService);\r\n  submit() {\r\n    // do something\r\n    this.flowService.end();\r\n  }\r\n}\n'})})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},529087:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var o=n(596363);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);