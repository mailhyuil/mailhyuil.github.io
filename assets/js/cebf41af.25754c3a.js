"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[570791],{529087:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var o=r(596363);const l={},a=o.createContext(l);function s(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},530994:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"angular/angular form ControlValueAccessor","title":"angular ControlValueAccessor","description":"forms API\uc640 native element\ub97c \uc5f0\uacb0\ud558\ub294 \ube0c\ub9bf\uc9c0 \uc5ed\ud560\uc744 \ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4","source":"@site/docs/angular/angular form ControlValueAccessor.md","sourceDirName":"angular","slug":"/angular/angular form ControlValueAccessor","permalink":"/docs/angular/angular form ControlValueAccessor","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular form ControlValueAccessor directive","permalink":"/docs/angular/angular form ControlValueAccessor directive"},"next":{"title":"angular form FormArray","permalink":"/docs/angular/angular form FormArray"}}');var l=r(447259),a=r(529087);const s={},t="angular ControlValueAccessor",c={},i=[{value:"interface ControlValueAccessor",id:"interface-controlvalueaccessor",level:2},{value:"implements",id:"implements",level:2},{value:"angular ControlValueAccessor",id:"angular-controlvalueaccessor-1",level:2}];function u(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"angular-controlvalueaccessor",children:"angular ControlValueAccessor"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"forms API\uc640 native element\ub97c \uc5f0\uacb0\ud558\ub294 \ube0c\ub9bf\uc9c0 \uc5ed\ud560\uc744 \ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"\ub2e8\uc21c\ud788 \uc6d0\uc2dc\uac12\uc744 \ubc1b\uc544\uc11c \uc0ac\uc6a9\ud55c\ub2e4\uba74 \ud544\uc694\uc5c6\ub2e4."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"\uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ucee4\uc2a4\ud140 \ucee8\ud2b8\ub864\uc744 \ub9cc\ub4e4\ub54c \uc0ac\uc6a9\ud55c\ub2e4."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"interface-controlvalueaccessor",children:"interface ControlValueAccessor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"interface ControlValueAccessor {\r\n  writeValue(obj: any): void\r\n  registerOnChange(fn: any): void\r\n  registerOnTouched(fn: any): void\r\n  setDisabledState(isDisabled: boolean)?: void\r\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"implements",children:"implements"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"ControlValueAccessor\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"CheckboxControlValueAccessor;\r\nDefaultValueAccessor;\r\nNumberValueAccessor;\r\nRadioControlValueAccessor;\r\nRangeValueAccessor;\r\nSelectControlValueAccessor;\r\nSelectMultipleControlValueAccessor;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"angular-controlvalueaccessor-1",children:"angular ControlValueAccessor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"providers: [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: SomeComponent,\r\n    multi: true,\r\n  },\r\n],\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"control?: FormControl;\r\n\r\nngOnInit(): void {\r\n  // /** FormControl Instance \uc8fc\uc785 */\r\n  const ngControl: NgControl | null = this.injector.get(NgControl, null);\r\n  if (ngControl) {\r\n    this.control = ngControl.control as FormControl;\r\n  }\r\n}\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"value: Type[] = [];\r\nisDisabled = false;\r\nisLoading = false;\r\nisActive = false;\r\n\r\nonChange (value: Type[]) {\r\n  this.value = value;\r\n};\r\nwriteValue(obj: any): void {\r\n  this.value = obj;\r\n}\r\nonTouched () {};\r\nregisterOnChange(fn: any): void {\r\n  this.onChange = fn;\r\n}\r\nregisterOnTouched(fn: any): void {\r\n  this.onTouched = fn;\r\n}\r\nsetDisabledState?(isDisabled: boolean): void {\r\n  this.isDisabled = isDisabled;\r\n}\r\n\r\ncustomChangeValueEvent(){\r\n  // ..logic\r\n    this.writeValue(newValue);\r\n    this.onChange(this.value);\r\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}}}]);