"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[147623],{529087:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(596363);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},755277:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"x design pattern/SOLID Principle","title":"SOLID Principle","description":"\ud56d\uc0c1 \'\ubcc0\ud654\'\ub97c \uc5fc\ub450\uc5d0 \ub450\uace0 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\ub77c","source":"@site/docs/x design pattern/SOLID Principle.md","sourceDirName":"x design pattern","slug":"/x design pattern/SOLID Principle","permalink":"/docs/x design pattern/SOLID Principle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SOLID ISP & Strategy Pattern","permalink":"/docs/x design pattern/SOLID ISP & strategy pattern"},"next":{"title":"design pattern bridge vs adapter","permalink":"/docs/x design pattern/Structural adapter vs bridge"}}');var i=r(447259),o=r(529087);const a={},s="SOLID Principle",c={},l=[{value:"SRP - Single Responsibility Principle",id:"srp---single-responsibility-principle",level:2},{value:"OCP - Open Closed Principle",id:"ocp---open-closed-principle",level:2},{value:"bad",id:"bad",level:3},{value:"good",id:"good",level:3},{value:"LSP - Liskov Substitution Principle",id:"lsp---liskov-substitution-principle",level:2},{value:"ISP - Interface Segregation Principle",id:"isp---interface-segregation-principle",level:2},{value:"bad",id:"bad-1",level:3},{value:"good",id:"good-1",level:3},{value:"DIP - Dependency Inversion Principle",id:"dip---dependency-inversion-principle",level:2},{value:"bad",id:"bad-2",level:3},{value:"good",id:"good-2",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"solid-principle",children:"SOLID Principle"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\ud56d\uc0c1 '\ubcc0\ud654'\ub97c \uc5fc\ub450\uc5d0 \ub450\uace0 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\ub77c"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uac19\uc740 \uc774\uc720\ub85c \ubcc0\ud654\ud558\ub294 \uac83\ub07c\ub9ac \ubb36\uace0, \ub2e4\ub978 \uc774\uc720\ub85c \ubcc0\ud654\ud558\ub294 \uac83\ub07c\ub9ac\ub294 \ubd84\ub9ac\ud558\ub77c."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"srp---single-responsibility-principle",children:"SRP - Single Responsibility Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ucc45\uc784\uc740 \ud558\ub098\uc5ec\uc57c \ud55c\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"\uac19\uc740 \uc218\uc900\uc758 \uc11c\ube44\uc2a4"\ub97c \uc11c\ub85c\uc758 \uc11c\ube44\uc2a4\uc5d0 \ub0b4\uc5d0\uc11c \uc8fc\uc785\ud558\uc9c0 \ub9d0\uc544\ub77c'}),"\n",(0,i.jsx)(n.p,{children:"order \uacfc email \uc740 \uac19\uc740 \uc800\uc218\uc900\uc758 \uc11c\ube44\uc2a4"}),"\n",(0,i.jsx)(n.p,{children:"\ub9cc\uc57d shopping-mall\uc774\ub77c\ub294 \uace0\uc218\uc900\uc758 \uc11c\ube44\uc2a4\uac00 \uc788\ub2e4\uba74 \uc774 \uc11c\ube44\uc2a4 \ub0b4\uc5d0\uc11c\ub294 order, email \uc11c\ube44\uc2a4\ub97c \uc8fc\uc785\ud560 \uc218 \uc788\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc5b4\ub5a4 \ud074\ub798\uc2a4\ub97c \ubcc0\uacbd\ud574\uc57c \ud558\ub294 \uc774\uc720\ub294 \uc624\uc9c1 \ud558\ub098\ubfd0 \uc774\uc5b4\uc57c \ud55c\ub2e4. \uac19\uc740 \uc774\uc720\ub85c \ubcc0\ud654\ud558\ub294 \uac83\ub07c\ub9ac \ubb36\uace0, \ub2e4\ub978 \uc774\uc720\ub85c \ubcc0\ud654\ud558\ub294 \uac83\ub07c\ub9ac\ub294 \ubd84\ub9ac\ud558\ub77c."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Service\ub97c \ub098\ub204\uace0 \uc774\ubca4\ud2b8\ub85c \uc18c\ud1b5\ud574\ub77c"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ocp---open-closed-principle",children:"OCP - Open Closed Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\ud655\uc7a5\uc5d0\ub294 \uc5f4\ub824\uc788\uace0, \ubcc0\uacbd\uc5d0\ub294 \ub2eb\ud600\uc788\uc5b4\uc57c \ud55c\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uba74, \uae30\uc874\uc758 \ucf54\ub4dc\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uace0 \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4\uc57c \ud55c\ub2e4."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Injectable()\r\nexport class PaymentService {\r\n  //\u274c Bad\r\n  //Everytime we add a new payment method we need to modify the code\r\n  //\uc0c8\ub85c\uc6b4 \uacb0\uc81c \ubc29\ubc95\uc774 \ucd94\uac00\ub420 \ub54c\ub9c8\ub2e4 \ucf54\ub4dc\ub97c \uc218\uc815\ud574\uc57c \ud55c\ub2e4.\r\n  public badProcessPayment(order: Order, paymentMethod: string): void {\r\n    if (paymentMethod === "creditCard") {\r\n      // Process credit card payment\r\n    } else if (paymentMethod === "paypal") {\r\n      // Process PayPal payment\r\n    } else if (paymentMethod === "bitcoin") {\r\n      // Process Bitcoin payment\r\n    } else {\r\n      // Handle other payment methods\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Injectable()\r\nexport class PaymentService {\r\n  //\u2705 Good\r\n  // \uc0c8\ub85c\uc6b4 \uacb0\uc81c \ubc29\ubc95\uc774 \ucd94\uac00\ub418\uba74 PaymentGateway\ub97c \uc218\uc815\ud558\uba74 \ub41c\ub2e4.\r\n  private paymentGateways: Record<string, PaymentGateway> = {};\r\n\r\n  public registerPaymentGateway(paymentMethod: PAYMENT_METHOD, gateway: PaymentGateway) {\r\n    this.paymentGateways[paymentMethod] = gateway;\r\n  }\r\n\r\n  public async processPayment(order: Order, paymentMethod: PAYMENT_METHOD) {\r\n    const gateway = this.paymentGateways[paymentMethod];\r\n    if (gateway) {\r\n      await gateway.processPayment(order);\r\n    } else {\r\n      throw new Error("Unsupported payment method!");\r\n    }\r\n  }\r\n}\r\n\r\n// \u2705 Good\r\n//Extending the payment service without modifying existing code (Open-Closed Principle)\r\nexport interface PaymentGateway {\r\n  processPayment(order: Order): void;\r\n}\r\n\r\nexport class CreditCardGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process credit card payment\r\n  }\r\n}\r\n\r\nexport class PayPalGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process PayPal payment\r\n  }\r\n}\r\n\r\nexport class BitcoinGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process Bitcoin payment\r\n  }\r\n}\r\n\r\n//Maybe you want to add support for a new payment Method \ud83e\udd14 \ud83d\udc47\r\nexport class ApplePayGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process ApplePay payment\r\n  }\r\n}\r\n\r\nexport enum PAYMENT_METHOD {\r\n  CREDIT_CARD = "credit-card",\r\n  PAYPAL = "paypal",\r\n  BITCOIN = "bitcoin",\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"lsp---liskov-substitution-principle",children:"LSP - Liskov Substitution Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\ubd80\ubaa8 \ud074\ub798\uc2a4\ub294 \uc790\uc2dd \uac1d\uccb4\uac00 \uc644\uc804\ud788 \ub300\uccb4\ud560 \uc218 \uc788\uc5b4\uc57c \ud55c\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc815\ub9ac\ud558\uba74 LSP\ub294 \uc11c\ube0c \ud074\ub798\uc2a4\uac00 \uc288\ud37c \ud074\ub798\uc2a4\uc758 \ucc45\uc784(\ud589\uc704)\uc744 \ubb34\uc2dc\ud558\uac70\ub098 \uc7ac\uc815\uc758\ud558\uc9c0 \uc54a\uace0 \ud655\uc7a5\ub9cc \uc218\ud589\ud55c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.p,{children:"\ubd80\ubaa8\uac00 \uc218\ud589\ud558\uace0 \uc788\ub294 \ucc45\uc784\uc744 \uadf8\ub300\ub85c \uc218\ud589\ud558\uba74\uc11c \ucd94\uac00\uc801\uc778 \ud544\ub4dc\ub098 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc0c1\uc18d\uc744 \ud558\ub294 \uac83\uc774 \ubc14\ub78c\uc9c1\ud558\uba70 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc758 \ucc45\uc784\uc744 \ubcc0\ud654\uc2dc\ud0a4\ub294 \uae30\ub2a5\uc740 LSP\ubc95\uce59\uc5d0 \uc704\ubc30 \ub41c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc790\uc2dd\uc740 \ubd80\ubaa8\uc758 \ubaa8\ub4e0 \ud589\uc704\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc5b4\uc57c \ud55c\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'\uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 "is-a" \uad00\uacc4\uac00 \uc131\ub9bd\ud558\ub294\uc9c0\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4.'}),"\n",(0,i.jsx)(n.p,{children:"is-a = \ub9ac\uc2a4\ucf54\ud504 \uce58\ud658\uc6d0\uce59\uc744 \uc9c0\ud0a4\uba74\uc11c \ubd80\ubaa8\uc758 \ubaa8\ub4e0 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'class KingDuck {\r\n  fly() {\r\n    console.log("I can fly");\r\n  }\r\n}\r\n\r\n// PrincessDuck\uc774 \ub0a0 \uc218 \uc5c6\ub2e4\uba74 KingDuck\uc758 \uc790\ub9ac\ub97c \ub300\uccb4\ud560 \uc218 \uc5c6\ub2e4.\r\nclass PrincessDuck extends KingDuck {\r\n  fly() {\r\n    console.log("I can\'t fly");\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"isp---interface-segregation-principle",children:"ISP - Interface Segregation Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc790\uc2e0\uc774 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uba54\uc18c\ub4dc\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uc544\uc57c \ud55c\ub2e4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"interface\ub97c \uc6a9\ub3c4\uc5d0 \ub9de\uac8c \ub098\ub220\ub77c"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad-1",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"//Bad \u274c\r\n//Not seperating the concerns\r\nexport interface Notification {\r\n  to?: string; //< for email\r\n  subject?: string; //< for email\r\n  body?: string; //< for email & push\r\n  phoneNumber?: string; //< for sms\r\n  message?: string; //< for sms\r\n  userId?: string; //< for push\r\n  title?: string; //< for push\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//AMAZON Simple Email Service Instance\r\nconst ses: any = {};\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  //Bad \u274c\r\n  //interface(DTO)\uac00 \uc0ac\uc6a9\ud558\uc9c0\ub3c4 \uc54a\ub294 property\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4.\r\n  async badSendEmail(notification: Notification) {\r\n    // Define the parameters for the email\r\n    const params = {\r\n      Source: "no-reply@coderone.io",\r\n      Destination: {\r\n        ToAddresses: [notification.to],\r\n      },\r\n      Message: {\r\n        Subject: {\r\n          Data: notification.subject,\r\n        },\r\n        Body: {\r\n          Text: {\r\n            Data: notification.body,\r\n          },\r\n        },\r\n      },\r\n    };\r\n    await ses.sendEmail(params);\r\n  }\r\n  //Bad \u274c\r\n  badSendSMS(notification: Notification) {\r\n    // Logic to send SMS notification\r\n  }\r\n  //Bad \u274c\r\n  badSendPushNotification(notification: Notification) {\r\n    // Logic to send push notification\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good-1",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"//Good \u2705\r\nexport interface EmailNotification {\r\n  to: string;\r\n  subject: string;\r\n  body: string;\r\n}\r\n\r\nexport interface SMSNotification {\r\n  phoneNumber: string;\r\n  message: string;\r\n}\r\n\r\nexport interface PushNotification {\r\n  userId: string;\r\n  title: string;\r\n  body: string;\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//AMAZON Simple Email Service Instance\r\nconst ses: any = {};\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  //Good \u2705\r\n  sendEmail(notification: EmailNotification) {\r\n    // Logic to send email notification\r\n  }\r\n  //Good \u2705\r\n  sendSMS(notification: SMSNotification): void {\r\n    // Logic to send SMS notification\r\n  }\r\n  //Good \u2705\r\n  sendPushNotification(notification: PushNotification): void {\r\n    // Logic to send push notification\r\n  }\r\n}\r\n\r\n/* Controllers */\r\n@Controller("email")\r\nexport class EmailController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendEmail(notification: EmailNotification): void {\r\n    this.notificationService.sendEmail(notification);\r\n  }\r\n}\r\n\r\n@Controller("push-notification")\r\nexport class PushNotificationController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendPushNotification(notification: PushNotification): void {\r\n    this.notificationService.sendPushNotification(notification);\r\n  }\r\n}\r\n\r\n@Controller("sms")\r\nexport class SMSController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendSMS(notification: SMSNotification): void {\r\n    this.notificationService.sendSMS(notification);\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"dip---dependency-inversion-principle",children:"DIP - Dependency Inversion Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc758\uc874\uc131 \uc5ed\uc804 \uc6d0\uce59"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"\uace0\uc218\uc900 \ubaa8\ub4c8"\uc740 "\uc800\uc218\uc900 \ubaa8\ub4c8"\uc758 \uad6c\ud604\uc5d0 \uc758\uc874\ud574\uc11c\ub294 \uc548\ub41c\ub2e4.'}),"\n",(0,i.jsx)(n.p,{children:'"\uc800\uc218\uc900 \ubaa8\ub4c8"\uc774 "\uace0\uc218\uc900 \ubaa8\ub4c8"\uc5d0\uc11c \uc815\uc758\ud55c \ucd94\uc0c1 \ud0c0\uc785\uc5d0 \uc758\uc874\ud574\uc57c \ud55c\ub2e4.'}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uc800\uc218\uc900 \ubaa8\ub4c8\uc744 \uc704\ud55c \uba54\uc18c\ub4dc\ub97c \ub530\ub85c \ub9cc\ub4e4\uc9c0 \ub9d0\uc544\ub77c!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad-2",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//Bad \u274c\r\nconst s3: any = {};\r\nconst cloudStorage: any = {};\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n  public findAmazonS3File(filename: string) {\r\n    // Custom S3 Implementation here\r\n    // Set up S3 getObject parameters\r\n    const params = {\r\n      Bucket: "STORAGE",\r\n      Key: process.env.AWS_key,\r\n    };\r\n\r\n    // Fetch the file from S3\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        throw new Error("Error fetching the file from S3");\r\n      } else {\r\n        return data.Body; // Return the file data in the response\r\n      }\r\n    });\r\n  }\r\n\r\n  public async findGoogleCloudStorageFile(filename: string) {\r\n    // Google Cloud Storage specific implementation\r\n    // To adhere to DIP\r\n    // Get the file reference\r\n    const bucket = cloudStorage.bucket("STORAGE");\r\n    const file = bucket.file(filename);\r\n\r\n    // Download the file\r\n    const [fileContent] = await file.download();\r\n\r\n    return fileContent;\r\n  }\r\n}\r\n\r\n/* Controllers */\r\nimport { Controller, Get, Param } from "@nestjs/common";\r\nimport { StorageFetcher, StorageService } from "./storage.service";\r\nimport { StorageS3FetcherService } from "./storage-s3-fetcher.service";\r\nimport { StorageCSFetcherService } from "./storage-cs-fetcher.service";\r\n\r\n@Controller("storage")\r\nexport class StorageController {\r\n  constructor(private storageService: StorageFetcher) {}\r\n\r\n  //Bad \u274c\r\n  @Get("file/:filename")\r\n  public badGetFile(@Param("filename") filename: string) {\r\n    return this.storageService.findAmazonS3File(filename);\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good-2",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//Good \u2705\r\n//Use an abstract class to provide a common structure for different implementations\r\n//You have to implement each Storage Service using this\r\nexport interface StorageFetcher {\r\n  findFile(filename: string): any;\r\n}\r\n\r\n//Your Google Cloud Storage instance\r\nconst cloudStorage: any = {};\r\n\r\n//Good \u2705\r\n//This implements the Google Cloud Storage fetching API\r\n@Injectable()\r\nexport class StorageCSFetcherService implements StorageFetcher {\r\n  public async findFile(filename: string) {\r\n    //Google Cloud Storage specific implementation\r\n    //To adhere to DIP\r\n    // Get the file reference\r\n    const bucket = cloudStorage.bucket("STORAGE");\r\n    const file = bucket.file(filename);\r\n\r\n    // Download the file\r\n    const [fileContent] = await file.download();\r\n\r\n    return fileContent;\r\n  }\r\n}\r\n\r\n//Good \u2705\r\n//This implements S3 API for the StorageFetcher\r\n//Allows us to adhere to DIP\r\n@Injectable()\r\nexport class StorageS3FetcherService implements StorageFetcher {\r\n  public findFile(filename: string) {\r\n    //Custom S3 Implementation here\r\n    // Set up S3 getObject parameters\r\n    const params = {\r\n      Bucket: "STORAGE",\r\n      Key: process.env.AWS_key,\r\n    };\r\n\r\n    // Fetch the file from S3\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        throw new Error("Error fetching the file from S3");\r\n      } else {\r\n        return data.Body; // Return the file data in the response\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/* Controllers */\r\nimport { Controller, Get, Param } from "@nestjs/common";\r\nimport { StorageFetcher, StorageService } from "./storage.service";\r\nimport { StorageS3FetcherService } from "./storage-s3-fetcher.service";\r\nimport { StorageCSFetcherService } from "./storage-cs-fetcher.service";\r\n\r\n@Controller("storage")\r\nexport class StorageController {\r\n  constructor(private storageService: StorageFetcher) {}\r\n  //Good \u2705\r\n  @Get("file/:filename")\r\n  public getFile(@Param("filename") filename: string) {\r\n    return this.storageService.findFile(filename);\r\n  }\r\n}\r\n\r\n/* Module */\r\n@Module({\r\n  controllers: [StorageController],\r\n  providers: [\r\n    // StorageS3FetcherService,\r\n    { provide: StorageFetcher, useClass: StorageCSFetcherService },\r\n  ],\r\n})\r\nexport class StorageModule {}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);