"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["379079"],{383678:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>u,metadata:()=>t,assets:()=>l,contentTitle:()=>s});var t=JSON.parse('{"id":"x interactive/matterjs-boilerplate","title":"matterjs-boilerplate","description":"","source":"@site/docs/x interactive/matterjs-boilerplate.md","sourceDirName":"x interactive","slug":"/x interactive/matterjs-boilerplate","permalink":"/docs/x interactive/matterjs-boilerplate","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"matterjs context","permalink":"/docs/x interactive/matterjs context"},"next":{"title":"matterjs","permalink":"/docs/x interactive/matterjs"}}'),i=r(447259),a=r(255511);let o={},s="matterjs-boilerplate",l={},c=[];function d(e){let n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"matterjs-boilerplate",children:"matterjs-boilerplate"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<script lang="ts" setup>\r\nimport {\r\n  Engine,\r\n  Render,\r\n  Runner,\r\n  Bodies,\r\n  Composite,\r\n  Mouse,\r\n  MouseConstraint,\r\n  Body,\r\n  Vector,\r\n} from "matter-js";\r\n\r\nconst matterContainer = ref<HTMLDivElement>();\r\nconst THICCNESS = 60;\r\n\r\nonMounted(() => {\r\n  if (matterContainer.value) {\r\n    var engine = Engine.create();\r\n\r\n    // create a renderer\r\n    var render = Render.create({\r\n      element: matterContainer.value,\r\n      engine: engine,\r\n      options: {\r\n        width: matterContainer.value.clientWidth,\r\n        height: matterContainer.value.clientHeight,\r\n        background: "transparent",\r\n        wireframes: false,\r\n        showAngleIndicator: false,\r\n      },\r\n    });\r\n\r\n    // create two boxes and a ground\r\n    // var boxA = Bodies.rectangle(400, 200, 80, 80);\r\n    // var boxB = Bodies.rectangle(450, 50, 80, 80);\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      let circle = Bodies.circle(i, 10, 30, {\r\n        friction: 0.3,\r\n        frictionAir: 0.00001,\r\n        restitution: 0.8,\r\n      });\r\n      Composite.add(engine.world, circle);\r\n    }\r\n\r\n    var ground = Bodies.rectangle(\r\n      matterContainer.value.clientWidth / 2,\r\n      matterContainer.value.clientHeight + THICCNESS / 2,\r\n      27184,\r\n      THICCNESS,\r\n      { isStatic: true }\r\n    );\r\n\r\n    let leftWall = Bodies.rectangle(\r\n      0 - THICCNESS / 2,\r\n      matterContainer.value.clientHeight / 2,\r\n      THICCNESS,\r\n      matterContainer.value.clientHeight * 5,\r\n      {\r\n        isStatic: true,\r\n      }\r\n    );\r\n\r\n    let rightWall = Bodies.rectangle(\r\n      matterContainer.value.clientWidth + THICCNESS / 2,\r\n      matterContainer.value.clientHeight / 2,\r\n      THICCNESS,\r\n      matterContainer.value.clientHeight * 5,\r\n      { isStatic: true }\r\n    );\r\n\r\n    // add all of the bodies to the world\r\n    Composite.add(engine.world, [ground, leftWall, rightWall]);\r\n\r\n    let mouse = Mouse.create(render.canvas);\r\n    let mouseConstraint = MouseConstraint.create(engine, {\r\n      mouse: mouse,\r\n      constraint: {\r\n        stiffness: 0.2,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      },\r\n    });\r\n    Composite.add(engine.world, mouseConstraint);\r\n    // allow scroll through the canvas\r\n    mouseConstraint.mouse.element.removeEventListener(\r\n      "mousewheel",\r\n      mouseConstraint.mouse.mousewheel\r\n    );\r\n    mouseConstraint.mouse.element.removeEventListener(\r\n      "DOMMouseScroll",\r\n      mouseConstraint.mouse.mousewheel\r\n    );\r\n\r\n    // run the renderer\r\n    Render.run(render);\r\n\r\n    // create runner\r\n    var runner = Runner.create();\r\n\r\n    // run the engine\r\n    Runner.run(runner, engine);\r\n\r\n    function handleResize(matterContainer: HTMLDivElement) {\r\n      // set canvas size to new values\r\n      render.canvas.width = matterContainer.clientWidth;\r\n      render.canvas.height = matterContainer.clientHeight;\r\n\r\n      // reposition ground\r\n      Body.setPosition(\r\n        ground,\r\n        Vector.create(\r\n          matterContainer.clientWidth / 2,\r\n          matterContainer.clientHeight + THICCNESS / 2\r\n        )\r\n      );\r\n\r\n      // reposition right wall\r\n      Body.setPosition(\r\n        rightWall,\r\n        Vector.create(\r\n          matterContainer.clientWidth + THICCNESS / 2,\r\n          matterContainer.clientHeight / 2\r\n        )\r\n      );\r\n    }\r\n\r\n    window.addEventListener("resize", () =>\r\n      handleResize(matterContainer.value)\r\n    );\r\n  }\r\n});\r\n<\/script>\r\n<template>\r\n  <div>\r\n    <div ref="matterContainer" class="relative h-screen"></div>\r\n  </div>\r\n</template>\n'})})]})}function u(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},255511:function(e,n,r){r.d(n,{R:()=>o,x:()=>s});var t=r(596363);let i={},a=t.createContext(i);function o(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);