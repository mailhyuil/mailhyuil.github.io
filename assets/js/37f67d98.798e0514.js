"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[236047],{529087:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(596363);const o={},a=t.createContext(o);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(a.Provider,{value:n},e.children)}},644716:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"angular/angular base interceptor cookie","title":"angular interceptor cookie","description":"cookie\ub294 set\ud560 \uc218 \uc5c6\ub2e4 header\uc5d0 \ub300\uc2e0 set\ud574\ub77c","source":"@site/docs/angular/angular base interceptor cookie.md","sourceDirName":"angular","slug":"/angular/angular base interceptor cookie","permalink":"/docs/angular/angular base interceptor cookie","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular base interceptor api & baseUrl","permalink":"/docs/angular/angular base interceptor api & baseUrl"},"next":{"title":"angular interceptor function","permalink":"/docs/angular/angular base interceptor function"}}');var o=r(447259),a=r(529087);const c={},i="angular interceptor cookie",s={},u=[];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"angular-interceptor-cookie",children:"angular interceptor cookie"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"cookie\ub294 set\ud560 \uc218 \uc5c6\ub2e4 header\uc5d0 \ub300\uc2e0 set\ud574\ub77c"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { HttpHandlerFn, HttpRequest } from "@angular/common/http";\r\nimport { inject } from "@angular/core";\r\nimport { REQUEST } from "../../express.token";\r\nexport function ServerApiInterceptorFn(req: HttpRequest<unknown>, next: HttpHandlerFn) {\r\n  const request = inject(REQUEST, { optional: true });\r\n  if (!request) return next(req);\r\n\r\n  const Authorization = request?.cookies["Authorization"];\r\n  const RefreshToken = request?.cookies["RefreshToken"];\r\n\r\n  const apiReq = req.clone({\r\n    withCredentials: true,\r\n    setHeaders: {\r\n      Authorization,\r\n      RefreshToken,\r\n    },\r\n  });\r\n\r\n  return next(apiReq);\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);