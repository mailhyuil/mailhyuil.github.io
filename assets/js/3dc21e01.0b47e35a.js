"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[749418],{25944:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"nestjs/nest base pipe image-resize - sharp","title":"nest image resize (sharp)","description":"large, medium, small\uc744 \ubc30\uc5f4\ub85c \ubc18\ud658\ud558\ub294 \uc774\uc720","source":"@site/docs/nestjs/nest base pipe image-resize - sharp.md","sourceDirName":"nestjs","slug":"/nestjs/nest base pipe image-resize - sharp","permalink":"/docs/nestjs/nest base pipe image-resize - sharp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest file validation","permalink":"/docs/nestjs/nest base pipe file-validation"},"next":{"title":"nest base pipe image-upload","permalink":"/docs/nestjs/nest base pipe image-upload"}}');var i=n(447259),t=n(529087);const a={},l="nest image resize (sharp)",o={},m=[{value:"install",id:"install",level:2},{value:"module",id:"module",level:2},{value:"image-resize.pipe.ts",id:"image-resizepipets",level:2},{value:"controller",id:"controller",level:2}];function p(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"nest-image-resize-sharp",children:"nest image resize (sharp)"})}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsx)(r.p,{children:"large, medium, small\uc744 \ubc30\uc5f4\ub85c \ubc18\ud658\ud558\ub294 \uc774\uc720"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsx)(r.p,{children:"\uc774\ubbf8\uc9c0 \ud06c\uae30\ub97c \ub7f0\ud0c0\uc784\uc5d0 \ub3d9\uc801\uc73c\ub85c \ucc98\ub9ac\ud558\uae30\uac00 \uc27d\ub2e4"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sh",children:"npm i -D @types/multer\r\nnpm i sharp\r\nnpm i -D @types/sharp\n"})}),"\n",(0,i.jsx)(r.h2,{id:"module",children:"module"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"@Module({\r\n  // sharp\uc5d0\uc11c Buffer\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ubc18\ub4dc\uc2dc memoryStorage\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.\r\n  imports: [MulterModule.register({\r\n    storage: memoryStorage()\r\n  })],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\n"})}),"\n",(0,i.jsx)(r.h2,{id:"image-resizepipets",children:"image-resize.pipe.ts"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'import { Injectable, PipeTransform } from "@nestjs/common";\r\nimport sharp from "sharp";\r\nimport path from "path";\r\n\r\n@Injectable()\r\nexport class ImageResizePipe implements PipeTransform<Express.Multer.File, Promise<Express.Multer.File[]>> {\r\n  async transform(image: Express.Multer.File): Promise<Express.Multer.File[]> {\r\n    if (!image) return null;\r\n    if (!image.mimetype.includes("image")) return null;\r\n    const large = await this.resizeAndConvert(image, 1200, "large");\r\n    const medium = await this.resizeAndConvert(image, 800, "medium");\r\n    const small = await this.resizeAndConvert(image, 400, "small");\r\n    return [image, large, medium, small];\r\n  }\r\n\r\n  async resizeAndConvert(image: Express.Multer.File, width: number, fileNameSuffix: string) {\r\n    const resizedImageBuffer = await sharp(image.buffer).resize(width).webp({ effort: 3 }).toBuffer();\r\n    const originalName = path.parse(image.originalname).name;\r\n    return {\r\n      ...image,\r\n      buffer: resizedImageBuffer,\r\n      originalname: `${originalName}_${fileNameSuffix}.webp`,\r\n    };\r\n  }\r\n}\r\n\r\nexport type Image = {\r\n  id: number;\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  originalUrl: string;\r\n  smallUrl: string;\r\n  mediumUrl: string;\r\n  largeUrl: string;\r\n};\n'})}),"\n",(0,i.jsx)(r.h2,{id:"controller",children:"controller"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'import { Controller, Post, UploadedFile, UseInterceptors } from "@nestjs/common";\r\nimport { FileInterceptor } from "@nestjs/platform-express";\r\nimport { MulterOptions } from "@nestjs/platform-express/multer/interfaces/multer-options.interface";\r\nimport { memoryStorage } from "multer";\r\nimport { Image, ImageResizePipe } from "../../pipes/image-resize.pipe";\r\nimport { UploadService } from "./upload.service";\r\n\r\n@Controller("upload")\r\nexport class UploadController {\r\n  constructor(private readonly uploadService: UploadService) {}\r\n  @Post()\r\n  @UseInterceptors(FileInterceptor("file"))\r\n  async upload(\r\n    @UploadedFile(ImageResizePipe)\r\n    images: Image[],\r\n  ) {\r\n    console.log(images);\r\n  }\r\n}\n'})})]})}function c(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},529087:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>l});var s=n(596363);const i={},t=s.createContext(i);function a(e){const r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);