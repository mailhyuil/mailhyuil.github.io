"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["881425"],{510526:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,toc:()=>i,default:()=>u,metadata:()=>s,assets:()=>t,contentTitle:()=>d});var s=JSON.parse('{"id":"nodejs/nodejs module multicore child_process","title":"nodejs child_process","description":"\uC790\uC2DD \uD504\uB85C\uC138\uC2A4\uB97C \uC0DD\uC131\uD558\uACE0 \uD1B5\uC2E0\uD560 \uC218 \uC788\uB294 \uBAA8\uB4C8","source":"@site/docs/nodejs/nodejs module multicore child_process.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs module multicore child_process","permalink":"/docs/nodejs/nodejs module multicore child_process","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs child_process os \uBA85\uB839\uC5B4 \uC2E4\uD589","permalink":"/docs/nodejs/nodejs module multicore child_process os \uBA85\uB839\uC5B4 \uC2E4\uD589"},"next":{"title":"node module cluster vs child_process vs worker_threads","permalink":"/docs/nodejs/nodejs module multicore cluster vs child_process vs worker_thread"}}'),o=r(447259),c=r(255511);let l={},d="nodejs child_process",t={},i=[{value:"spawn",id:"spawn",level:2},{value:"exec",id:"exec",level:2},{value:"fork",id:"fork",level:2}];function a(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"nodejs-child_process",children:"nodejs child_process"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uC790\uC2DD \uD504\uB85C\uC138\uC2A4\uB97C \uC0DD\uC131\uD558\uACE0 \uD1B5\uC2E0\uD560 \uC218 \uC788\uB294 \uBAA8\uB4C8"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"spawn",children:"spawn"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uC790\uC2DD \uD504\uB85C\uC138\uC2A4\uB97C \uC0DD\uC131"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uB370\uC774\uD130\uAC00 \uD06C\uACE0 \uC624\uB798\uAC00\uB294 \uD504\uB85C\uC138\uC2A4\uB97C \uC0DD\uC131\uD560 \uB54C \uC801\uD569 (stream\uC73C\uB85C \uC791\uB3D9 \uBC0F \uB9AC\uD134(stdout, stderr))"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uC258 \uD504\uB85C\uC138\uC2A4\uB97C \uAC70\uCE58\uC9C0 \uC54A\uACE0 \uBA85\uB839\uC5B4\uB97C \uC9C1\uC811 \uC2E4\uD589 (\uC131\uB2A5 \uD5A5\uC0C1, \uBCF4\uC548 \uAC15\uD654, \uB354 \uAC15\uB825\uD55C \uBA85\uB839\uC5B4 \uC0AC\uC6A9)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'/// spawn(command, [args], [options]);\r\n\r\nconst { spawn } = require("child_process");\r\n\r\nconst ls = spawn("ls", ["-lh", "/usr"]);\r\n\r\nls.stdout.on("data", (data) => {\r\n  console.log(`stdout: ${data}`);\r\n});\r\n\r\nls.stderr.on("data", (data) => {\r\n  console.error(`stderr: ${data}`);\r\n});\r\n\r\nls.on("close", (code) => {\r\n  console.log(`child process exited with code ${code}`);\r\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"exec",children:"exec"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uC790\uC2DD \uD504\uB85C\uC138\uC2A4\uB97C \uC0DD\uC131"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uC258 \uD504\uB85C\uC138\uC2A4\uB97C \uAC70\uCE58\uAE30 \uB54C\uBB38\uC5D0 \uBA85\uB839\uC5B4\uB97C \uC9C1\uC811 \uC2E4\uD589\uD558\uB294 \uAC83\uBCF4\uB2E4 \uB290\uB9BC"}),"\n",(0,o.jsx)(n.p,{children:"\uB300\uC2E0 \uC258\uC758 \uAE30\uB2A5\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC73C\uBA70, \uBA85\uB839\uC744 \uBCF4\uB2E4 \uC790\uC720\uB86D\uAC8C \uC870\uC791\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. (\uD30C\uC774\uD504, \uB9AC\uB2E4\uC774\uB809\uC158 \uB4F1)"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uB370\uC774\uD130\uAC00 \uC791\uC744 \uB54C \uC801\uD569 (buffer\uB85C \uC791\uB3D9 \uBC0F \uB9AC\uD134)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'/// exec(command, callback);\r\n\r\nconst { exec } = require("child_process");\r\n\r\nexec("find . -type f | wc -l", (err, stdout, stderr) => {\r\n  if (err) {\r\n    console.error(`exec error: ${err}`);\r\n    return;\r\n  }\r\n\r\n  console.log(`Number of files ${stdout}`);\r\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"fork",children:"fork"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"create multiple workers, running on the exact same Node code base"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uBD80\uBAA8 \uC790\uC2DD \uAC04 \uBA54\uC2DC\uC9C0\uB97C \uC8FC\uACE0\uBC1B\uC744 \uC218 \uC788\uC74C"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uBA54\uC2DC\uC9C0\uB97C \uC8FC\uACE0\uBC1B\uC744 \uB54C (json, xml ...)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'/// parent.js\r\nconst { fork } = require("child_process");\r\n\r\nconst forked = fork("child.js");\r\n\r\nforked.on("message", (msg) => {\r\n  console.log("Message from child", msg);\r\n});\r\n\r\nforked.send({ hello: "world" });\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'/// child.js\r\nprocess.on("message", (msg) => {\r\n  console.log("Message from parent:", msg);\r\n});\r\n\r\nlet counter = 0;\r\n\r\nsetInterval(() => {\r\n  process.send({ counter: counter++ });\r\n}, 1000);\n'})})]})}function u(e={}){let{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},255511:function(e,n,r){r.d(n,{R:()=>l,x:()=>d});var s=r(596363);let o={},c=s.createContext(o);function l(e){let n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);