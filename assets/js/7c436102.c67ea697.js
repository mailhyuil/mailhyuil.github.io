"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[545411],{529087:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>i});var n=t(596363);const s={},a=n.createContext(s);function o(e){const r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:r},e.children)}},772090:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"nestjs/nest class-transformer registerDecorator","title":"class-validator registerDecorator","description":"","source":"@site/docs/nestjs/nest class-transformer registerDecorator.md","sourceDirName":"nestjs","slug":"/nestjs/nest class-transformer registerDecorator","permalink":"/docs/nestjs/nest class-transformer registerDecorator","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"plainToInstance & instanceToPlain","permalink":"/docs/nestjs/nest class-transformer plainToInstance & instanceToPlain"},"next":{"title":"nestjs class-transformer sanitize","permalink":"/docs/nestjs/nest class-transformer sanitize"}}');var s=t(447259),a=t(529087);const o={},i="class-validator registerDecorator",c={},l=[];function d(e){const r={code:"code",h1:"h1",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"class-validator-registerdecorator",children:"class-validator registerDecorator"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { registerDecorator, ValidationOptions, ValidationArguments } from "class-validator";\r\n\r\nexport function IsLongerThan(property: string, validationOptions?: ValidationOptions) {\r\n  return function (object: Object, propertyName: string) {\r\n    registerDecorator({\r\n      name: "isLongerThan",\r\n      target: object.constructor,\r\n      propertyName: propertyName,\r\n      constraints: [property],\r\n      options: validationOptions,\r\n      validator: {\r\n        validate(value: any, args: ValidationArguments) {\r\n          const [relatedPropertyName] = args.constraints;\r\n          const relatedValue = (args.object as any)[relatedPropertyName];\r\n          return typeof value === "string" && typeof relatedValue === "string" && value.length > relatedValue.length; // you can return a Promise<boolean> here as well, if you want to make async validation\r\n        },\r\n      },\r\n    });\r\n  };\r\n}\n'})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);