"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["567397"],{951106:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,toc:()=>c,default:()=>x,metadata:()=>r,assets:()=>i,contentTitle:()=>l});var r=JSON.parse('{"id":"nodejs/nodejs xlsx \uC5D1\uC140 - excel","title":"xlxs","description":"install","source":"@site/docs/nodejs/nodejs xlsx \uC5D1\uC140 - excel.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs xlsx \uC5D1\uC140 - excel","permalink":"/docs/nodejs/nodejs xlsx \uC5D1\uC140 - excel","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs websocket","permalink":"/docs/nodejs/nodejs websocket"},"next":{"title":"node xstate","permalink":"/docs/nodejs/nodejs xstate - state machine"}}'),s=t(447259),o=t(255511);let a={},l="xlxs",i={},c=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2},{value:"xlsx to json",id:"xlsx-to-json",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"xlxs",children:"xlxs"})}),"\n",(0,s.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm i xlsx\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { Injectable } from "@angular/core";\r\nimport { ClassRegistrationDto, PaymentDto } from "@lcrs/api";\r\nimport { PaymentStatusMap, ProductTypeMap } from "@lcrs/common";\r\nimport * as XLSX from "xlsx";\r\n\r\n@Injectable({\r\n  providedIn: "root",\r\n})\r\nexport class ExcelService {\r\n  exportPaymentsAsExcelFile(json: PaymentDto[], excelFileName: string): void {\r\n    console.log(json);\r\n    const newJson = json.map((payment) => ({\r\n      ID: payment.id,\r\n      \uAD6C\uBD84: ProductTypeMap[payment.productType],\r\n      \uC0C1\uD0DC: PaymentStatusMap[payment.status],\r\n      \uC0C1\uD488\uBA85: payment.registration?.class?.name,\r\n      \uAD6C\uB9E4\uC790: payment.registration?.user?.name,\r\n      \uACB0\uC81C\uC77C: payment.paidAt,\r\n      \uACB0\uC81C\uAE08\uC561: payment.amount,\r\n      "\uC90C\uB9C1\uD06C \uD074\uB9AD \uC5EC\uBD80": payment.registration?.isLinkClicked ? "O" : "X",\r\n      "\uACB0\uC81C\uC790 \uC774\uBA54\uC77C": payment.registration?.user?.email,\r\n    }));\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(newJson);\r\n    const workbook: XLSX.WorkBook = {\r\n      SheetNames: [excelFileName],\r\n      Sheets: { [excelFileName]: worksheet },\r\n    };\r\n    XLSX.writeFile(workbook, `${excelFileName}-${new Date().toISOString()}.xlsx`);\r\n  }\r\n  exportRegistrationsAsExcelFile(json: ClassRegistrationDto[], excelFileName: string): void {\r\n    const newJson = json.map((registration) => ({\r\n      id: registration.id,\r\n      \uC774\uB984: registration.user.name,\r\n      \uC774\uBA54\uC77C: registration.user.email,\r\n      \uC9C0\uC5ED: registration.user.region,\r\n      \uC9C1\uC885: registration.user.occupation,\r\n      "\uAC15\uC758\uC5D0 \uBC14\uB77C\uB294 \uC810": registration.message,\r\n    }));\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(newJson);\r\n    const workbook: XLSX.WorkBook = {\r\n      SheetNames: [excelFileName],\r\n      Sheets: { [excelFileName]: worksheet },\r\n    };\r\n    XLSX.writeFile(workbook, `${excelFileName}-${new Date().toISOString()}.xlsx`);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"xlsx-to-json",children:"xlsx to json"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import * as XLSX from 'xlsx';\r\n\r\nasync createByExcel(userId: string, file: Express.Multer.File) {\r\n    const workbook = XLSX.read(file.buffer, { type: 'buffer', cellDates: true }); // cellDates:true DateTime format\r\n\r\n    const sheet = workbook.Sheets['\uC2DC\uD2B81']; // \uC2DC\uD2B8 \uC774\uB984\r\n\r\n    const data = XLSX.utils.sheet_to_json(sheet);\r\n}\n"})})]})}function x(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},255511:function(e,n,t){t.d(n,{R:()=>a,x:()=>l});var r=t(596363);let s={},o=r.createContext(s);function a(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);