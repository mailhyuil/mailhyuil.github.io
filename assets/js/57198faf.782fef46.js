"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[275374],{199641:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"nestjs/nest \uc138\ud305 settings enhancers","title":"nest main.ts \uc138\ud305 enhancers","description":"error.ts","source":"@site/docs/nestjs/nest \uc138\ud305 settings enhancers.md","sourceDirName":"nestjs","slug":"/nestjs/nest \uc138\ud305 settings enhancers","permalink":"/docs/nestjs/nest \uc138\ud305 settings enhancers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs validation zod","permalink":"/docs/nestjs/nest zod"},"next":{"title":"nest fastify \uc138\ud305","permalink":"/docs/nestjs/nest \uc138\ud305 settings fastify"}}');var s=n(447259),o=n(529087);const i={},a="nest main.ts \uc138\ud305 enhancers",c={},p=[{value:"error.ts",id:"errorts",level:2},{value:"exception.ts",id:"exceptionts",level:2},{value:"business-exception.filter.ts",id:"business-exceptionfilterts",level:2},{value:"http-exception.filter.ts",id:"http-exceptionfilterts",level:2},{value:"validation-exception.filter.ts",id:"validation-exceptionfilterts",level:2},{value:"global-validation.pipe.ts",id:"global-validationpipets",level:2},{value:"winston.logger.ts",id:"winstonloggerts",level:2}];function l(r){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...r.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"nest-maints-\uc138\ud305-enhancers",children:"nest main.ts \uc138\ud305 enhancers"})}),"\n",(0,s.jsx)(e.h2,{id:"errorts",children:"error.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'export type ErrorInfo = {\r\n  code: string;\r\n  message: string;\r\n  details?: any;\r\n};\r\n\r\nexport type ErrorResponse = {\r\n  errorInfo: ErrorInfo;\r\n  cause: Error;\r\n};\r\n\r\nexport namespace ErrorInfo {\r\n  export const UserFindFailed: ErrorInfo = {\r\n    code: "1000",\r\n    message: `\uc720\uc800 \uc870\ud68c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.`,\r\n  };\r\n  export const UserCreateFailed: ErrorInfo = {\r\n    code: "1001",\r\n    message: `\uc720\uc800 \uc0dd\uc131\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.`,\r\n  };\r\n  export const UserUpdateFailed: ErrorInfo = {\r\n    code: "1002",\r\n    message: `\uc720\uc800 \uc218\uc815\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.`,\r\n  };\r\n  export const UserDeleteFailed: ErrorInfo = {\r\n    code: "1003",\r\n    message: `\uc720\uc800 \uc0ad\uc81c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.`,\r\n  };\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"exceptionts",children:"exception.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { HttpException, HttpStatus } from "@nestjs/common";\r\nimport { ErrorInfo } from "./error";\r\n\r\nexport class InvalidTokenException extends HttpException {\r\n  constructor() {\r\n    super("\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ud1a0\ud070\uc785\ub2c8\ub2e4.", 498);\r\n  }\r\n}\r\n\r\nexport class BusinessException extends HttpException {\r\n  constructor(errorInfo: ErrorInfo, cause?: Error | string, status: HttpStatus = HttpStatus.CONFLICT) {\r\n    const errorPayload: any = { errorInfo };\r\n    if (cause) {\r\n      errorPayload.cause = typeof cause === "string" ? new Error(cause) : cause;\r\n    }\r\n    super(errorPayload, status);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"business-exceptionfilterts",children:"business-exception.filter.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { ArgumentsHost, Catch, ExceptionFilter, Logger } from "@nestjs/common";\r\nimport { Prisma } from "@prisma/client";\r\nimport { Request, Response } from "express";\r\nimport { PrismaError } from "prisma-error-enum";\r\nimport { BusinessException, ErrorResponse } from "../errors";\r\n\r\n/**\r\n * @export\r\n * @class BusinessExceptionFilter\r\n * @implements {ExceptionFilter}\r\n * @description BusinessException\uc744 \ucc98\ub9ac\ud558\ub294 ExceptionFilter\r\n */\r\n@Catch(BusinessException)\r\nexport class BusinessExceptionFilter implements ExceptionFilter {\r\n  private readonly logger = new Logger(BusinessExceptionFilter.name);\r\n  catch(error: BusinessException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const res = ctx.getResponse<Response>();\r\n    const req = ctx.getRequest<Request>();\r\n    const errorStatusCode = error.getStatus();\r\n    const errorMessage = error.message;\r\n    const errorStack = error.stack;\r\n\r\n    const { errorInfo, cause } = error.getResponse() as ErrorResponse;\r\n\r\n    const message = errorInfo?.message ?? errorMessage ?? "\uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.";\r\n\r\n    const clientResponse = {\r\n      statusCode: errorStatusCode,\r\n      path: req.url,\r\n      timestamp: new Date().toISOString(),\r\n      message,\r\n      error: errorInfo,\r\n    };\r\n\r\n    if (cause instanceof Prisma.PrismaClientKnownRequestError) {\r\n      if (cause.code === PrismaError.UniqueConstraintViolation) {\r\n        clientResponse.message = `\uc911\ubcf5\ub41c \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. [${cause.meta?.target}]`;\r\n      }\r\n    }\r\n\r\n    res.status(errorStatusCode).json(clientResponse);\r\n\r\n    this.logger.error(`\r\nCLIENT_IP=${req.ip}\r\nUSER_AGENT=${req.headers["user-agent"]}\r\nMETHOD=${req.method}\r\nPATH=${req.path}\r\nSTATUS_CODE=${errorStatusCode}\r\nMESSAGE=${clientResponse.message}\r\nTIMESTAMP=${clientResponse.timestamp}\r\nERROR=${JSON.stringify(clientResponse.error)}\r\nERROR_STACK=${errorStack}\r\nCAUSE=${cause}\r\n`);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"http-exceptionfilterts",children:"http-exception.filter.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { ArgumentsHost, Catch, ExceptionFilter, HttpException, Logger } from "@nestjs/common";\r\nimport { Request, Response } from "express";\r\n\r\n/**\r\n * @export\r\n * @class HttpExceptionFilter\r\n * @implements {ExceptionFilter}\r\n * @description BusinessExceptionFilter, ValidationExceptionFilter\uc5d0\uc11c \uc7a1\uc9c0 \uc54a\uc740 \uc608\uc678\ub97c \ucc98\ub9ac\ud558\ub294 ExceptionFilter\r\n */\r\n@Catch(HttpException)\r\nexport class HttpExceptionFilter implements ExceptionFilter {\r\n  private readonly logger = new Logger(HttpExceptionFilter.name);\r\n  catch(error: HttpException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const res = ctx.getResponse<Response>();\r\n    const req = ctx.getRequest<Request>();\r\n    const statusCode = error.getStatus();\r\n    const message = error.message;\r\n    const errorStack = error.stack;\r\n\r\n    const clientResponse = {\r\n      statusCode,\r\n      message,\r\n      path: req.url,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    res.status(statusCode).json(clientResponse);\r\n\r\n    if (\r\n      res.statusCode === 401 || // Unauthorized\r\n      res.statusCode === 403 || // Forbidden\r\n      res.statusCode === 498 || // Invalid Token\r\n      res.statusCode === 429 // Too Many Requests\r\n    ) {\r\n      //? \ubcf4\uc548 \uad00\ub828 \ub85c\uadf8 = warn\r\n      this.logger.warn(`\r\nCLIENT_IP=${req.ip}\r\nUSER_AGENT=${req.headers["user-agent"]}\r\nMETHOD=${req.method}\r\nPATH=${req.path}\r\nSTATUS_CODE=${clientResponse.statusCode}\r\nMESSAGE=${clientResponse.message}\r\nTIMESTAMP=${clientResponse.timestamp}\r\nERROR_STACK=${errorStack}\r\n`);\r\n    } else if (res.statusCode >= 400 && res.statusCode !== 404) {\r\n      //? \ub098\uba38\uc9c0 \uc5d0\ub7ec = error\r\n      this.logger.error(`\r\nCLIENT_IP=${req.ip}\r\nUSER_AGENT=${req.headers["user-agent"]}\r\nMETHOD=${req.method}\r\nPATH=${req.path}\r\nSTATUS_CODE=${clientResponse.statusCode}\r\nMESSAGE=${clientResponse.message}\r\nTIMESTAMP=${clientResponse.timestamp}\r\nERROR_STACK=${errorStack}\r\n`);\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"validation-exceptionfilterts",children:"validation-exception.filter.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { ValidationException } from "@/server/pipes/global-validation.pipe";\r\nimport { ArgumentsHost, Catch, ExceptionFilter, Logger } from "@nestjs/common";\r\nimport { Request, Response } from "express";\r\nimport { ErrorResponse } from "../errors";\r\n\r\n/**\r\n * @export\r\n * @class ValidationExceptionFilter\r\n * @implements {ExceptionFilter}\r\n * @description 409 validation exception\uc744 \ucc98\ub9ac\ud558\ub294 ExceptionFilter\r\n */\r\n@Catch(ValidationException)\r\nexport class ValidationExceptionFilter implements ExceptionFilter {\r\n  private readonly logger = new Logger(ValidationExceptionFilter.name);\r\n  catch(error: ValidationException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const res = ctx.getResponse<Response>();\r\n    const req = ctx.getRequest<Request>();\r\n    const statusCode = error.getStatus();\r\n    const { errorInfo, cause } = error.getResponse() as ErrorResponse;\r\n    const errorMessage = error.message;\r\n    const errorStack = error.stack;\r\n\r\n    const message = errorInfo?.message ?? errorMessage;\r\n\r\n    const clientResponse = {\r\n      statusCode,\r\n      message,\r\n      path: req.url,\r\n      timestamp: new Date().toISOString(),\r\n      error: errorInfo,\r\n    };\r\n\r\n    res.status(statusCode).json(clientResponse);\r\n\r\n    this.logger.log(`\r\nCLIENT_IP=${req.ip}\r\nUSER_AGENT=${req.headers["user-agent"]}\r\nMETHOD=${req.method}\r\nPATH=${req.path}\r\nSTATUS_CODE=${clientResponse.statusCode}\r\nMESSAGE=${clientResponse.message}\r\nTIMESTAMP=${clientResponse.timestamp}\r\nERROR=${JSON.stringify(clientResponse.error)}\r\nERROR_STACK=${errorStack}\r\nCAUSE=${cause}\r\n`);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"global-validationpipets",children:"global-validation.pipe.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { HttpException, HttpStatus, ValidationPipe } from "@nestjs/common";\r\nimport { ErrorInfo, ErrorResponse } from "../errors";\r\n\r\nexport const GlobalValidationPipe = new ValidationPipe({\r\n  transformOptions: {\r\n    enableImplicitConversion: true,\r\n  },\r\n  transform: true,\r\n  whitelist: true,\r\n  enableDebugMessages: true,\r\n  exceptionFactory: errors => {\r\n    const properties: string[] = [];\r\n    const details = errors\r\n      .flatMap(error => (error.children?.length ? error.children : error))\r\n      .map(error => {\r\n        console.log(error);\r\n        const { property, constraints, value } = error;\r\n        if (!constraints) return;\r\n        const constraintValues = Object.values(constraints);\r\n        properties.push(property);\r\n        return {\r\n          field: property,\r\n          value,\r\n          messages: constraintValues,\r\n        };\r\n      });\r\n\r\n    return new ValidationException({\r\n      errorInfo: {\r\n        ...ErrorInfo.ValidationError,\r\n        message: `\uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.`,\r\n        details,\r\n      },\r\n      cause: new HttpException("\uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.", HttpStatus.BAD_REQUEST),\r\n    });\r\n  },\r\n});\r\n\r\nexport class ValidationException extends HttpException {\r\n  constructor(errorResponse: ErrorResponse) {\r\n    super(errorResponse, HttpStatus.BAD_REQUEST);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"winstonloggerts",children:"winston.logger.ts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:'import { LoggerService } from "@nestjs/common";\r\nimport type { StreamOptions } from "morgan";\r\nimport { utilities, WinstonModule } from "nest-winston";\r\nimport process from "process";\r\nimport winston from "winston";\r\nimport winstonDaily from "winston-daily-rotate-file";\r\nconst { combine, timestamp, json } = winston.format;\r\n\r\nlet winstonLogger: LoggerService;\r\nlet winstonStream: StreamOptions;\r\n\r\nif (process.env.NODE_ENV !== "none") {\r\n  const dir = process.env.LOG_DIR;\r\n\r\n  winstonLogger = WinstonModule.createLogger({\r\n    format: combine(timestamp(), json()),\r\n    transports: [\r\n      new winstonDaily({\r\n        level: "info",\r\n        datePattern: "YYYY-MM-DD",\r\n        dirname: dir,\r\n        filename: `%DATE%.seo-dev.log`,\r\n        maxFiles: 30,\r\n        zippedArchive: true,\r\n      }),\r\n    ],\r\n  });\r\n  winstonStream = {\r\n    write: (message: string) => {\r\n      winstonLogger.log(message);\r\n    },\r\n  };\r\n} else {\r\n  winstonLogger = WinstonModule.createLogger({\r\n    transports: [\r\n      new winston.transports.Console({\r\n        level: "silly", // \ubaa8\ub4e0 \ub2e8\uacc4\ub97c \ub85c\uadf8\r\n        format: combine(\r\n          utilities.format.nestLike("APP", {\r\n            prettyPrint: true, // nest\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc635\uc158. \ub85c\uadf8 \uac00\ub3c5\uc131\uc744 \ub192\uc5ec\uc90c\r\n            colors: true, // \ub85c\uadf8\uc5d0 \uc0c9\uae54\uc744 \ub123\uc5b4\uc11c \ucd9c\ub825\r\n          }),\r\n        ),\r\n      }),\r\n    ],\r\n  });\r\n  winstonStream = {\r\n    write: (message: string) => {\r\n      winstonLogger.log(message);\r\n    },\r\n  };\r\n}\r\nexport { winstonLogger, winstonStream };\n'})})]})}function m(r={}){const{wrapper:e}={...(0,o.R)(),...r.components};return e?(0,s.jsx)(e,{...r,children:(0,s.jsx)(l,{...r})}):l(r)}},529087:(r,e,n)=>{n.d(e,{R:()=>i,x:()=>a});var t=n(596363);const s={},o=t.createContext(s);function i(r){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function a(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:i(r.components),t.createElement(o.Provider,{value:e},r.children)}}}]);