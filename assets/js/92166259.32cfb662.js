"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["123030"],{669551:function(n,r,e){e.r(r),e.d(r,{frontMatter:()=>d,toc:()=>s,default:()=>u,metadata:()=>t,assets:()=>l,contentTitle:()=>o});var t=JSON.parse('{"id":"marketing & ad/ad google AdMob flutter admob_flutter","title":"flutter \uAD11\uACE0","description":"CPM : Cost Per Mille // 1000\uBC88 \uB178\uCD9C\uB2F9 \uC218\uC775","source":"@site/docs/marketing & ad/ad google AdMob flutter admob_flutter.md","sourceDirName":"marketing & ad","slug":"/marketing & ad/ad google AdMob flutter admob_flutter","permalink":"/docs/marketing & ad/ad google AdMob flutter admob_flutter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"google-ads","permalink":"/docs/marketing & ad/ad google - Ads & AdSense & AdMob"},"next":{"title":"google AdMob","permalink":"/docs/marketing & ad/ad google AdMob"}}'),i=e(447259),a=e(255511);let d={},o="flutter \uAD11\uACE0",l={},s=[{value:"prepare",id:"prepare",level:2},{value:"install",id:"install",level:2},{value:"android/app/src/main/AndroidManifest.xml",id:"androidappsrcmainandroidmanifestxml",level:2},{value:"ios/Runner/Info.plist",id:"iosrunnerinfoplist",level:2},{value:"ios/podfile",id:"iospodfile",level:2},{value:"main.dart",id:"maindart",level:2},{value:"UI\uC5D0 \uAD11\uACE0 \uCD94\uAC00",id:"ui\uC5D0-\uAD11\uACE0-\uCD94\uAC00",level:2}];function c(n){let r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"flutter-\uAD11\uACE0",children:"flutter \uAD11\uACE0"})}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsx)(r.p,{children:"CPM : Cost Per Mille // 1000\uBC88 \uB178\uCD9C\uB2F9 \uC218\uC775"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsx)(r.p,{children:"CPC : Cost Per Click // 1\uBC88 \uD074\uB9AD\uB2F9 \uC218\uC775"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"prepare",children:"prepare"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"adMob \uC571 \uC0DD\uC131"}),"\n",(0,i.jsx)(r.li,{children:"\uAD11\uACE0 \uB2E8\uC704 \uC0DD\uC131"}),"\n",(0,i.jsx)(r.li,{children:"test \uAE30\uAE30 \uCD94\uAC00"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sh",children:"flutter pub add admob_flutter\n"})}),"\n",(0,i.jsx)(r.h2,{id:"androidappsrcmainandroidmanifestxml",children:"android/app/src/main/AndroidManifest.xml"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-xml",children:'<manifest>\r\n  <application>\r\n    <meta-data\r\n      android:name="com.google.android.gms.ads.APPLICATION_ID"\r\n      android:value="ca-app-pub-1111111111111111~2222222222222"/>\r\n  </application>\r\n</manifest>\n'})}),"\n",(0,i.jsx)(r.h2,{id:"iosrunnerinfoplist",children:"ios/Runner/Info.plist"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-xml",children:"<key>GADApplicationIdentifier</key>\r\n<string>ca-app-pub-3940256099942544~1458002511</string>\r\n<key>io.flutter.embedded_views_preview</key>\r\n<true/>\r\n<key>NSUserTrackingUsageDescription</key>\r\n<string>This identifier will be used to deliver personalized ads to you.</string>\n"})}),"\n",(0,i.jsx)(r.h2,{id:"iospodfile",children:"ios/podfile"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"platform :ios, '9.0'\n"})}),"\n",(0,i.jsx)(r.h2,{id:"maindart",children:"main.dart"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"import 'package:admob_flutter/admob_flutter.dart';\r\n\r\nvoid main() {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  // Initialize without device test ids.\r\n  Admob.initialize();\r\n  // Or add a list of test ids.\r\n  // Admob.initialize(testDeviceIds: ['YOUR DEVICE ID']);\r\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"ui\uC5D0-\uAD11\uACE0-\uCD94\uAC00",children:"UI\uC5D0 \uAD11\uACE0 \uCD94\uAC00"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"import 'dart:io';\r\n\r\nimport 'package:admob_flutter/admob_flutter.dart';\r\n// import 'package:admob_flutter_example/extensions.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_my_animation/features/home/views/home_screen.dart';\r\n\r\nvoid main() {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  Admob.initialize();\r\n  runApp(const MyMaterialApp());\r\n}\r\n\r\nclass MyMaterialApp extends StatefulWidget {\r\n  const MyMaterialApp({super.key});\r\n\r\n  @override\r\n  _MyMaterialAppState createState() => _MyMaterialAppState();\r\n}\r\n\r\nclass _MyMaterialAppState extends State<MyMaterialApp> {\r\n  GlobalKey<ScaffoldState> scaffoldState = GlobalKey();\r\n  AdmobBannerSize? bannerSize;\r\n  late AdmobInterstitial interstitialAd;\r\n  late AdmobReward rewardAd;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n\r\n    bannerSize = AdmobBannerSize.BANNER;\r\n\r\n    interstitialAd = AdmobInterstitial(\r\n      adUnitId: getInterstitialAdUnitId()!,\r\n      listener: (AdmobAdEvent event, Map<String, dynamic>? args) {\r\n        if (event == AdmobAdEvent.closed) interstitialAd.load();\r\n        handleEvent(event, args, 'Interstitial');\r\n      },\r\n    );\r\n\r\n    rewardAd = AdmobReward(\r\n      adUnitId: getRewardBasedVideoAdUnitId()!,\r\n      listener: (AdmobAdEvent event, Map<String, dynamic>? args) {\r\n        if (event == AdmobAdEvent.closed) rewardAd.load();\r\n        handleEvent(event, args, 'Reward');\r\n      },\r\n    );\r\n\r\n    interstitialAd.load();\r\n    rewardAd.load();\r\n  }\r\n\r\n  void handleEvent(\r\n      AdmobAdEvent event, Map<String, dynamic>? args, String adType) {\r\n    switch (event) {\r\n      case AdmobAdEvent.loaded:\r\n        showSnackBar('New Admob $adType Ad loaded!');\r\n        break;\r\n      case AdmobAdEvent.opened:\r\n        showSnackBar('Admob $adType Ad opened!');\r\n        break;\r\n      case AdmobAdEvent.closed:\r\n        showSnackBar('Admob $adType Ad closed!');\r\n        break;\r\n      case AdmobAdEvent.failedToLoad:\r\n        showSnackBar('Admob $adType failed to load. :(');\r\n        break;\r\n      case AdmobAdEvent.rewarded:\r\n        showDialog(\r\n          context: scaffoldState.currentContext!,\r\n          builder: (BuildContext context) {\r\n            return WillPopScope(\r\n              onWillPop: () async {\r\n                ScaffoldMessenger.of(context).hideCurrentSnackBar();\r\n                return true;\r\n              },\r\n              child: AlertDialog(\r\n                content: Column(\r\n                  mainAxisSize: MainAxisSize.min,\r\n                  children: <Widget>[\r\n                    const Text('Reward callback fired. Thanks Andrew!'),\r\n                    Text('Type: ${args!['type']}'),\r\n                    Text('Amount: ${args['amount']}'),\r\n                  ],\r\n                ),\r\n              ),\r\n            );\r\n          },\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  void showSnackBar(String content) {\r\n    ScaffoldMessenger.of(context).showSnackBar(\r\n      SnackBar(\r\n        content: Text(content),\r\n        duration: const Duration(milliseconds: 1500),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      debugShowCheckedModeBanner: false,\r\n      theme: ThemeData(\r\n        primarySwatch: Colors.blueGrey,\r\n      ),\r\n      home: Builder(\r\n        builder: (BuildContext context) => Scaffold(\r\n          key: scaffoldState,\r\n          appBar: AppBar(\r\n            title: const Text('AdmobFlutter'),\r\n            actions: [\r\n              TextButton(\r\n                onPressed: () {\r\n                  Navigator.of(context).push(\r\n                    MaterialPageRoute(\r\n                      fullscreenDialog: true,\r\n                      builder: (BuildContext context) {\r\n                        return const HomeScreen();\r\n                      },\r\n                    ),\r\n                  );\r\n                },\r\n                child: const Text(\r\n                  'FullscreenDialog',\r\n                  style: TextStyle(\r\n                    color: Colors.white,\r\n                  ),\r\n                ),\r\n              )\r\n            ],\r\n          ), // .withBottomAdmobBanner(context),\r\n          bottomNavigationBar: Builder(\r\n            builder: (BuildContext context) {\r\n              return Container(\r\n                color: Colors.blueGrey,\r\n                child: SafeArea(\r\n                  child: SizedBox(\r\n                    height: 60,\r\n                    child: Row(\r\n                      crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                      mainAxisAlignment: MainAxisAlignment.center,\r\n                      children: <Widget>[\r\n                        Expanded(\r\n                          child: TextButton(\r\n                            onPressed: () async {\r\n                              final isLoaded = await interstitialAd.isLoaded;\r\n                              if (isLoaded ?? false) {\r\n                                interstitialAd.show();\r\n                              } else {\r\n                                showSnackBar(\r\n                                    'Interstitial ad is still loading...');\r\n                              }\r\n                            },\r\n                            child: const Text(\r\n                              'Show Interstitial',\r\n                              style: TextStyle(color: Colors.white),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        Expanded(\r\n                          child: TextButton(\r\n                            onPressed: () async {\r\n                              if (await rewardAd.isLoaded) {\r\n                                rewardAd.show();\r\n                              } else {\r\n                                showSnackBar('Reward ad is still loading...');\r\n                              }\r\n                            },\r\n                            child: const Text(\r\n                              'Show Reward',\r\n                              style: TextStyle(color: Colors.white),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        Expanded(\r\n                          child: PopupMenuButton(\r\n                            initialValue: bannerSize,\r\n                            offset: const Offset(0, 20),\r\n                            onSelected: (AdmobBannerSize newSize) {\r\n                              setState(() {\r\n                                bannerSize = newSize;\r\n                              });\r\n                            },\r\n                            itemBuilder: (BuildContext context) =>\r\n                                <PopupMenuEntry<AdmobBannerSize>>[\r\n                              const PopupMenuItem(\r\n                                value: AdmobBannerSize.BANNER,\r\n                                child: Text('BANNER'),\r\n                              ),\r\n                              const PopupMenuItem(\r\n                                value: AdmobBannerSize.LARGE_BANNER,\r\n                                child: Text('LARGE_BANNER'),\r\n                              ),\r\n                              const PopupMenuItem(\r\n                                value: AdmobBannerSize.MEDIUM_RECTANGLE,\r\n                                child: Text('MEDIUM_RECTANGLE'),\r\n                              ),\r\n                              const PopupMenuItem(\r\n                                value: AdmobBannerSize.FULL_BANNER,\r\n                                child: Text('FULL_BANNER'),\r\n                              ),\r\n                              const PopupMenuItem(\r\n                                value: AdmobBannerSize.LEADERBOARD,\r\n                                child: Text('LEADERBOARD'),\r\n                              ),\r\n                              PopupMenuItem(\r\n                                value: AdmobBannerSize.SMART_BANNER(context),\r\n                                child: const Text('SMART_BANNER'),\r\n                              ),\r\n                              PopupMenuItem(\r\n                                value: AdmobBannerSize.ADAPTIVE_BANNER(\r\n                                  width: MediaQuery.of(context)\r\n                                          .size\r\n                                          .width\r\n                                          .toInt() -\r\n                                      40, // considering EdgeInsets.all(20.0)\r\n                                ),\r\n                                child: const Text('ADAPTIVE_BANNER'),\r\n                              ),\r\n                            ],\r\n                            child: const Center(\r\n                              child: Text(\r\n                                'Banner size',\r\n                                style: TextStyle(\r\n                                    fontWeight: FontWeight.w500,\r\n                                    color: Colors.white),\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        Expanded(\r\n                          child: TextButton(\r\n                            onPressed: () {\r\n                              Navigator.of(context).push(\r\n                                MaterialPageRoute(\r\n                                    builder: (BuildContext context) {\r\n                                  return const HomeScreen();\r\n                                }),\r\n                              );\r\n                            },\r\n                            child: const Text(\r\n                              'Push Page',\r\n                              style: TextStyle(color: Colors.white),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ),\r\n              );\r\n            },\r\n          ),\r\n          body: Column(\r\n            children: [\r\n              Expanded(\r\n                child: Scrollbar(\r\n                  child: ListView.builder(\r\n                    padding: const EdgeInsets.all(20.0),\r\n                    itemCount: 1000,\r\n                    itemBuilder: (BuildContext context, int index) {\r\n                      if (index != 0 && index % 6 == 0) {\r\n                        return Column(\r\n                          children: <Widget>[\r\n                            Container(\r\n                              margin: const EdgeInsets.only(bottom: 20.0),\r\n                              child: AdmobBanner(\r\n                                adUnitId: getBannerAdUnitId()!,\r\n                                adSize: bannerSize!,\r\n                                listener: (AdmobAdEvent event,\r\n                                    Map<String, dynamic>? args) {\r\n                                  handleEvent(event, args, 'Banner');\r\n                                },\r\n                                onBannerCreated:\r\n                                    (AdmobBannerController controller) {\r\n                                  print('created!');\r\n                                },\r\n                              ),\r\n                            ),\r\n                          ],\r\n                        );\r\n                      }\r\n                      return Container(\r\n                        height: 100.0,\r\n                        margin: const EdgeInsets.only(bottom: 20.0),\r\n                        color: Colors.red,\r\n                      );\r\n                    },\r\n                  ),\r\n                ),\r\n              ),\r\n              // Another option is to fix a banner ad to the top or bottom of your content.\r\n              // Notice that banners are not scrolling, which is a violation of admob policy.\r\n              //\r\n              // See: https://github.com/kmcgill88/admob_flutter/issues/194\r\n              // \"banner ads should not move as a user scrolls, as users may try to\r\n              // click on the menu but end up clicking on the ad accidentally instead.\r\n              // This specific implementation is against policy and we reserve the right\r\n              // to disable ad serving to your app.\"\r\n\r\n              // Builder(\r\n              //   builder: (BuildContext context) {\r\n              //     final size = MediaQuery.of(context).size;\r\n              //     final height = max(size.height * .05, 50.0);\r\n              //     return Container(\r\n              //       width: size.width,\r\n              //       height: height,\r\n              //       child: AdmobBanner(\r\n              //         adUnitId: getBannerAdUnitId(),\r\n              //         adSize: AdmobBannerSize.ADAPTIVE_BANNER(\r\n              //           width: size.width.toInt(),\r\n              //         ),\r\n              //         listener: (AdmobAdEvent event, Map<String, dynamic> args) {\r\n              //           handleEvent(event, args, 'Banner');\r\n              //         },\r\n              //       ),\r\n              //     );\r\n              //   },\r\n              // ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n    // .withBottomAdmobBanner(context);\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    interstitialAd.dispose();\r\n    rewardAd.dispose();\r\n    super.dispose();\r\n  }\r\n}\r\n\r\n/*\r\nTest Id's from:\r\nhttps://developers.google.com/admob/ios/banner\r\nhttps://developers.google.com/admob/android/banner\r\n\r\nApp Id - See README where these Id's go\r\nAndroid: ca-app-pub-3940256099942544~3347511713\r\niOS: ca-app-pub-3940256099942544~1458002511\r\n\r\nBanner\r\nAndroid: ca-app-pub-3940256099942544/6300978111\r\niOS: ca-app-pub-3940256099942544/2934735716\r\n\r\nInterstitial\r\nAndroid: ca-app-pub-3940256099942544/1033173712\r\niOS: ca-app-pub-3940256099942544/4411468910\r\n\r\nReward Video\r\nAndroid: ca-app-pub-3940256099942544/5224354917\r\niOS: ca-app-pub-3940256099942544/1712485313\r\n*/\r\n\r\nString? getBannerAdUnitId() {\r\n  if (Platform.isIOS) {\r\n    return 'ca-app-pub-3940256099942544/2934735716';\r\n  } else if (Platform.isAndroid) {\r\n    return 'ca-app-pub-3940256099942544/6300978111';\r\n  }\r\n  return null;\r\n}\r\n\r\nString? getInterstitialAdUnitId() {\r\n  if (Platform.isIOS) {\r\n    return 'ca-app-pub-3940256099942544/4411468910';\r\n  } else if (Platform.isAndroid) {\r\n    return 'ca-app-pub-3940256099942544/1033173712';\r\n  }\r\n  return null;\r\n}\r\n\r\nString? getRewardBasedVideoAdUnitId() {\r\n  if (Platform.isIOS) {\r\n    return 'ca-app-pub-3940256099942544/1712485313';\r\n  } else if (Platform.isAndroid) {\r\n    return 'ca-app-pub-3940256099942544/5224354917';\r\n  }\r\n  return null;\r\n}\n"})})]})}function u(n={}){let{wrapper:r}={...(0,a.R)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},255511:function(n,r,e){e.d(r,{R:()=>d,x:()=>o});var t=e(596363);let i={},a=t.createContext(i);function d(n){let r=t.useContext(a);return t.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function o(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),t.createElement(a.Provider,{value:r},n.children)}}}]);