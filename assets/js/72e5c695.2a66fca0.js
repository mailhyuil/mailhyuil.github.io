"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[849255],{529087:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(596363);const s={},c=r.createContext(s);function i(e){const t=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:t},e.children)}},677995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"c++/c++ header filesystem","title":"c++ filesystem","description":"","source":"@site/docs/c++/c++ header filesystem.md","sourceDirName":"c++","slug":"/c++/c++ header filesystem","permalink":"/docs/c++/c++ header filesystem","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"c++ header file \uc704\uce58","permalink":"/docs/c++/c++ header file \uc704\uce58"},"next":{"title":"c++ header functional bind","permalink":"/docs/c++/c++ header functional bind"}}');var s=n(447259),c=n(529087);const i={},o="c++ filesystem",a={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"c-filesystem",children:"c++ filesystem"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <filesystem>\r\n\r\nnamespace fs = std::filesystem;\r\n\r\nint main(){\r\n    fs::path p("./some_file.txt");\r\n\r\n    std::cout << "\ub0b4 \ud604\uc7ac \uacbd\ub85c : " << fs::current_path() << std::endl;\r\n    std::cout << "\uc0c1\ub300 \uacbd\ub85c : " << p.relative_path() << std::endl;\r\n    std::cout << "\uc808\ub300 \uacbd\ub85c : " << fs::absolute(p) << std::endl;\r\n    std::cout << "\uacf5\uc2dd\uc801\uc778 \uc808\ub300 \uacbd\ub85c : " << fs::canonical(p) << std::endl;\r\n\r\n    // directory_iterator\r\n    fs::directory_iterator itr(fs::current_path() / "a");\r\n    while (itr != fs::end(itr)) {\r\n        const fs::directory_entry& entry = *itr;\r\n        std::cout << entry.path() << std::endl;\r\n        itr++;\r\n    }\r\n    return 0;\r\n}\r\n\n'})})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);