"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[685910],{529087:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var n=t(596363);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}},546527:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"nestjs/nest base interceptor Serialize","title":"nestjs base interceptor Serialize","description":"controller \uc5d0\uc11c return\ud55c entity\ub97c DTO\ub85c \ubcc0\ud658\ud574\uc8fc\ub294 interceptor decorator","source":"@site/docs/nestjs/nest base interceptor Serialize.md","sourceDirName":"nestjs","slug":"/nestjs/nest base interceptor Serialize","permalink":"/docs/nestjs/nest base interceptor Serialize","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest interceptor LoggingInterceptor","permalink":"/docs/nestjs/nest base interceptor LogInterceptor"},"next":{"title":"nest interceptor pre & post","permalink":"/docs/nestjs/nest base interceptor pre & post"}}');var s=t(447259),o=t(529087);const i={},a="nestjs base interceptor Serialize",c={},l=[{value:"serialize.interceptor.ts",id:"serializeinterceptorts",level:2},{value:"controller",id:"controller",level:2}];function p(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"nestjs-base-interceptor-serialize",children:"nestjs base interceptor Serialize"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"controller \uc5d0\uc11c return\ud55c entity\ub97c DTO\ub85c \ubcc0\ud658\ud574\uc8fc\ub294 interceptor decorator"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\uc0ac\uc6a9\ud558\uae30 \uc804 DTO\ub97c \ucee8\ud2b8\ub864\ub7ec \ub2e8\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc9c0 \uc11c\ube44\uc2a4 \ub2e8\uae4c\uc9c0 \uc0ac\uc6a9\ud560\uc9c0 \uc0dd\uac01\ud574\ubcf4\uc790"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"serializeinterceptorts",children:"serialize.interceptor.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { CallHandler, ExecutionContext, NestInterceptor, UseInterceptors } from "@nestjs/common";\r\nimport { plainToInstance } from "class-transformer";\r\nimport { Observable, map } from "rxjs";\r\n\r\ninterface ClassConstructor {\r\n  new (...args: any[]): {};\r\n}\r\n\r\nexport function Serialize(dto: ClassConstructor) {\r\n  return UseInterceptors(new SerializeInterceptor(dto));\r\n}\r\n\r\nexport class SerializeInterceptor implements NestInterceptor {\r\n  constructor(private dto: ClassConstructor) {}\r\n\r\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n    return next.handle().pipe(\r\n      map((data: ClassConstructor) => {\r\n        return plainToInstance(this.dto, data);\r\n      }),\r\n    );\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"controller",children:"controller"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'@Controller({ path: "examples", version: "1" })\r\nexport class ExampleController {\r\n  @Get()\r\n  @ApiOperation({\r\n    summary: "\ubaa8\ub4e0 Example \ubaa9\ub85d \uc870\ud68c",\r\n  })\r\n  @ApiOkResponse({ type: [ExampleDTO] })\r\n  @Serialize(ExampleDTO)\r\n  async findAll() {\r\n    return await this.exampleService.findAll();\r\n  }\r\n}\n'})})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);