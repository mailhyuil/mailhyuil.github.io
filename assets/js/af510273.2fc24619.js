"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[764512],{529087:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(596363);const c={},o=t.createContext(c);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(o.Provider,{value:n},e.children)}},955283:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"c++/c++ header error exception","title":"c++ header exception","description":"","source":"@site/docs/c++/c++ header error exception.md","sourceDirName":"c++","slug":"/c++/c++ header error exception","permalink":"/docs/c++/c++ header error exception","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"c++ header condition_variable","permalink":"/docs/c++/c++ header condition_variable"},"next":{"title":"c++ header stdexcept","permalink":"/docs/c++/c++ header error stdexcept \uc608\uc678\ucc98\ub9ac"}}');var c=r(447259),o=r(529087);const i={},a="c++ header exception",s={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"c-header-exception",children:"c++ header exception"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:'#include <exception>\r\n#include <iostream>\r\n\r\nclass Parent : public std::exception {\r\n public:\r\n  // what \uc740 std::exception \uc5d0 \uc815\uc758\ub41c \ud568\uc218\ub85c, \uc774 \uc608\uc678\uac00 \ubb34\uc5c7\uc778\uc9c0 \uc124\uba85\ud558\ub294 \ubb38\uc790\uc5f4\uc744\r\n  // \ub9ac\ud134\ud558\ub294 \ud568\uc218 \uc785\ub2c8\ub2e4.\r\n  virtual const char* what() const noexcept override { return "Parent!\\n"; }\r\n};\r\n\r\nclass Child : public Parent {\r\n public:\r\n  const char* what() const noexcept override { return "Child!\\n"; }\r\n};\r\n\r\nint func(int c) {\r\n  if (c == 1) {\r\n    throw Parent();\r\n  } else if (c == 2) {\r\n    throw Child();\r\n  }\r\n  return 0;\r\n}\r\n\r\nint main() {\r\n  int c;\r\n  std::cin >> c;\r\n\r\n  try {\r\n    func(c);\r\n  } catch (Child& c) {\r\n    std::cout << "Child Catch!" << std::endl;\r\n    std::cout << c.what();\r\n  } catch (Parent& p) {\r\n    std::cout << "Parent Catch!" << std::endl;\r\n    std::cout << p.what();\r\n  }\r\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);