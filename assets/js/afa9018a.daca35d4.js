"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[448868],{529087:(r,e,n)=>{n.d(e,{R:()=>i,x:()=>c});var s=n(596363);const t={},a=s.createContext(t);function i(r){const e=s.useContext(a);return s.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function c(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(t):r.components||t:i(r.components),s.createElement(a.Provider,{value:e},r.children)}},711600:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"db-prisma/prisma script \uc791\uc131\ud558\ub294 \ubc95","title":"prisma script \uc791\uc131\ud558\ub294 \ubc95","description":"update.ts","source":"@site/docs/db-prisma/prisma script \uc791\uc131\ud558\ub294 \ubc95.md","sourceDirName":"db-prisma","slug":"/db-prisma/prisma script \uc791\uc131\ud558\ub294 \ubc95","permalink":"/docs/db-prisma/prisma script \uc791\uc131\ud558\ub294 \ubc95","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prisma script seeding","permalink":"/docs/db-prisma/prisma script seeding"},"next":{"title":"prisma select with operating","permalink":"/docs/db-prisma/prisma select with operating"}}');var t=n(447259),a=n(529087);const i={},c="prisma script \uc791\uc131\ud558\ub294 \ubc95",o={},p=[{value:"update.ts",id:"updatets",level:2},{value:"\uc2e4\ud589",id:"\uc2e4\ud589",level:2}];function d(r){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"prisma-script-\uc791\uc131\ud558\ub294-\ubc95",children:"prisma script \uc791\uc131\ud558\ub294 \ubc95"})}),"\n",(0,t.jsx)(e.h2,{id:"updatets",children:"update.ts"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'import { PrismaClient } from "@prisma/client";\r\nimport dayjs from "dayjs";\r\n\r\nconst prisma = new PrismaClient({\r\n  datasourceUrl: "postgresql://postgres:password@ip_address:5432/mydb?schema=public",\r\n});\r\n\r\nasync function main() {\r\n  await prisma.registration.updateMany({\r\n    where: {\r\n      status: "ACTIVE",\r\n      class: {\r\n        type: {\r\n          in: ["LIVE", "LIVE_AND_RECORDED"],\r\n        },\r\n      },\r\n    },\r\n    data: {\r\n      endedAt: dayjs().add(100, "years").toDate(),\r\n    },\r\n  });\r\n}\r\n\r\nmain()\r\n  .then(async () => {\r\n    await prisma.$disconnect();\r\n  })\r\n  .catch(async (e) => {\r\n    console.error(e);\r\n    await prisma.$disconnect();\r\n    process.exit(1);\r\n  });\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\uc2e4\ud589",children:"\uc2e4\ud589"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sh",children:"ts-node update.ts\n"})})]})}function l(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(d,{...r})}):d(r)}}}]);