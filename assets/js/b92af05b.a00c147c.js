"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["233429"],{371358:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>l,toc:()=>a,default:()=>d,metadata:()=>o,assets:()=>c,contentTitle:()=>i});var o=JSON.parse('{"id":"nestjs/nest polling & long polling","title":"nest polling & long polling","description":"functions","source":"@site/docs/nestjs/nest polling & long polling.md","sourceDirName":"nestjs","slug":"/nestjs/nest polling & long polling","permalink":"/docs/nestjs/nest polling & long polling","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest platform","permalink":"/docs/nestjs/nest platform"},"next":{"title":"nest prisma Generic Service","permalink":"/docs/nestjs/nest prisma Generic CrudService"}}'),t=r(447259),s=r(255511);let l={},i="nest polling & long polling",c={},a=[{value:"functions",id:"functions",level:2},{value:"controller",id:"controller",level:2}];function p(n){let e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"nest-polling--long-polling",children:"nest polling & long polling"})}),"\n",(0,t.jsx)(e.h2,{id:"functions",children:"functions"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'const jobs = new Map<string, number>();\r\n\r\nfunction generateJobId() {\r\n  const jobId = `jobs:${Math.random().toString(36).substring(7)}`;\r\n  return jobId;\r\n}\r\n\r\nfunction doJob(jobId: string) {\r\n  let progress = 0;\r\n  const interval = setInterval(() => {\r\n    progress += 10;\r\n    jobs.set(jobId, progress);\r\n    if (progress >= 100) {\r\n      clearInterval(interval);\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nasync function checkIfJobIsDone(jobId: string) {\r\n  return new Promise((resolve, reject) => {\r\n    const interval = setInterval(() => {\r\n      const progress = jobs.get(jobId);\r\n      if (!progress) {\r\n        clearInterval(interval);\r\n        reject(new NotFoundException("Job not found"));\r\n      }\r\n      if (progress >= 100) {\r\n        clearInterval(interval);\r\n        resolve(true);\r\n      }\r\n    }, 1000);\r\n  });\r\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"controller",children:"controller"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'import { Controller, Get, NotFoundException, Post, Query, Res } from "@nestjs/common";\r\nimport { ApiTags } from "@nestjs/swagger";\r\nimport { Response } from "express";\r\n\r\n@ApiTags("Test")\r\n@Controller({ path: "tests", version: "1" })\r\nexport class TestController {\r\n  @Get("polling")\r\n  async polling(@Query("jobId") jobId: string) {\r\n    const progress = jobs.get(jobId);\r\n    if (!progress) {\r\n      throw new NotFoundException("Job not found");\r\n    }\r\n    return { progress };\r\n  }\r\n\r\n  @Get("long-polling")\r\n  async longPolling(@Query("jobId") jobId: string, @Res() res: Response) {\r\n    await checkIfJobIsDone(jobId);\r\n    const progress = jobs.get(jobId);\r\n    res.end(JSON.stringify({ progress }));\r\n  }\r\n\r\n  @Post()\r\n  async submit() {\r\n    const jobId = generateJobId();\r\n    doJob(jobId);\r\n    return { jobId };\r\n  }\r\n}\n'})})]})}function d(n={}){let{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},255511:function(n,e,r){r.d(e,{R:()=>l,x:()=>i});var o=r(596363);let t={},s=o.createContext(t);function l(n){let e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);