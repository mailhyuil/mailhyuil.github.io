"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[73368],{529087:(r,e,s)=>{s.d(e,{R:()=>i,x:()=>o});var t=s(596363);const n={},a=t.createContext(n);function i(r){const e=t.useContext(a);return t.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function o(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(n):r.components||n:i(r.components),t.createElement(a.Provider,{value:e},r.children)}},630754:(r,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"db-prisma/prisma query stream prisma-cursorstream","title":"prisma-cursorstream","description":"install","source":"@site/docs/db-prisma/prisma query stream prisma-cursorstream.md","sourceDirName":"db-prisma","slug":"/db-prisma/prisma query stream prisma-cursorstream","permalink":"/docs/db-prisma/prisma query stream prisma-cursorstream","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"queryRaw vs executeRaw","permalink":"/docs/db-prisma/prisma query queryRaw vs executeRaw"},"next":{"title":"prisma stream","permalink":"/docs/db-prisma/prisma query stream"}}');var n=s(447259),a=s(529087);const i={},o="prisma-cursorstream",c={},l=[{value:"install",id:"install",level:2},{value:"settings",id:"settings",level:2},{value:"usage",id:"usage",level:2}];function m(r){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"prisma-cursorstream",children:"prisma-cursorstream"})}),"\n",(0,n.jsx)(e.h2,{id:"install",children:"install"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-sh",children:"npm install prisma-cursorstream\n"})}),"\n",(0,n.jsx)(e.h2,{id:"settings",children:"settings"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",children:'import { PrismaClient } from "@prisma/client";\r\nimport cursorStream from "prisma-cursorstream";\r\n\r\nconst db = new PrismaClient().$extends(cursorStream);\n'})}),"\n",(0,n.jsx)(e.h2,{id:"usage",children:"usage"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",children:"const stream = db.post.cursorStream({\r\n  // Your usual findMany args\r\n  select: {\r\n    id: true,\r\n    title: true,\r\n  },\r\n  where: {\r\n    published: true,\r\n  },\r\n});\r\n\r\nfor await (const post of stream) {\r\n  console.log(post); // {id: 1, title: 'Hello!'}\r\n}\n"})})]})}function u(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(m,{...r})}):m(r)}}}]);