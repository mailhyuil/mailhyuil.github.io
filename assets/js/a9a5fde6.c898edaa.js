"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["680641"],{165947:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>s,toc:()=>c,default:()=>m,metadata:()=>t,assets:()=>o,contentTitle:()=>i});var t=JSON.parse('{"id":"angular/angular compiler ng-morph - template","title":"compile ng-morph template","description":"cheerio\uB97C \uC0AC\uC6A9","source":"@site/docs/angular/angular compiler ng-morph - template.md","sourceDirName":"angular","slug":"/angular/angular compiler ng-morph - template","permalink":"/docs/angular/angular compiler ng-morph - template","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"compile angular/compiler ivy","permalink":"/docs/angular/angular compiler ivy"},"next":{"title":"compile ng-morph","permalink":"/docs/angular/angular compiler ng-morph"}}'),l=r(447259),a=r(255511);let s={},i="compile ng-morph template",o={},c=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2}];function p(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"compile-ng-morph-template",children:"compile ng-morph template"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"cheerio\uB97C \uC0AC\uC6A9"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"npm i cheerio\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import fs from "fs";\r\nimport path from "path";\r\n\r\nconst baseDir = path.resolve(__dirname, "../apps/admin");\r\n\r\nfunction walk(dir: string) {\r\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\r\n  for (const entry of entries) {\r\n    const fullPath = path.join(dir, entry.name);\r\n    if (entry.isDirectory()) {\r\n      walk(fullPath);\r\n    } else if (entry.name.endsWith(".html")) {\r\n      transformFile(fullPath);\r\n    }\r\n  }\r\n}\r\n\r\nfunction transformFile(filePath: string) {\r\n  let content = fs.readFileSync(filePath, "utf8");\r\n\r\n  // \uC815\uADDC\uC2DD: <lepi-icon ...>...</lepi-icon> \uB610\uB294 <lepi-icon ... />\r\n  const regex = /<lepi-icon([^>]*)name="([^"]+)"([^>]*)\\/?>\\s*<\\/lepi-icon>?/gi;\r\n\r\n  const replaced = content.replace(regex, (_, preAttrs, iconName, postAttrs) => {\r\n    // \uBAA8\uB4E0 \uC18D\uC131 \uBB38\uC790\uC5F4 \uD569\uCE68\r\n    const allAttrs = `${preAttrs} ${postAttrs}`.trim();\r\n\r\n    // class \uCD94\uCD9C\r\n    const classMatch = /class="([^"]*)"/.exec(allAttrs);\r\n    const originalClass = classMatch ? classMatch[1] : "";\r\n    const iconClass = `icon-[${iconName.replace(":", "--")}]`;\r\n    const fullClass = `${originalClass} ${iconClass}`.trim();\r\n\r\n    return `<span class="${fullClass}"></span>`;\r\n  });\r\n\r\n  if (replaced !== content) {\r\n    fs.writeFileSync(filePath, replaced);\r\n    console.log(`\u2705 Updated: ${filePath}`);\r\n  }\r\n}\r\n\r\nwalk(baseDir);\n'})})]})}function m(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},255511:function(e,n,r){r.d(n,{R:()=>s,x:()=>i});var t=r(596363);let l={},a=t.createContext(l);function s(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);