"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[86051],{529087:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(596363);const o={},c=t.createContext(o);function s(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(c.Provider,{value:n},e.children)}},556104:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"kubernetes/kube object env ConfigMap","title":"kubernetes ConfigMap","description":"\uac1c\ubc1c, \ud14c\uc2a4\ud2b8, \uc6b4\uc601\uc758 \uc124\uc815 \ud30c\uc77c\ub4e4\uc744 \uad00\ub9ac","source":"@site/docs/kubernetes/kube object env ConfigMap.md","sourceDirName":"kubernetes","slug":"/kubernetes/kube object env ConfigMap","permalink":"/docs/kubernetes/kube object env ConfigMap","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kube object StatefulSet","permalink":"/docs/kubernetes/kube object StatefulSet"},"next":{"title":"kube object Secret docker-registry","permalink":"/docs/kubernetes/kube object env Secret docker-registry"}}');var o=r(447259),c=r(529087);const s={},a="kubernetes ConfigMap",i={},l=[{value:"config \uc0dd\uc131",id:"config-\uc0dd\uc131",level:2},{value:"yaml",id:"yaml",level:2}];function u(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"kubernetes-configmap",children:"kubernetes ConfigMap"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uac1c\ubc1c, \ud14c\uc2a4\ud2b8, \uc6b4\uc601\uc758 \uc124\uc815 \ud30c\uc77c\ub4e4\uc744 \uad00\ub9ac"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uc124\uc815\ud30c\uc77c\uc744 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c\ubd80\ud130 \ubd84\ub9ac"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"config-\uc0dd\uc131",children:"config \uc0dd\uc131"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"kubectl create configmap my-config --from-env-file=.env\r\n\r\nkubectl create configmap my-config --from-literal=BASE_URL=http://localhost:8080 --dry-run=client -o yaml > my-config.yaml\r\n\r\nkubectl describe configmap my-config\n"})}),"\n",(0,o.jsx)(n.h2,{id:"yaml",children:"yaml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:'apiVersion: 1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: my-config\r\ndata:\r\n  SERVER_PORT: 4200\r\n  DB_URL: "postgres://postgres:postgres@localhost:5432/postgres"\r\nspec:\r\n  containers:\r\n      - name: my-app\r\n      image: my-app:1.0\r\n      # envFrom:\r\n      #   - configMapRef:\r\n      #   name: my-config\r\n      env:\r\n        - name: MY_APP_BASE_URL # my-config\uc5d0 \uc788\ub294 BASE_URL\uc744 MY_APP_BASE_URL\uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uac00\uc838\uc628\ub2e4.\r\n        valueFrom:\r\n          configMapKeyRef:\r\n            name: my-config\r\n            key: BASE_URL\n'})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);