"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[888584],{94688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"testing/testing nestjs Auto Mocking","title":"testomg nestjs Auto Mocking","description":"module\uc5d0 \uc758\uc874\uc131\uc774 \ub9ce\uc740 \uacbd\uc6b0\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc758\uc874\uc131\uc744 mocking\ud574\uc900\ub294 \uae30\ub2a5","source":"@site/docs/testing/testing nestjs Auto Mocking.md","sourceDirName":"testing","slug":"/testing/testing nestjs Auto Mocking","permalink":"/docs/testing/testing nestjs Auto Mocking","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"jest","permalink":"/docs/testing/testing jest"},"next":{"title":"testing nestjs ExceptionFilter","permalink":"/docs/testing/testing nestjs ExecptionFilter"}}');var s=n(447259),r=n(529087);const c={},i="testomg nestjs Auto Mocking",a={},l=[];function u(e){const t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"testomg-nestjs-auto-mocking",children:"testomg nestjs Auto Mocking"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"module\uc5d0 \uc758\uc874\uc131\uc774 \ub9ce\uc740 \uacbd\uc6b0\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc758\uc874\uc131\uc744 mocking\ud574\uc900\ub294 \uae30\ub2a5"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { ModuleMocker, MockFunctionMetadata } from "jest-mock";\r\n\r\nconst moduleMocker = new ModuleMocker(global);\r\n\r\ndescribe("CatsController", () => {\r\n  let controller: CatsController;\r\n\r\n  beforeEach(async () => {\r\n    const moduleRef = await Test.createTestingModule({\r\n      controllers: [CatsController],\r\n    })\r\n      .useMocker((token) => {\r\n        const results = ["test1", "test2"];\r\n        if (token === CatsService) {\r\n          return { findAll: jest.fn().mockResolvedValue(results) };\r\n        }\r\n        if (typeof token === "function") {\r\n          const mockMetadata = moduleMocker.getMetadata(token) as MockFunctionMetadata<any, any>;\r\n          const Mock = moduleMocker.generateFromMetadata(mockMetadata);\r\n          return new Mock();\r\n        }\r\n      })\r\n      .compile();\r\n\r\n    controller = moduleRef.get(CatsController);\r\n  });\r\n});\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},529087:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(596363);const s={},r=o.createContext(s);function c(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);