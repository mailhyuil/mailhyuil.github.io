"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[839769],{409066:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"aws/aws-sdk S3","title":"aws-sdk s3","description":"install","source":"@site/docs/aws/aws-sdk S3.md","sourceDirName":"aws","slug":"/aws/aws-sdk S3","permalink":"/docs/aws/aws-sdk S3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"aws-sdk s3","permalink":"/docs/aws/aws-sdk S3 presigned url"},"next":{"title":"aws-sdk SES (simple email service)","permalink":"/docs/aws/aws-sdk SES"}}');var t=r(447259),a=r(529087);const o={},c="aws-sdk s3",i={},l=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"aws-sdk-s3",children:"aws-sdk s3"})}),"\n",(0,t.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm i @aws-sdk/client-s3\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { DeleteObjectCommand, PutObjectCommand, S3Client } from "@aws-sdk/client-s3";\r\nimport { Injectable, InternalServerErrorException, Logger } from "@nestjs/common";\r\nimport { plainToInstance } from "class-transformer";\r\nimport { MemoryStoredFile } from "nestjs-form-data";\r\nimport path from "path";\r\nimport { AwsS3DTO } from "./aws-s3.dto";\r\n\r\n@Injectable()\r\nexport class AwsS3Service {\r\n  logger = new Logger(AwsS3Service.name);\r\n  s3: S3Client;\r\n\r\n  constructor() {\r\n    this.s3 = new S3Client({\r\n      region: process.env["AWS_REGION"],\r\n      credentials: {\r\n        accessKeyId: process.env["AWS_ACCESS_KEY"],\r\n        secretAccessKey: process.env["AWS_SECRET_ACCESS_KEY"],\r\n      },\r\n    });\r\n  }\r\n\r\n  async upload(file: MemoryStoredFile) {\r\n    const ext = path.extname(file.originalName);\r\n    const basename = path.basename(file.originalName, ext);\r\n    const key = `original/${basename}_${Date.now()}${ext}`;\r\n\r\n    const command = new PutObjectCommand({\r\n      Bucket: process.env["AWS_S3_BUCKET_NAME"],\r\n      Key: key,\r\n      Body: file.buffer,\r\n    });\r\n    await this.s3.send(command).catch(error => {\r\n      this.logger.error(error);\r\n      throw new InternalServerErrorException("Failed to upload file");\r\n    });\r\n    return plainToInstance(AwsS3DTO, {\r\n      key,\r\n      url: process.env["AWS_CLOUDFRONT_DOMAIN"] + key,\r\n    });\r\n  }\r\n\r\n  async delete(key: string) {\r\n    const command = new DeleteObjectCommand({\r\n      Bucket: process.env["AWS_S3_BUCKET_NAME"],\r\n      Key: key,\r\n    });\r\n    return await this.s3.send(command);\r\n  }\r\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},529087:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(596363);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);