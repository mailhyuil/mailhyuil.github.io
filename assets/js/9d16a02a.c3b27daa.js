"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[500669],{204064:(r,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>e,toc:()=>s});const e=JSON.parse('{"id":"x interactive/d3 radarChart","title":"d3 radarChart","description":"","source":"@site/docs/x interactive/d3 radarChart.md","sourceDirName":"x interactive","slug":"/x interactive/d3 radarChart","permalink":"/docs/x interactive/d3 radarChart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"d3 load data","permalink":"/docs/x interactive/d3 load data"},"next":{"title":"d3 scale","permalink":"/docs/x interactive/d3 scale"}}');var a=n(447259),l=n(529087);const d={},i="d3 radarChart",o={},s=[];function c(r){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,l.R)(),...r.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"d3-radarchart",children:"d3 radarChart"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-html",children:'<html>\r\n  <script src="https://d3js.org/d3.v7.min.js"><\/script>\r\n  <body></body>\r\n  <script>\r\n    let data = [\r\n      { A: 1, B: 4, C: 2, D: 3, E: 6, F: 2 },\r\n      { A: 2, B: 3, C: 4, D: 1, E: 4, F: 4 },\r\n      { A: 3, B: 2, C: 4, D: 2, E: 2, F: 3 },\r\n    ];\r\n\r\n    let features = ["A", "B", "C", "D", "E", "F"];\r\n\r\n    let width = 600;\r\n    let height = 600;\r\n    let svg = d3.select("body").append("svg").attr("width", width).attr("height", height);\r\n    let radialScale = d3.scaleLinear().domain([0, 10]).range([0, 250]);\r\n    let ticks = [2, 4, 6, 8, 10];\r\n\r\n    svg\r\n      .selectAll("circle")\r\n      .data(ticks)\r\n      .join((enter) =>\r\n        enter\r\n          .append("circle")\r\n          .attr("cx", width / 2)\r\n          .attr("cy", height / 2)\r\n          .attr("fill", "none")\r\n          .attr("stroke", "gray")\r\n          .attr("r", (d) => radialScale(d))\r\n      );\r\n\r\n    svg\r\n      .selectAll(".ticklabel")\r\n      .data(ticks)\r\n      .join((enter) =>\r\n        enter\r\n          .append("text")\r\n          .attr("class", "ticklabel")\r\n          .attr("x", width / 2 + 5)\r\n          .attr("y", (d) => height / 2 - radialScale(d))\r\n          .text((d) => d.toString())\r\n      );\r\n\r\n    function angleToCoordinate(angle, value) {\r\n      let x = Math.cos(angle) * radialScale(value);\r\n      let y = Math.sin(angle) * radialScale(value);\r\n      return { x: width / 2 + x, y: height / 2 - y };\r\n    }\r\n\r\n    let featureData = features.map((f, i) => {\r\n      let angle = Math.PI / 2 + (2 * Math.PI * i) / features.length;\r\n      return {\r\n        name: f,\r\n        angle: angle,\r\n        line_coord: angleToCoordinate(angle, 10),\r\n        label_coord: angleToCoordinate(angle, 10.5),\r\n      };\r\n    });\r\n\r\n    // draw axis line\r\n    svg\r\n      .selectAll("line")\r\n      .data(featureData)\r\n      .join((enter) =>\r\n        enter\r\n          .append("line")\r\n          .attr("x1", width / 2)\r\n          .attr("y1", height / 2)\r\n          .attr("x2", (d) => d.line_coord.x)\r\n          .attr("y2", (d) => d.line_coord.y)\r\n          .attr("stroke", "black")\r\n      );\r\n\r\n    // draw axis label\r\n    svg\r\n      .selectAll(".axislabel")\r\n      .data(featureData)\r\n      .join((enter) =>\r\n        enter\r\n          .append("text")\r\n          .attr("x", (d) => d.label_coord.x)\r\n          .attr("y", (d) => d.label_coord.y)\r\n          .text((d) => d.name)\r\n      );\r\n\r\n    let line = d3\r\n      .line()\r\n      .x((d) => d.x)\r\n      .y((d) => d.y);\r\n\r\n    let colors = ["darkorange", "gray", "navy"];\r\n\r\n    function getPathCoordinates(data_point) {\r\n      let coordinates = [];\r\n      for (let i = 0; i < features.length; i++) {\r\n        let ft_name = features[i];\r\n        let angle = Math.PI / 2 + (2 * Math.PI * i) / features.length;\r\n        coordinates.push(angleToCoordinate(angle, data_point[ft_name]));\r\n      }\r\n      return coordinates;\r\n    } // draw the path element\r\n\r\n    svg\r\n      .selectAll("path")\r\n      .data(data)\r\n      .join((enter) =>\r\n        enter\r\n          .append("path")\r\n          .datum((d) => getPathCoordinates(d))\r\n          .attr("d", line)\r\n          .attr("stroke-width", 3)\r\n          .attr("stroke", (_, i) => colors[i])\r\n          .attr("fill", (_, i) => colors[i])\r\n          .attr("stroke-opacity", 1)\r\n          .attr("opacity", 0.5)\r\n      );\r\n  <\/script>\r\n</html>\n'})})]})}function h(r={}){const{wrapper:t}={...(0,l.R)(),...r.components};return t?(0,a.jsx)(t,{...r,children:(0,a.jsx)(c,{...r})}):c(r)}},529087:(r,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var e=n(596363);const a={},l=e.createContext(a);function d(r){const t=e.useContext(l);return e.useMemo(function(){return"function"==typeof r?r(t):{...t,...r}},[t,r])}function i(r){let t;return t=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:d(r.components),e.createElement(l.Provider,{value:t},r.children)}}}]);