"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["981906"],{369385:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>a,toc:()=>s,default:()=>m,metadata:()=>t,assets:()=>d,contentTitle:()=>l});var t=JSON.parse('{"id":"flutter & dart/flutter MVVM","title":"flutter MVVM","description":"MODEL","source":"@site/docs/flutter & dart/flutter MVVM.md","sourceDirName":"flutter & dart","slug":"/flutter & dart/flutter MVVM","permalink":"/docs/flutter & dart/flutter MVVM","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"flutter kakao login","permalink":"/docs/flutter & dart/flutter Kakao SDK"},"next":{"title":"flutter MediaQuery","permalink":"/docs/flutter & dart/flutter MediaQuery - screen size"}}'),o=n(447259),i=n(255511);let a={},l="flutter MVVM",d={},s=[{value:"MODEL",id:"model",level:2},{value:"VIEW MODEL",id:"view-model",level:2},{value:"VIEW",id:"view",level:2}];function c(e){let r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"flutter-mvvm",children:"flutter MVVM"})}),"\n",(0,o.jsx)(r.h2,{id:"model",children:"MODEL"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"User\uB77C\uB294 MODEL\uC744 \uC815\uC758"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"MODEL\uC5D0\uB294 Service\uB3C4 \uD3EC\uD568\uB420 \uC218 \uC788\uC74C"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"angular\uC758 DTO"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-dart",children:"class MemoModel {\r\n  String content;\r\n  DateTime createdAt;\r\n\r\n  MemoModel({\r\n    required this.content,\r\n    required this.createdAt,\r\n  });\r\n\r\n  MemoModel.fromJson(Map<String, dynamic> json)\r\n      : content = json['content'],\r\n        createdAt = DateTime.parse(json['createdAt']);\r\n\r\n  Map<String, dynamic> toJson() => {\r\n        'content': content,\r\n        'createdAt': createdAt.toIso8601String(),\r\n      };\r\n}\n"})}),"\n",(0,o.jsx)(r.h2,{id:"view-model",children:"VIEW MODEL"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"MODEL\uACFC Service\uB97C \uC0AC\uC6A9\uD558\uC5EC VIEW\uC5D0 \uBCF4\uC5EC\uC9C8 \uB370\uC774\uD130"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"MODEL\uACFC VIEW\uC758 \uC911\uAC04\uB2E4\uB9AC \uC5ED\uD560"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"angular\uC758 TS\uD30C\uC77C"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"Notifier"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-dart",children:"import 'dart:async';\r\nimport 'dart:convert';\r\n\r\nimport 'package:flutter_my_test/features/memo/models/memo_model.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\n\r\nclass MemoViewModel extends AsyncNotifier<List<MemoModel>> {\r\n  late SharedPreferences sp;\r\n  @override\r\n  FutureOr<List<MemoModel>> build() async {\r\n    sp = await SharedPreferences.getInstance();\r\n    return await getMemos();\r\n  }\r\n\r\n  Future<List<MemoModel>> getMemos() async {\r\n    List<String> memoStrings = sp.getStringList('memos') ?? [];\r\n    if (memoStrings.isNotEmpty) {\r\n      final List<Map<String, dynamic>> decodedJsonList = memoStrings\r\n          .map((e) => jsonDecode(e) as Map<String, dynamic>)\r\n          .toList();\r\n      final List<MemoModel> memos =\r\n          decodedJsonList.map((e) => MemoModel.fromJson(e)).toList();\r\n      print(memos);\r\n      return memos;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  Future<void> createMemo(MemoModel memo) async {\r\n    List<String> memoStrings = sp.getStringList('memos') ?? [];\r\n    memoStrings.add(json.encode(memo));\r\n    sp.setStringList('memos', memoStrings);\r\n\r\n    state = AsyncValue.data(await getMemos());\r\n  }\r\n}\r\n\r\nfinal memoViewModelProvider =\r\n    AsyncNotifierProvider<MemoViewModel, List<MemoModel>>(\r\n  () => MemoViewModel(),\r\n);\n"})}),"\n",(0,o.jsx)(r.h2,{id:"view",children:"VIEW"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"angular\uC758 template.html"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"ConsumerWidget"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\r\nimport 'package:flutter_my_test/features/memo/models/memo_model.dart';\r\nimport 'package:flutter_my_test/features/memo/view_models/memo_view_model.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\n\r\nclass MemoScreen extends ConsumerStatefulWidget {\r\n  const MemoScreen({Key? key}) : super(key: key);\r\n  @override\r\n  ConsumerState<ConsumerStatefulWidget> createState() => _MemoScreenState();\r\n}\r\n\r\nclass _MemoScreenState extends ConsumerState<MemoScreen> {\r\n  final TextEditingController _memoController = TextEditingController();\r\n  void _openUpdateMemo(BuildContext context, WidgetRef ref) {\r\n    showDialog(\r\n      context: context,\r\n      builder: (context) {\r\n        return AlertDialog(\r\n          title: const Text('Update Memo'),\r\n          content: Form(\r\n            child: TextFormField(\r\n              controller: _memoController,\r\n              decoration: const InputDecoration(\r\n                border: OutlineInputBorder(),\r\n                labelText: 'Memo',\r\n              ),\r\n            ),\r\n          ),\r\n          actions: [\r\n            TextButton(\r\n              onPressed: () {\r\n                Navigator.pop(context);\r\n              },\r\n              child: const Text('Cancel'),\r\n            ),\r\n            TextButton(\r\n              onPressed: () async {\r\n                print(_memoController.text);\r\n                final memo = MemoModel(\r\n                  content: _memoController.text,\r\n                  createdAt: DateTime.now(),\r\n                );\r\n                await ref.read(memoViewModelProvider.notifier).createMemo(memo);\r\n                setState(() {});\r\n                Navigator.pop(context);\r\n              },\r\n              child: const Text('Update'),\r\n            ),\r\n          ],\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return ref.watch(memoViewModelProvider).when(\r\n          error: (error, stackTrace) => Center(\r\n            child: Text(error.toString()),\r\n          ),\r\n          loading: () {\r\n            print('loading!!');\r\n            return const Center(\r\n              child: CircularProgressIndicator.adaptive(),\r\n            );\r\n          },\r\n          data: (data) {\r\n            print(data);\r\n            print('data!!');\r\n            return Scaffold(\r\n              appBar: AppBar(\r\n                title: const Text('Memo'),\r\n              ),\r\n              floatingActionButton: FloatingActionButton(\r\n                onPressed: () {\r\n                  _openUpdateMemo(context, ref);\r\n                },\r\n                child: const Icon(Icons.add),\r\n              ),\r\n              body: Center(\r\n                child: ListView.separated(\r\n                  separatorBuilder: (context, index) {\r\n                    return const Divider(\r\n                      height: 1,\r\n                      color: Colors.black,\r\n                    );\r\n                  },\r\n                  itemCount: data.length,\r\n                  itemBuilder: (context, index) {\r\n                    print(\"build!!\");\r\n                    return SizedBox(\r\n                      height: 50,\r\n                      child: Center(\r\n                        child: Text(\r\n                          data[index].content,\r\n                          style: const TextStyle(\r\n                            fontSize: 20,\r\n                            color: Colors.black,\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    );\r\n                  },\r\n                ),\r\n              ),\r\n            );\r\n          },\r\n        );\r\n  }\r\n}\n"})})]})}function m(e={}){let{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},255511:function(e,r,n){n.d(r,{R:()=>a,x:()=>l});var t=n(596363);let o={},i=t.createContext(o);function a(e){let r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);