"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[508492],{85509:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"rust/rust http server","title":"\ub7ec\uc2a4\ud2b8 \uc6f9\uc11c\ubc84","description":"tcp \ud1b5\uc2e0\uc73c\ub85c \uc8fc\uc18c\uc5d0 \ubc14\uc778\ub529\ud574\uc11c \ub4e3\uae30","source":"@site/docs/rust/rust http server.md","sourceDirName":"rust","slug":"/rust/rust http server","permalink":"/docs/rust/rust http server","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ub7ec\uc2a4\ud2b8 axum","permalink":"/docs/rust/rust http axum"},"next":{"title":"cargo","permalink":"/docs/rust/rust package cargo"}}');var s=t(447259),o=t(529087);const a={},c="\ub7ec\uc2a4\ud2b8 \uc6f9\uc11c\ubc84",l={},i=[{value:"\ubc84\ud37c \uc0ac\uc6a9",id:"\ubc84\ud37c-\uc0ac\uc6a9",level:2}];function u(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\ub7ec\uc2a4\ud2b8-\uc6f9\uc11c\ubc84",children:"\ub7ec\uc2a4\ud2b8 \uc6f9\uc11c\ubc84"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"tcp \ud1b5\uc2e0\uc73c\ub85c \uc8fc\uc18c\uc5d0 \ubc14\uc778\ub529\ud574\uc11c \ub4e3\uae30"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"tcp \uc5f0\uacb0\uc774 \ub418\uba74 stream\uc774 \ub4e4\uc5b4\uc628\ub2e4"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"stream\uc744 \ud1b5\ud574\uc11c HTTP \ubb38\ubc95\uc73c\ub85c \ub370\uc774\ud130 \uc804\ub2ec"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fs",children:'use std::io::prelude::*;\r\nuse std::net::TcpListener;\r\nuse std::net::TcpStream;\r\nuse std::fs::File;\r\n\r\nfn main() {\r\n    let listener = TcpListener::bind("localhost:7878").unwrap(); // TcpListener\ub85c localhost:7878\uc758 tcp \uc5f0\uacb0 \ub4e3\uae30\r\n\r\n    for stream in listener.incoming(){ // TcpListener\uac00 \ub4e4\uc740 \uc5f0\uacb0\uc5d0\uc11c TcpStream\uc744 \ubf51\ub294\ub2e4\r\n        let stream = stream.unwrap();\r\n\r\n        handle_connection(stream) // TcpStream\uc744 \ud1b5\ud574\uc11c \ub370\uc774\ud130\ub97c \uc804\ub2ec\r\n    }\r\n\r\n    fn handle_connection(mut stream: TcpStream) {\r\n        let mut file = File::open("index.html").unwrap(); // index.html\ud30c\uc77c \uc5f4\uae30\r\n\r\n        let mut contents = String::new(); // contents \ubcc0\uc218 \uc0dd\uc131 String \ud0c0\uc785\r\n        file.read_to_string(&mut contents).unwrap(); // \uc5f4\uc5b4\ub193\uc740 index.html\uc744 string\uc73c\ub85c \uc77d\uc5b4\uc11c contents\uc5d0 \uc800\uc7a5\r\n\r\n        let response = format!( // response\ub85c \ud3ec\uba67\ud305\r\n            "HTTP/1.1 200 OK\\r\\nContent-Length: {}\\r\\n\\r\\n{}", // HTTP \ud504\ub85c\ud1a0\ucf5c \ubb38\ubc95\uc5d0 \ub9de\ucdb0\uc11c contenst \uae38\uc774\uc640 \ucf58\ud150\uce20 \ubc14\ub514\uc5d0 \ub123\uae30\r\n            contents.len(),\r\n            contents\r\n        );\r\n\r\n        stream.write(response.as_bytes()).unwrap(); // stream\uc73c\ub85c response\ub97c bytes\ub85c \ube0c\ub77c\uc6b0\uc800\uc5d0 \uc804\ub2ec(\uc4f0\uae30)\r\n        stream.flush().unwrap(); // \uc2a4\ud2b8\ub9bc \uc790\uc6d0 \ud574\uc81c\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\ubc84\ud37c-\uc0ac\uc6a9",children:"\ubc84\ud37c \uc0ac\uc6a9"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:'use std::io::prelude::*;\r\nuse std::net::TcpListener;\r\nuse std::net::TcpStream;\r\nuse std::fs::File;\r\n\r\nfn main() {\r\n    let listener = TcpListener::bind("localhost:7878").unwrap(); // TcpListener\ub85c localhost:7878\uc758 tcp \uc5f0\uacb0 \ub4e3\uae30\r\n\r\n    for stream in listener.incoming(){ // TcpListener\uac00 \ub4e4\uc740 \uc5f0\uacb0\uc5d0\uc11c TcpStream\uc744 \ubf51\ub294\ub2e4\r\n        let stream = stream.unwrap();\r\n\r\n        handle_connection(stream) // TcpStream\uc744 \ud1b5\ud574\uc11c \ub370\uc774\ud130\ub97c \uc804\ub2ec\r\n    }\r\n\r\nfn handle_connection(mut stream: TcpStream) {\r\n    let mut buffer = [0; 512]; // 512byte\uc758 \ubc84\ud37c \uc778\uc2a4\ud134\uc2a4\r\n    stream.read(&mut buffer).unwrap(); // \uc694\uccad \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc11c \ubc84\ud37c\uc5d0 \uc800\uc7a5\r\n\r\n    let get = b"GET / HTTP/1.1\\r\\n";\r\n\r\n    if buffer.starts_with(get) { // buffer\uc548\uc5d0 \uc788\ub294 \uc694\uccad \ub370\uc774\ud130\uac00 get\uc73c\ub85c \uc2dc\uc791\ud558\uba74 index.html \uc804\uc1a1\r\n        let mut file = File::open("index.html").unwrap(); // index.html\ud30c\uc77c \uc5f4\uae30\r\n\r\n        let mut contents = String::new(); // contents \ubcc0\uc218 \uc0dd\uc131 String \ud0c0\uc785\r\n        file.read_to_string(&mut contents).unwrap(); // \uc5f4\uc5b4\ub193\uc740 index.html\uc744 string\uc73c\ub85c \uc77d\uc5b4\uc11c contents\uc5d0 \uc800\uc7a5\r\n\r\n        let response = format!( // response\ub85c \ud3ec\uba67\ud305\r\n            "HTTP/1.1 200 OK\\r\\nContent-Length: {}\\r\\n\\r\\n{}", // HTTP \ud504\ub85c\ud1a0\ucf5c \ubb38\ubc95\uc5d0 \ub9de\ucdb0\uc11c contenst \uae38\uc774\uc640 \ucf58\ud150\uce20 \ubc14\ub514\uc5d0 \ub123\uae30\r\n            contents.len(),\r\n            contents\r\n        );\r\n\r\n        stream.write(response.as_bytes()).unwrap(); // stream\uc73c\ub85c response\ub97c bytes\ub85c \ube0c\ub77c\uc6b0\uc800\uc5d0 \uc804\ub2ec(\uc4f0\uae30)\r\n        stream.flush().unwrap(); // \uc2a4\ud2b8\ub9bc \uc790\uc6d0 \ud574\uc81c\r\n    } else { // /\uc694\uccad\uc774 \uc544\ub2d0\uc2dc 404 \ud398\uc774\uc9c0 \uc804\ub2ec\r\n        let status_line = "HTTP/1.1 404 NOT FOUND";\r\n        let mut file = File::open("404.html").unwrap();\r\n        let mut contents = String::new();\r\n\r\n        file.read_to_string(&mut contents).unwrap();\r\n\r\n        let response = format!(\r\n            "{}\\r\\nContent-Length: {}\\r\\n\\r\\n{}",\r\n            status_line,\r\n            contents.len(),\r\n            contents\r\n        );\r\n\r\n        stream.write(response.as_bytes()).unwrap();\r\n        stream.flush().unwrap();\r\n    }\r\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},529087:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var r=t(596363);const s={},o=r.createContext(s);function a(n){const e=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);