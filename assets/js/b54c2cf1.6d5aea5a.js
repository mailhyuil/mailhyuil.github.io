"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[116861],{529087:(n,e,r)=>{r.d(e,{R:()=>c,x:()=>o});var t=r(596363);const s={},i=t.createContext(s);function c(n){const e=t.useContext(i);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(i.Provider,{value:e},n.children)}},764317:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"spring/spring J-UNIT","title":"Junit (\uc720\ub2db \ud14c\uc2a4\ud2b8)","description":"spring-test & j-unit","source":"@site/docs/spring/spring J-UNIT.md","sourceDirName":"spring","slug":"/spring/spring J-UNIT","permalink":"/docs/spring/spring J-UNIT","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"HttpClient","permalink":"/docs/spring/spring HttpClient"},"next":{"title":"JPA","permalink":"/docs/spring/spring JPA"}}');var s=r(447259),i=r(529087);const c={},o="Junit (\uc720\ub2db \ud14c\uc2a4\ud2b8)",l={},a=[{value:"spring-test &amp; j-unit",id:"spring-test--j-unit",level:2}];function d(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"junit-\uc720\ub2db-\ud14c\uc2a4\ud2b8",children:"Junit (\uc720\ub2db \ud14c\uc2a4\ud2b8)"})}),"\n",(0,s.jsx)(e.h2,{id:"spring-test--j-unit",children:"spring-test & j-unit"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"\x3c!-- https://mvnrepository.com/artifact/org.springframework/spring-test --\x3e\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-test</artifactId>\r\n    <version>5.2.22.RELEASE</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["spring-test annotation","\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\ud544\uc694\ud55c \uc124\uc815\ub9cc \ub530\ub85c \ub9cc\ub4e4\uae30!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'@WebAppConfiguration\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(locations = {"file:src/test/*-context.xml"})\r\n\r\n@Autowired\r\n\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"test annotation (\ud14c\uc2a4\ud2b8 \uc5b4\ub178\ud14c\uc774\uc158)"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"//static \uba54\uc18c\ub4dc\ub85c \uc791\uc131\r\n@BeforeAll\r\n@AfterAll\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'@BeforeEach\r\n@AfterEach\r\n\r\n@Test\r\n@DisplayName("")\r\n@Disabled\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"@WebMvcTest(.class)"}),"\r\n",(0,s.jsx)(e.code,{children:"@AutoConfigureWebMvc"}),"\r\n",(0,s.jsx)(e.code,{children:"@MockBean"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"BDDMockito \uac1d\uccb4"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"new BDDMockito().given(bbsService.selectAll()).willReturn(\r\n        new ArrayList<Bbs>()\r\n);\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Assertions(\ub2e8\uc5b8) \uac1d\uccb4 // \uc8fc\ub85c static\uc73c\ub85c \uc120\uc5b8"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"//\uc77c\ubc18 \ub2e8\uc5b8\r\nassertEquals();\r\nassertTrue();\r\n...\r\n\r\n// \ud584\ud06c\ub808\uc2a4\ud2b8 \ub2e8\uc5b8\r\nassertThat(a, is(a));\r\nassertThat(a, equalsTo(a));\r\n...\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\uc608\uc678"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:'@Test(expected=Exception.class)\r\n\r\ntry{\r\n    account.withdraw();\r\n} catch(Exception expected){\r\n    assertThat(expected.getMessage(), equalTo("balance only 0"));\r\n}\r\n\r\n@Rule\r\npublic ExpectedException thrown = ExpectedException.none();\r\n\r\n@Test\r\npublic void exceptionRule(){\r\n    thrown.expect(Exception.class);\r\n    thrown.expectMessage("balance only 0");\r\n\r\n    account.withdraw();\r\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);