"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["236975"],{574170:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>i,toc:()=>l,default:()=>u,metadata:()=>o,assets:()=>c,contentTitle:()=>s});var o=JSON.parse('{"id":"api/api oauth kakao login","title":"api oauth kakao login","description":"login.component.ts","source":"@site/docs/api/api oauth kakao login.md","sourceDirName":"api","slug":"/api/api oauth kakao login","permalink":"/docs/api/api oauth kakao login","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api oauth google","permalink":"/docs/api/api oauth google"},"next":{"title":"api oauth kakao logout","permalink":"/docs/api/api oauth kakao logout"}}'),t=r(447259),a=r(255511);let i={},s="api oauth kakao login",c={},l=[{value:"login.component.ts",id:"logincomponentts",level:2},{value:"login-redirect.component.ts",id:"login-redirectcomponentts",level:2},{value:"auth.service.ts (SERVER)",id:"authservicets-server",level:2}];function p(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api-oauth-kakao-login",children:"api oauth kakao login"})}),"\n",(0,t.jsx)(n.h2,{id:"logincomponentts",children:"login.component.ts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { Component } from "@angular/core";\r\nimport { environment } from "../../environment";\r\ndeclare const Kakao: any;\r\n\r\n@Component({\r\n  selector: "app-login",\r\n  templateUrl: "./login.component.html",\r\n  styleUrls: ["./login.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport default class LoginComponent {\r\n  loginWithKakao() {\r\n    Kakao.Auth.authorize({\r\n      redirectUri: environment.KAKAO_REDIRECT_URI,\r\n      scope: "account_email,gender,openid", // opendid \uBC18\uB4DC\uC2DC \uCD94\uAC00 (\uC778\uC99D\uC744 \uC704\uD55C \uD1A0\uD070\uC744 \uBC1B\uAE30 \uC704\uD568)\r\n    });\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"login-redirectcomponentts",children:"login-redirect.component.ts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { CommonModule, isPlatformServer } from "@angular/common";\r\nimport { Component, OnInit, PLATFORM_ID, inject } from "@angular/core";\r\nimport { ActivatedRoute, Router } from "@angular/router";\r\nimport { switchMap } from "rxjs";\r\nimport { ToastService } from "../../../services/toast.service";\r\nimport { AuthStore } from "../../../store/auth.store";\r\nimport { AuthApiService } from "../auth-api.service";\r\n\r\n@Component({\r\n  selector: "app-login-redirect",\r\n  templateUrl: "./login-redirect.component.html",\r\n  styleUrls: ["./login-redirect.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport default class LoginRedirectComponent implements OnInit {\r\n  authApi = inject(AuthApiService);\r\n  store = inject(AuthStore);\r\n  route = inject(ActivatedRoute);\r\n  router = inject(Router);\r\n  platformId = inject(PLATFORM_ID);\r\n  toastService = inject(ToastService);\r\n  ngOnInit(): void {\r\n    const code = this.route.snapshot.queryParams["code"];\r\n    if (code) {\r\n      if (isPlatformServer(this.platformId)) return;\r\n      this.authApi\r\n        .loginByKakao(code)\r\n        .pipe(switchMap(() => this.authApi.getAuth()))\r\n        .subscribe(auth => {\r\n          if (auth) {\r\n            this.store.setAuth(auth);\r\n            this.router.navigate(["/"], {\r\n              replaceUrl: true,\r\n            });\r\n            this.toastService.openSuccess("\uB85C\uADF8\uC778 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.");\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"authservicets-server",children:"auth.service.ts (SERVER)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'export class AuthService {\r\n  async loginByKakao(data: LoginByKakaoDTO) {\r\n    let kakaoAccessToken;\r\n    let kakaoRefreshToken;\r\n    const kakaoRequest$ = this.http\r\n      .post(\r\n        "https://kauth.kakao.com/oauth/token",\r\n        {\r\n          code: data.code,\r\n          grant_type: "authorization_code",\r\n          redirect_uri: process.env["KAKAO_REDIRECT_URI"],\r\n          client_id: process.env["KAKAO_REST_API_KEY"],\r\n        },\r\n        {\r\n          headers: {\r\n            "Content-Type": "application/x-www-form-urlencoded;charset=utf-8",\r\n          },\r\n        },\r\n      )\r\n      .pipe(\r\n        map(response => ({\r\n          accessToken: response.data.access_token,\r\n          refreshToken: response.data.refresh_token,\r\n        })),\r\n        switchMap(({ accessToken, refreshToken }) => {\r\n          kakaoAccessToken = accessToken;\r\n          kakaoRefreshToken = refreshToken;\r\n          return this.http.get("https://kapi.kakao.com/v2/user/me", {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n              "Content-Type": "application/x-www-form-urlencoded;charset=utf-8",\r\n            },\r\n          });\r\n        }),\r\n        map(response => response.data),\r\n        catchError(e => {\r\n          console.error(e);\r\n          throw new UnauthorizedException("\uC778\uC99D\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4.");\r\n        }),\r\n      );\r\n\r\n    const kakaoProfile = await lastValueFrom(kakaoRequest$);\r\n\r\n    let user = await this.prisma.authentication\r\n      .findFirst({\r\n        where: {\r\n          provider: "KAKAO",\r\n          providerId: kakaoProfile.id + "",\r\n        },\r\n      })\r\n      .user();\r\n\r\n    if (!user) {\r\n      user = await this.prisma.user.create({\r\n        data: {\r\n          name: kakaoProfile.kakao_account.kakaoProfile.nickname,\r\n          email: kakaoProfile.kakao_account.email,\r\n          roles: {\r\n            set: ["MEMBER"],\r\n          },\r\n          authentications: {\r\n            create: {\r\n              provider: "KAKAO",\r\n              providerId: kakaoProfile.id + "",\r\n            },\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      const updated = await this.prisma.authentication.update({\r\n        where: {\r\n          provider: "KAKAO",\r\n          providerId: kakaoProfile.id + "",\r\n        },\r\n        data: {\r\n          accessToken: kakaoAccessToken,\r\n          refreshToken: kakaoRefreshToken,\r\n        },\r\n      });\r\n    }\r\n\r\n    const jwtAccessToken = await this.createAccessToken(user);\r\n    const jwtXAccessToken = await this.createXAccessToken();\r\n    const jwtRefreshToken = await this.createRefreshToken(user);\r\n    const jwtXRefreshToken = await this.createXRefreshToken();\r\n    return {\r\n      accessToken: jwtAccessToken,\r\n      refreshToken: jwtRefreshToken,\r\n      xAccessToken: jwtXAccessToken,\r\n      xRefreshToken: jwtXRefreshToken,\r\n    };\r\n  }\r\n}\n'})})]})}function u(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},255511:function(e,n,r){r.d(n,{R:()=>i,x:()=>s});var o=r(596363);let t={},a=o.createContext(t);function i(e){let n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);