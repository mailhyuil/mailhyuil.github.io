"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[301983],{529087:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var r=s(596363);const t={},o=r.createContext(t);function c(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(o.Provider,{value:n},e.children)}},932439:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"nestjs/nest cluster","title":"nest cluster","description":"nestjs\uc5d0\uc11c cluster\ub97c \uc0ac\uc6a9\ud558\uc5ec cpu \uc0ac\uc6a9\ub960\uc744 \ub192\uc774\uae30","source":"@site/docs/nestjs/nest cluster.md","sourceDirName":"nestjs","slug":"/nestjs/nest cluster","permalink":"/docs/nestjs/nest cluster","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest-cli","permalink":"/docs/nestjs/nest cli"},"next":{"title":"nest compression","permalink":"/docs/nestjs/nest compression"}}');var t=s(447259),o=s(529087);const c={},l="nest cluster",i={},u=[];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"nest-cluster",children:"nest cluster"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"nestjs\uc5d0\uc11c cluster\ub97c \uc0ac\uc6a9\ud558\uc5ec cpu \uc0ac\uc6a9\ub960\uc744 \ub192\uc774\uae30"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"pm2\uc758 cluster mode\uc640 \uac19\uc740 \ud6a8\uacfc"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { NestFactory } from "@nestjs/core";\r\nimport { AppModule } from "./app.module";\r\nimport * as cluster from "cluster";\r\nimport * as os from "os";\r\n\r\nasync function bootstrap() {\r\n  if (cluster.isMaster) {\r\n    const numCPUs = os.cpus().length;\r\n    console.log(`Master process ${process.pid} is running`);\r\n\r\n    // CPU \ucf54\uc5b4 \uc218\ub9cc\ud07c Worker \uc0dd\uc131\r\n    for (let i = 0; i < numCPUs; i++) {\r\n      cluster.fork();\r\n    }\r\n\r\n    cluster.on("exit", (worker, code, signal) => {\r\n      console.log(`Worker ${worker.process.pid} died. Restarting...`);\r\n      cluster.fork();\r\n    });\r\n  } else {\r\n    // Worker \ud504\ub85c\uc138\uc2a4 \uc2e4\ud589\r\n    NestFactory.create(AppModule)\r\n      .then(app => app.listen(3000))\r\n      .then(() => console.log(`Worker ${process.pid} started`));\r\n  }\r\n}\r\n\r\nbootstrap();\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);