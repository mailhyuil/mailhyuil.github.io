"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["110400"],{751783:function(e,a,t){t.r(a),t.d(a,{frontMatter:()=>s,toc:()=>l,default:()=>m,metadata:()=>r,assets:()=>c,contentTitle:()=>o});var r=JSON.parse('{"id":"db-prisma/prisma Promise lazy evaluation","title":"prisma Promise lazy evaluation","description":"prisma\uC758 create, update\uB294 Lazy Evaluation\uC744 \uC0AC\uC6A9\uD55C\uB2E4.","source":"@site/docs/db-prisma/prisma Promise lazy evaluation.md","sourceDirName":"db-prisma","slug":"/db-prisma/prisma Promise lazy evaluation","permalink":"/docs/db-prisma/prisma Promise lazy evaluation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prisma ERD","permalink":"/docs/db-prisma/prisma ERD"},"next":{"title":"prisma accelerate cache","permalink":"/docs/db-prisma/prisma accelerate cache"}}'),i=t(447259),n=t(255511);let s={},o="prisma Promise lazy evaluation",c={},l=[];function u(e){let a={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"prisma-promise-lazy-evaluation",children:"prisma Promise lazy evaluation"})}),"\n",(0,i.jsxs)(a.blockquote,{children:["\n",(0,i.jsx)(a.p,{children:"prisma\uC758 create, update\uB294 Lazy Evaluation\uC744 \uC0AC\uC6A9\uD55C\uB2E4."}),"\n",(0,i.jsxs)(a.blockquote,{children:["\n",(0,i.jsx)(a.p,{children:"\uC989 await, then, catch\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC73C\uBA74 \uC2E4\uD589\uB418\uC9C0 \uC54A\uB294\uB2E4."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-sh",children:"This happens because Prisma queries are then-ables, meaning they only execute when you call await or .then() or .catch(). This is called lazy evaluation. This is different than a regular promise which starts executing immediately. There's an issue in the Prisma docs repository about this which you can check out for more information.\r\n\r\nHow to implement: Check out this library: https://github.com/sindresorhus/p-lazy\n"})})]})}function m(e={}){let{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},255511:function(e,a,t){t.d(a,{R:()=>s,x:()=>o});var r=t(596363);let i={},n=r.createContext(i);function s(e){let a=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(n.Provider,{value:a},e.children)}}}]);