"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[721657],{529087:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(596363);const o={},c=t.createContext(o);function i(e){const r=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(c.Provider,{value:r},e.children)}},552311:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ai langchain/langchain Vector Stores MemoryVectorStore","title":"langchain Vector Stores","description":"langchain\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 In-Memory Vector Store","source":"@site/docs/ai langchain/langchain Vector Stores MemoryVectorStore.md","sourceDirName":"ai langchain","slug":"/ai langchain/langchain Vector Stores MemoryVectorStore","permalink":"/docs/ai langchain/langchain Vector Stores MemoryVectorStore","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"langchain Retriever","permalink":"/docs/ai langchain/langchain Vector Retriever"},"next":{"title":"langchain Vector Stores pgvector","permalink":"/docs/ai langchain/langchain Vector Stores pgvector"}}');var o=n(447259),c=n(529087);const i={},a="langchain Vector Stores",s={},l=[];function d(e){const r={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"langchain-vector-stores",children:"langchain Vector Stores"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"langchain\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 In-Memory Vector Store"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"Embedding Model\uc744 Vector Store\uc5d0 \uc124\uc815"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"\uac12\uc740 Document \ud0c0\uc785\uc744 \uc0ac\uc6a9\ud55c\ub2e4."}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"delete \ud568\uc218\ub97c \uc544\uc9c1 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294\ub2e4."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:'import type { Document } from "@langchain/core/documents";\r\nimport { OpenAIEmbeddings } from "@langchain/openai";\r\nimport { Injectable } from "@nestjs/common";\r\nimport { MemoryVectorStore } from "langchain/vectorstores/memory";\r\n\r\n@Injectable()\r\nexport class VectorStore implements OnModuleInit {\r\n  embeddings: OpenAIEmbeddings;\r\n  vectorStore: MemoryVectorStore;\r\n\r\n  onModuleInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.embeddings = new OpenAIEmbeddings({\r\n      model: "text-embedding-3-small",\r\n    });\r\n    this.vectorStore = new MemoryVectorStore(this.embeddings);\r\n  }\r\n\r\n  async add(docs: Document[]) {\r\n    return this.vectorStore.addDocuments(docs);\r\n  }\r\n\r\n  async get(query: string, k: number, filter?: (doc: Document) => boolean) {\r\n    // query: \uac80\uc0c9\ud560 \ubb38\uc7a5, k: \ubc18\ud658\ud560 \ubb38\uc11c \uc218, filter: \ud544\ud130 \ud568\uc218\r\n    // \ubca1\ud130 \uc800\uc7a5\uc18c\ub97c \uc9c1\uc811 \uac80\uc0c9\r\n    // \uc0ac\uc6a9\uc774 \uac04\ub2e8\ud558\ub2e4.\r\n    return await this.vectorStore.similaritySearch(query, k, filter);\r\n  }\r\n\r\n  async retrieve(query: string, k?: number, filter?: (doc: Document) => boolean) {\r\n    // query: \uac80\uc0c9\ud560 \ubb38\uc7a5, k: \ubc18\ud658\ud560 \ubb38\uc11c \uc218, filter: \ud544\ud130 \ud568\uc218, searchType: \uac80\uc0c9 \ubc29\ubc95, searchKwargs: \uac80\uc0c9 \uc635\uc158\r\n    // retriever\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac80\uc0c9\r\n    // \ud65c\uc6a9 \ubc94\uc704\uac00 \ub354 \ub113\uace0 \ub2e4\uc591\ud55c \uc635\uc158\uc744 \uc81c\uacf5\ud55c\ub2e4.\r\n    const retriever = this.vectorStore.asRetriever({\r\n      searchType: "mmr",\r\n      searchKwargs: {\r\n        fetchK: 10,\r\n      },\r\n      filter,\r\n      k,\r\n    });\r\n    return await retriever.invoke(query);\r\n  }\r\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);