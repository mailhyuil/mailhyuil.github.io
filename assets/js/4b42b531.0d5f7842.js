"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["924081"],{688387:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>c,toc:()=>a,default:()=>d,metadata:()=>o,assets:()=>l,contentTitle:()=>i});var o=JSON.parse('{"id":"testing/testing nestjs Auto Mocking","title":"testomg nestjs Auto Mocking","description":"module\uC5D0 \uC758\uC874\uC131\uC774 \uB9CE\uC740 \uACBD\uC6B0\uC5D0 \uC790\uB3D9\uC73C\uB85C \uC758\uC874\uC131\uC744 mocking\uD574\uC900\uB294 \uAE30\uB2A5","source":"@site/docs/testing/testing nestjs Auto Mocking.md","sourceDirName":"testing","slug":"/testing/testing nestjs Auto Mocking","permalink":"/docs/testing/testing nestjs Auto Mocking","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"jest","permalink":"/docs/testing/testing jest"},"next":{"title":"testing nestjs ExceptionFilter","permalink":"/docs/testing/testing nestjs ExecptionFilter"}}'),r=n(447259),s=n(255511);let c={},i="testomg nestjs Auto Mocking",l={},a=[];function u(e){let t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"testomg-nestjs-auto-mocking",children:"testomg nestjs Auto Mocking"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"module\uC5D0 \uC758\uC874\uC131\uC774 \uB9CE\uC740 \uACBD\uC6B0\uC5D0 \uC790\uB3D9\uC73C\uB85C \uC758\uC874\uC131\uC744 mocking\uD574\uC900\uB294 \uAE30\uB2A5"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import { ModuleMocker, MockFunctionMetadata } from "jest-mock";\r\n\r\nconst moduleMocker = new ModuleMocker(global);\r\n\r\ndescribe("CatsController", () => {\r\n  let controller: CatsController;\r\n\r\n  beforeEach(async () => {\r\n    const moduleRef = await Test.createTestingModule({\r\n      controllers: [CatsController],\r\n    })\r\n      .useMocker((token) => {\r\n        const results = ["test1", "test2"];\r\n        if (token === CatsService) {\r\n          return { findAll: jest.fn().mockResolvedValue(results) };\r\n        }\r\n        if (typeof token === "function") {\r\n          const mockMetadata = moduleMocker.getMetadata(token) as MockFunctionMetadata<any, any>;\r\n          const Mock = moduleMocker.generateFromMetadata(mockMetadata);\r\n          return new Mock();\r\n        }\r\n      })\r\n      .compile();\r\n\r\n    controller = moduleRef.get(CatsController);\r\n  });\r\n});\n'})})]})}function d(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},255511:function(e,t,n){n.d(t,{R:()=>c,x:()=>i});var o=n(596363);let r={},s=o.createContext(r);function c(e){let t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);