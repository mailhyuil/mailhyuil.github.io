"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[669022],{529087:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(596363);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},879111:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"angular/angular base directive counter","title":"angular counter directive","description":"","source":"@site/docs/angular/angular base directive counter.md","sourceDirName":"angular","slug":"/angular/angular base directive counter","permalink":"/docs/angular/angular base directive counter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular base directive click-outside","permalink":"/docs/angular/angular base directive click-outside"},"next":{"title":"angular base directive hostDirective","permalink":"/docs/angular/angular base directive hostDirective"}}');var i=r(447259),s=r(529087);const a={},c="angular counter directive",o={},l=[];function u(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"angular-counter-directive",children:"angular counter directive"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { AfterViewInit, Directive, ElementRef } from "@angular/core";\r\n\r\n@Directive({\r\n  selector: "[counter]",\r\n  standalone: true,\r\n})\r\nexport class CounterAnimationDirective implements AfterViewInit {\r\n  private counter = 0;\r\n  private end = 0;\r\n  private intersectionObserver: IntersectionObserver;\r\n  private intersectingCache: boolean = false;\r\n\r\n  constructor(private el: ElementRef<HTMLElement>) {\r\n    const intersectionObserverInit: IntersectionObserverInit = {\r\n      rootMargin: "-40px",\r\n    };\r\n    this.intersectionObserver = new IntersectionObserver((entries) => {\r\n      this.onIntersection(entries[0]);\r\n    }, intersectionObserverInit);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.end = parseInt(this.el.nativeElement.textContent!);\r\n    this.el.nativeElement.textContent = "0";\r\n    this.intersectionObserver.observe(this.el.nativeElement);\r\n  }\r\n\r\n  onIntersection(entry: IntersectionObserverEntry) {\r\n    if (this.intersectingCache) {\r\n      return;\r\n    }\r\n\r\n    if (this.intersectingCache == entry.isIntersecting) {\r\n      return;\r\n    }\r\n\r\n    this.intersectingCache = entry.isIntersecting;\r\n    if (!this.intersectingCache) {\r\n      return;\r\n    }\r\n\r\n    this.handleCounter();\r\n\r\n    this.intersectionObserver.disconnect();\r\n  }\r\n\r\n  handleCounter() {\r\n    const interval = setInterval(() => {\r\n      this.el.nativeElement.textContent = `${this.end === 0 ? 0 : ++this.counter}`;\r\n      if (this.counter === this.end) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 500 / this.end);\r\n  }\r\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);