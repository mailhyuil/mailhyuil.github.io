"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["80429"],{185318:function(s,n,r){r.r(n),r.d(n,{frontMatter:()=>a,toc:()=>i,default:()=>l,metadata:()=>t,assets:()=>d,contentTitle:()=>o});var t=JSON.parse('{"id":"c++/c++ base class","title":"c++ class","description":"","source":"@site/docs/c++/c++ base class.md","sourceDirName":"c++","slug":"/c++/c++ base class","permalink":"/docs/c++/c++ base class","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"c++ class \uC0DD\uC131\uC790 \uD638\uCD9C","permalink":"/docs/c++/c++ base class \uC0DD\uC131\uC790 \uD638\uCD9C"},"next":{"title":"c++ compiler gcc vs g++","permalink":"/docs/c++/c++ base compiler gcc vs g++"}}'),e=r(447259),c=r(255511);let a={},o="c++ class",d={},i=[];function u(s){let n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,c.R)(),...s.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.header,{children:(0,e.jsx)(n.h1,{id:"c-class",children:"c++ class"})}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <vector>\r\n#include <memory>\r\n\r\nclass User {\r\n    std::string name;\r\n    std::string password;\r\n    std::unique_ptr<std::vector<std::string>> contacts;\r\n\r\npublic:\r\n    // \uAE30\uBCF8 \uC0DD\uC131\uC790\r\n    User() : name("default"), password("default"), contacts(std::make_unique<std::vector<std::string>>()) {}\r\n\r\n    // \uB9E4\uAC1C\uBCC0\uC218\uAC00 2\uAC1C \uC788\uB294 \uC0DD\uC131\uC790\r\n    User(std::string name, std::string password): name(name), password(password), contacts(std::make_unique<std::vector<std::string>>()) {}\r\n\r\n    // \uB9E4\uAC1C\uBCC0\uC218\uAC00 3\uAC1C \uC788\uB294 \uC0DD\uC131\uC790\r\n    User(std::string name, std::string password, const std::vector<std::string>& contacts): name(name), password(password), contacts(std::make_unique<std::vector<std::string>>(contacts)) {}\r\n\r\n    // \uBCF5\uC0AC \uC0DD\uC131\uC790 (\uAE4A\uC740 \uBCF5\uC0AC)\r\n    User(const User& _user) : name(_user.name), password(_user.password), contacts(std::make_unique<std::vector<std::string>>(*_user.contacts)) {}\r\n\r\n    // \uC774\uB3D9 \uC0DD\uC131\uC790\r\n    User(User&& _user) noexcept : name(std::move(_user.name)), password(std::move(_user.password)), contacts(std::move(_user.contacts)) {}\r\n\r\n    // \uB300\uC785 \uC5F0\uC0B0\uC790\uC758 \uC624\uBC84\uB85C\uB529 (\uAE4A\uC740 \uBCF5\uC0AC)\r\n    User& operator=(const User& _user) {\r\n        if (this != &_user) {\r\n            name = _user.name;\r\n            password = _user.password;\r\n            contacts = std::make_unique<std::vector<std::string>>(*_user.contacts);\r\n        }\r\n        return *this;\r\n    }\r\n\r\n    void addContact(const std::string& contact) {\r\n        contacts->push_back(contact);\r\n    }\r\n\r\n    void printInfo() {\r\n        std::cout << "name: " << name << "\\n";\r\n        std::cout << "password: " << password << "\\n";\r\n        std::cout << "contacts: ";\r\n        for (const auto& contact : *contacts) {\r\n            std::cout << contact << ", ";\r\n        }\r\n        std::cout << "\\n";\r\n    }\r\n\r\n    // \uC18C\uBA78\uC790\r\n    ~User() {\r\n        std::cout << "Bye Bye~ " << name << "\\n";\r\n    }\r\n};\r\n\r\nint main(){\r\n    User user("hyuil", "1234"); // \uAE30\uBCF8 \uC0DD\uC131\uC790 \uD638\uCD9C\r\n    user.addContact("010-7502-0301");\r\n    user.addContact("mailhyuil@gmail.com");\r\n    user.addContact("hyuil@naver.com");\r\n    user.printInfo();\r\n    return 0;\r\n}\n'})})]})}function l(s={}){let{wrapper:n}={...(0,c.R)(),...s.components};return n?(0,e.jsx)(n,{...s,children:(0,e.jsx)(u,{...s})}):u(s)}},255511:function(s,n,r){r.d(n,{R:()=>a,x:()=>o});var t=r(596363);let e={},c=t.createContext(e);function a(s){let n=t.useContext(c);return t.useMemo(function(){return"function"==typeof s?s(n):{...n,...s}},[n,s])}function o(s){let n;return n=s.disableParentContext?"function"==typeof s.components?s.components(e):s.components||e:a(s.components),t.createElement(c.Provider,{value:n},s.children)}}}]);