"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["493807"],{856800:function(n,t,e){e.r(t),e.d(t,{frontMatter:()=>o,toc:()=>c,default:()=>x,metadata:()=>r,assets:()=>u,contentTitle:()=>p});var r=JSON.parse('{"id":"x design pattern/Behavioral interpreter","title":"interpreter","description":"\uAD6C\uC870","source":"@site/docs/x design pattern/Behavioral interpreter.md","sourceDirName":"x design pattern","slug":"/x design pattern/Behavioral interpreter","permalink":"/docs/x design pattern/Behavioral interpreter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"event bus (Event Channel)","permalink":"/docs/x design pattern/Behavioral event bus"},"next":{"title":"iterator","permalink":"/docs/x design pattern/Behavioral iterator - javascript"}}'),s=e(447259),i=e(255511);let o={},p="interpreter",u={},c=[{value:"\uAD6C\uC870",id:"\uAD6C\uC870",level:2},{value:"usage \uC608",id:"usage-\uC608",level:2}];function a(n){let t={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"interpreter",children:"interpreter"})}),"\n",(0,s.jsx)(t.h2,{id:"\uAD6C\uC870",children:"\uAD6C\uC870"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'// Context \uD074\uB798\uC2A4\r\nclass Context {\r\n  constructor(input) {\r\n    this.input = input;\r\n    this.output = 0;\r\n  }\r\n}\r\n\r\n// AbstractExpression \uD074\uB798\uC2A4\r\nclass AbstractExpression {\r\n  interpret(context) {}\r\n}\r\n\r\n// TerminalExpression \uD074\uB798\uC2A4\r\nclass TerminalExpression extends AbstractExpression {\r\n  interpret(context) {\r\n    context.output = parseInt(context.input, 2); // 2\uC9C4\uC218\uB97C 10\uC9C4\uC218\uB85C \uBCC0\uD658\r\n  }\r\n}\r\n\r\n// NonterminalExpression \uD074\uB798\uC2A4\r\nclass NonterminalExpression extends AbstractExpression {\r\n  constructor(expression1, expression2) {\r\n    super();\r\n    this.expression1 = expression1;\r\n    this.expression2 = expression2;\r\n  }\r\n  interpret(context) {\r\n    this.expression1.interpret(context);\r\n    this.expression2.interpret(context);\r\n    context.output = context.output + 1; // \uB450 \uC218\uC758 \uD569\uC744 \uACC4\uC0B0\r\n  }\r\n}\r\n\r\n// \uAC1D\uCCB4 \uC0DD\uC131\r\nconst input = "10+11";\r\nconst syntaxTree = [];\r\n\r\n// Syntax Tree \uC0DD\uC131\r\nfor (let token of input.split("")) {\r\n  if (token === "0" || token === "1") {\r\n    syntaxTree.push(new TerminalExpression());\r\n  } else if (token === "+") {\r\n    syntaxTree.push(new NonterminalExpression(syntaxTree.pop(), syntaxTree.pop()));\r\n  }\r\n}\r\n\r\n// Interpreter \uD328\uD134 \uC0AC\uC6A9\r\nconst context = new Context(input);\r\nsyntaxTree[0].interpret(context);\r\nconsole.log(`Interpreted \'${input}\' as ${context.output}`); // "Interpreted \'10+11\' as 5"\n'})}),"\n",(0,s.jsx)(t.h2,{id:"usage-\uC608",children:"usage \uC608"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'const Context = function (input) {\r\n  this.input = input;\r\n  this.output = 0;\r\n};\r\n\r\nContext.prototype = {\r\n  startsWith: function (str) {\r\n    return this.input.substr(0, str.length) === str;\r\n  },\r\n};\r\n\r\nconst Expression = function (name, one, four, five, nine, multiplier) {\r\n  this.name = name;\r\n  this.one = one;\r\n  this.four = four;\r\n  this.five = five;\r\n  this.nine = nine;\r\n  this.multiplier = multiplier;\r\n};\r\n\r\nExpression.prototype = {\r\n  interpret: function (context) {\r\n    if (context.input.length == 0) {\r\n      return;\r\n    } else if (context.startsWith(this.nine)) {\r\n      context.output += 9 * this.multiplier;\r\n      context.input = context.input.substr(2);\r\n    } else if (context.startsWith(this.four)) {\r\n      context.output += 4 * this.multiplier;\r\n      context.input = context.input.substr(2);\r\n    } else if (context.startsWith(this.five)) {\r\n      context.output += 5 * this.multiplier;\r\n      context.input = context.input.substr(1);\r\n    }\r\n    while (context.startsWith(this.one)) {\r\n      context.output += 1 * this.multiplier;\r\n      context.input = context.input.substr(1);\r\n    }\r\n  },\r\n};\r\n\r\nfunction run() {\r\n  const roman = "MCMXXVIII";\r\n  const context = new Context(roman);\r\n  const tree = [];\r\n\r\n  tree.push(new Expression("thousand", "M", " ", " ", " ", 1000));\r\n  tree.push(new Expression("hundred", "C", "CD", "D", "CM", 100));\r\n  tree.push(new Expression("ten", "X", "XL", "L", "XC", 10));\r\n  tree.push(new Expression("one", "I", "IV", "V", "IX", 1));\r\n\r\n  for (const i = 0, len = tree.length; i < len; i++) {\r\n    tree[i].interpret(context);\r\n  }\r\n\r\n  console.log(roman + " = " + context.output);\r\n}\n'})})]})}function x(n={}){let{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},255511:function(n,t,e){e.d(t,{R:()=>o,x:()=>p});var r=e(596363);let s={},i=r.createContext(s);function o(n){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function p(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(i.Provider,{value:t},n.children)}}}]);