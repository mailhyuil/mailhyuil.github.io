"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["157995"],{915176:function(n,t,r){r.r(t),r.d(t,{frontMatter:()=>l,toc:()=>c,default:()=>u,metadata:()=>e,assets:()=>s,contentTitle:()=>a});var e=JSON.parse('{"id":"frontend/html input \uC704\uC9C0\uC705 tiptap","title":"tiptap","description":"ts","source":"@site/docs/frontend/html input \uC704\uC9C0\uC705 tiptap.md","sourceDirName":"frontend","slug":"/frontend/html input \uC704\uC9C0\uC705 tiptap","permalink":"/docs/frontend/html input \uC704\uC9C0\uC705 tiptap","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tiptap br","permalink":"/docs/frontend/html input \uC704\uC9C0\uC705 tiptap br"},"next":{"title":"\uC704\uC9C0\uC705 \uC5D0\uB514\uD130","permalink":"/docs/frontend/html input \uC704\uC9C0\uC705 \uC5D0\uB514\uD130"}}'),o=r(447259),i=r(255511);let l={},a="tiptap",s={},c=[{value:"ts",id:"ts",level:2},{value:"html",id:"html",level:2}];function p(n){let t={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"tiptap",children:"tiptap"})}),"\n",(0,o.jsx)(t.h2,{id:"ts",children:"ts"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { Component, Input, OnDestroy, Self } from "@angular/core";\r\nimport { FormsModule, NgControl } from "@angular/forms";\r\nimport { Optional } from "@nestjs/common";\r\nimport { Editor } from "@tiptap/core";\r\nimport StarterKit from "@tiptap/starter-kit";\r\nimport { NgxTiptapModule } from "ngx-tiptap";\r\nimport { IconComponent } from "../icon/icon.component";\r\nimport { CustomValueAccessor } from "../custom-value-accessor";\r\n\r\n@Component({\r\n  selector: "app-editor",\r\n  standalone: true,\r\n  imports: [CommonModule, NgxTiptapModule, FormsModule, IconComponent],\r\n  templateUrl: "./editor.component.html",\r\n  styleUrls: ["./editor.component.scss"],\r\n})\r\nexport class EditorComponent extends CustomValueAccessor<string> implements OnDestroy {\r\n  @Input() label?: string;\r\n  editor = new Editor({\r\n    extensions: [StarterKit],\r\n    editorProps: {\r\n      attributes: {\r\n        class: "h-52 outline-primary rounded border-2 p-2 overflow-y-auto",\r\n      },\r\n    },\r\n  });\r\n\r\n  constructor(@Self() @Optional() public readonly ngControl: NgControl) {\r\n    super();\r\n    if (this.ngControl) ngControl.valueAccessor = this;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.editor.destroy();\r\n  }\r\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"html",children:"html"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<div *ngIf="editor">\r\n  <div class="label-wrapper" *ngIf="label">\r\n    <span class="input-span">{{ label }}</span>\r\n    <p class="input-required" *ngIf="required">*</p>\r\n  </div>\r\n  <div class="flex items-center justify-between py-2 text-xl text-gray-800">\r\n    <div class="flex gap-2">\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 1 }).run()">\r\n        <app-icon name="ri:h-1" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 2 }).run()">\r\n        <app-icon name="ri:h-2" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 3 }).run()">\r\n        <app-icon name="ri:h-3" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 4 }).run()">\r\n        <app-icon name="ri:h-4" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 5 }).run()">\r\n        <app-icon name="ri:h-5" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleHeading({ level: 6 }).run()">\r\n        <app-icon name="ri:h-6" />\r\n      </button>\r\n    </div>\r\n    <div class="flex gap-2">\r\n      <button (click)="editor.chain().focus().toggleBold().run()">\r\n        <app-icon name="ri:bold" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleItalic().run()">\r\n        <app-icon name="ri:italic" />\r\n      </button>\r\n      <button (click)="editor.chain().focus().toggleStrike().run()">\r\n        <app-icon name="ri:strikethrough-2" />\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <tiptap-editor [editor]="editor" [(ngModel)]="value"></tiptap-editor>\r\n</div>\n'})})]})}function u(n={}){let{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},255511:function(n,t,r){r.d(t,{R:()=>l,x:()=>a});var e=r(596363);let o={},i=e.createContext(o);function l(n){let t=e.useContext(i);return e.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:l(n.components),e.createElement(i.Provider,{value:t},n.children)}}}]);