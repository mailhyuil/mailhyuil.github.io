"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["920365"],{557877:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,toc:()=>i,default:()=>c,metadata:()=>r,assets:()=>a,contentTitle:()=>p});var r=JSON.parse('{"id":"angular/angular httpClient HttpRequest reportProgress - upload","title":"httpClient HttpRequest upload progress","description":"HttpRequest \uAC1D\uCCB4\uB97C \uC0AC\uC6A9\uD558\uC5EC upload progress\uB97C \uAD6C\uD604\uD560 \uC218 \uC788\uB2E4.","source":"@site/docs/angular/angular httpClient HttpRequest reportProgress - upload.md","sourceDirName":"angular","slug":"/angular/angular httpClient HttpRequest reportProgress - upload","permalink":"/docs/angular/angular httpClient HttpRequest reportProgress - upload","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"httpClient HttpEventType","permalink":"/docs/angular/angular httpClient HttpEventType"},"next":{"title":"httpClient HttpRequest","permalink":"/docs/angular/angular httpClient HttpRequest"}}'),s=n(447259),o=n(255511);let l={},p="httpClient HttpRequest upload progress",a={},i=[];function u(e){let t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"httpclient-httprequest-upload-progress",children:"httpClient HttpRequest upload progress"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"HttpRequest \uAC1D\uCCB4\uB97C \uC0AC\uC6A9\uD558\uC5EC upload progress\uB97C \uAD6C\uD604\uD560 \uC218 \uC788\uB2E4."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'@Component({\r\n  selector: "app-upload",\r\n  templateUrl: "./upload.component.html",\r\n  styleUrls: ["./upload.component.scss"],\r\n})\r\nexport default class UploadComponent implements OnInit {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  upload(files: FileList) {\r\n    const file = files[0];\r\n    const req = new HttpRequest("POST", "/upload/file", file, {\r\n      reportProgress: true,\r\n    });\r\n\r\n    this.httpClient.request(req).pipe(\r\n      map((event) => this.getEventMessage(event, file)),\r\n      tap((message) => this.showProgress(message)),\r\n      last() // return last (completed) message to caller\r\n    );\r\n  }\r\n\r\n  /** Return distinct message for sent, upload progress, & response events */\r\n  getEventMessage(event: HttpEvent<any>, file: File) {\r\n    switch (event.type) {\r\n      case HttpEventType.Sent:\r\n        return `Uploading file "${file.name}" of size ${file.size}.`;\r\n\r\n      case HttpEventType.UploadProgress:\r\n        // Compute and show the % done:\r\n        const percentDone = event.total ? Math.round((100 * event.loaded) / event.total) : 0;\r\n        return `File "${file.name}" is ${percentDone}% uploaded.`;\r\n\r\n      case HttpEventType.Response:\r\n        return `File "${file.name}" was completely uploaded!`;\r\n\r\n      default:\r\n        return `File "${file.name}" surprising upload event: ${event.type}.`;\r\n    }\r\n  }\r\n\r\n  showProgress(message: string) {\r\n    console.log(message);\r\n  }\r\n}\n'})})]})}function c(e={}){let{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},255511:function(e,t,n){n.d(t,{R:()=>l,x:()=>p});var r=n(596363);let s={},o=r.createContext(s);function l(e){let t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);