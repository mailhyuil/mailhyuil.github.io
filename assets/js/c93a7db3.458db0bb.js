"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[202103],{66588:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"nodejs/nodejs node-archiver - zip file","title":"nodejs node-archiver (zip files)","description":"\ud30c\uc77c\uc758 \ud06c\uae30\uac00 \ud070 \uacbd\uc6b0 highWaterMark \ub97c \uc124\uc815\ud558\uc5ec buffer size \ub97c \ub298\ub824\uc57c \ud55c\ub2e4.","source":"@site/docs/nodejs/nodejs node-archiver - zip file.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs node-archiver - zip file","permalink":"/docs/nodejs/nodejs node-archiver - zip file","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs morgan","permalink":"/docs/nodejs/nodejs morgan"},"next":{"title":"node-schedule, node-cron","permalink":"/docs/nodejs/nodejs node-schedule, node-cron"}}');var t=n(447259),a=n(529087);const o={},s="nodejs node-archiver (zip files)",c={},l=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2},{value:"axios \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30",id:"axios-\uc640-\ud568\uaed8-\uc0ac\uc6a9\ud558\uae30",level:2}];function d(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"nodejs-node-archiver-zip-files",children:"nodejs node-archiver (zip files)"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"\ud30c\uc77c\uc758 \ud06c\uae30\uac00 \ud070 \uacbd\uc6b0 highWaterMark \ub97c \uc124\uc815\ud558\uc5ec buffer size \ub97c \ub298\ub824\uc57c \ud55c\ub2e4."}),"\n",(0,t.jsx)(r.p,{children:"\ubc84\ud37c\uc758 \uc81c\ud55c\uc744 \ub450\ub294 \uc635\uc158"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:'highWaterMark\ub77c\ub294 \uc774\ub984\uc740 \uac1c\ub150\uc801\uc73c\ub85c "\uc218\uc704 \ud45c\uc2dd"(watermark)\uc5d0\uc11c \uc720\ub798\ub41c \uc6a9\uc5b4'}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"npm i archiver\r\nnpm i -D @types/archiver\n"})}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"usage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'// require modules\r\nconst fs = require("fs");\r\nconst archiver = require("archiver");\r\n\r\n// create a file to stream archive data to.\r\nconst output = fs.createWriteStream(__dirname + "/example.zip");\r\nconst archive = archiver("zip", {\r\n  zlib: { level: 9 }, // Sets the compression level.\r\n});\r\n\r\n// listen for all archive data to be written\r\n// \'close\' event is fired only when a file descriptor is involved\r\noutput.on("close", function () {\r\n  console.log(archive.pointer() + " total bytes");\r\n  console.log("archiver has been finalized and the output file descriptor has closed.");\r\n});\r\n\r\n// This event is fired when the data source is drained no matter what was the data source.\r\n// It is not part of this library but rather from the NodeJS Stream API.\r\n// @see: https://nodejs.org/api/stream.html#stream_event_end\r\noutput.on("end", function () {\r\n  console.log("Data has been drained");\r\n});\r\n\r\n// good practice to catch warnings (ie stat failures and other non-blocking errors)\r\narchive.on("warning", function (err) {\r\n  if (err.code === "ENOENT") {\r\n    // log warning\r\n  } else {\r\n    // throw error\r\n    throw err;\r\n  }\r\n});\r\n\r\n// good practice to catch this error explicitly\r\narchive.on("error", function (err) {\r\n  throw err;\r\n});\r\n\r\n// pipe archive data to the file\r\narchive.pipe(output);\r\n\r\n// append a file from stream\r\nconst file1 = __dirname + "/file1.txt";\r\narchive.append(fs.createReadStream(file1), { name: "file1.txt" });\r\n\r\n// append a file from string\r\narchive.append("string cheese!", { name: "file2.txt" });\r\n\r\n// append a file from buffer\r\nconst buffer3 = Buffer.from("buff it!");\r\narchive.append(buffer3, { name: "file3.txt" });\r\n\r\n// append a file\r\narchive.file("file1.txt", { name: "file4.txt" });\r\n\r\n// append files from a sub-directory and naming it `new-subdir` within the archive\r\narchive.directory("subdir/", "new-subdir");\r\n\r\n// append files from a sub-directory, putting its contents at the root of archive\r\narchive.directory("subdir/", false);\r\n\r\n// append files from a glob pattern\r\narchive.glob("file*.txt", { cwd: __dirname });\r\n\r\n// finalize the archive (ie we are done appending files but streams have to finish yet)\r\n// \'close\', \'end\' or \'finish\' may be fired right after calling this method so register to them beforehand\r\narchive.finalize();\n'})}),"\n",(0,t.jsx)(r.h2,{id:"axios-\uc640-\ud568\uaed8-\uc0ac\uc6a9\ud558\uae30",children:"axios \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'const archive = archiver("zip", {\r\n  highWaterMark: 1024 * 1024 * 64, // buffer size \ub298\ub9ac\uae30 // \ud070 \ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ud560 \ub54c \uc0ac\uc6a9\r\n  zlib: { level: 9 }, // Sets the compression level.\r\n});\r\nconst promises = files.map(file => {\r\n  return new Promise<void>((resolve, reject) => {\r\n    this.http\r\n      .get(file.url, {\r\n        responseType: "stream",\r\n      })\r\n      .subscribe(response => {\r\n        if (response.data instanceof internal.Readable) {\r\n          response.data.on("end", resolve);\r\n          archive.append(response.data, { name: file.name }).on("error", reject);\r\n        }\r\n      });\r\n  });\r\n});\r\nconst outputStream = new PassThrough();\r\narchive.pipe(outputStream);\r\nPromise.all(promises).then(() => {\r\n  archive.finalize();\r\n});\r\nreturn outputStream;\n'})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},529087:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var i=n(596363);const t={},a=i.createContext(t);function o(e){const r=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:r},e.children)}}}]);