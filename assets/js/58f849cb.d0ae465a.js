"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["135377"],{860728:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>s,toc:()=>l,default:()=>h,metadata:()=>t,assets:()=>c,contentTitle:()=>i});var t=JSON.parse('{"id":"db-postgres/postgres pgpool2 config","title":"postgres pgpool2 config","description":"","source":"@site/docs/db-postgres/postgres pgpool2 config.md","sourceDirName":"db-postgres","slug":"/db-postgres/postgres pgpool2 config","permalink":"/docs/db-postgres/postgres pgpool2 config","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"postgres partitioning","permalink":"/docs/db-postgres/postgres partitioning"},"next":{"title":"postgres pgpool2 exporter","permalink":"/docs/db-postgres/postgres pgpool2 exporter"}}'),o=r(447259),a=r(255511);let s={},i="postgres pgpool2 config",c={},l=[];function d(e){let n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"postgres-pgpool2-config",children:"postgres pgpool2 config"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-conf",children:"# ----------------------------\r\n# pgPool-II configuration file\r\n# ----------------------------\r\n#\r\n# This file consists of lines of the form:\r\n#\r\n#   name = value\r\n#\r\n# Whitespace may be used.  Comments are introduced with \"#\" anywhere on a line.\r\n# The complete list of parameter names and allowed values can be found in the\r\n# pgPool-II documentation.\r\n#\r\n# This file is read on server startup and when the server receives a SIGHUP\r\n# signal.  If you edit the file on a running system, you have to SIGHUP the\r\n# server for the changes to take effect, or use \"pgpool reload\".  Some\r\n# parameters, which are marked below, require a server shutdown and restart to\r\n# take effect.\r\n#\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# CONNECTIONS\r\n#------------------------------------------------------------------------------\r\n\r\n# - pgpool Connection Settings -\r\n\r\nlisten_addresses = 'localhost'\r\n                                   # Host name or IP address to listen on:\r\n                                   # '*' for all, '' for no TCP/IP connections\r\n                                   # (change requires restart)\r\nport = 9999\r\n                                   # Port number\r\n                                   # (change requires restart)\r\nsocket_dir = '/tmp'\r\n                                   # Unix domain socket path\r\n                                   # The Debian package defaults to\r\n                                   # /var/run/postgresql\r\n                                   # (change requires restart)\r\n\r\n\r\n# - pgpool Communication Manager Connection Settings -\r\n\r\npcp_port = 9898\r\n                                   # Port number for pcp\r\n                                   # (change requires restart)\r\npcp_socket_dir = '/tmp'\r\n                                   # Unix domain socket path for pcp\r\n                                   # The Debian package defaults to\r\n                                   # /var/run/postgresql\r\n                                   # (change requires restart)\r\n\r\n# - Backend Connection Settings -\r\n\r\nbackend_hostname0 = 'host1'\r\n                                   # Host name or IP address to connect to for backend 0\r\nbackend_port0 = 5432\r\n                                   # Port number for backend 0\r\nbackend_weight0 = 1\r\n                                   # Weight for backend 0 (only in load balancing mode)\r\nbackend_data_directory0 = '/data'\r\n                                   # Data directory for backend 0\r\nbackend_flag0 = 'ALLOW_TO_FAILOVER'\r\n                                   # Controls various backend behavior\r\n                                   # ALLOW_TO_FAILOVER or DISALLOW_TO_FAILOVER\r\nbackend_hostname1 = 'host2'\r\nbackend_port1 = 5433\r\nbackend_weight1 = 1\r\nbackend_data_directory1 = '/data1'\r\nbackend_flag1 = 'ALLOW_TO_FAILOVER'\r\n\r\n# - Authentication -\r\n\r\nenable_pool_hba = off\r\n                                   # Use pool_hba.conf for client authentication\r\nauthentication_timeout = 60\r\n                                   # Delay in seconds to complete client authentication\r\n                                   # 0 means no timeout.\r\n\r\n# - SSL Connections -\r\n\r\nssl = off\r\n                                   # Enable SSL support\r\n                                   # (change requires restart)\r\n#ssl_key = './server.key'\r\n                                   # Path to the SSL private key file\r\n                                   # (change requires restart)\r\n#ssl_cert = './server.cert'\r\n                                   # Path to the SSL public certificate file\r\n                                   # (change requires restart)\r\n#ssl_ca_cert = ''\r\n                                   # Path to a single PEM format file\r\n                                   # containing CA root certificate(s)\r\n                                   # (change requires restart)\r\n#ssl_ca_cert_dir = ''\r\n                                   # Directory containing CA root certificate(s)\r\n                                   # (change requires restart)\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# POOLS\r\n#------------------------------------------------------------------------------\r\n\r\n# - Pool size -\r\n\r\nnum_init_children = 32\r\n                                   # Number of pools\r\n                                   # (change requires restart)\r\nmax_pool = 4\r\n                                   # Number of connections per pool\r\n                                   # (change requires restart)\r\n\r\n# - Life time -\r\n\r\nchild_life_time = 300\r\n                                   # Pool exits after being idle for this many seconds\r\nchild_max_connections = 0\r\n                                   # Pool exits after receiving that many connections\r\n                                   # 0 means no exit\r\nconnection_life_time = 0\r\n                                   # Connection to backend closes after being idle for this many seconds\r\n                                   # 0 means no close\r\nclient_idle_limit = 0\r\n                                   # Client is disconnected after being idle for that many seconds\r\n                                   # (even inside an explicit transactions!)\r\n                                   # 0 means no disconnection\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# LOGS\r\n#------------------------------------------------------------------------------\r\n\r\n# - Where to log -\r\n\r\nlog_destination = 'stderr'\r\n                                   # Where to log\r\n                                   # Valid values are combinations of stderr,\r\n                                   # and syslog. Default to stderr.\r\n\r\n# - What to log -\r\n\r\nprint_timestamp = on\r\n                                   # Print timestamp on each line\r\n                                   # (change requires restart)\r\n\r\nlog_connections = off\r\n                                   # Log connections\r\nlog_hostname = off\r\n                                   # Hostname will be shown in ps status\r\n                                   # and in logs if connections are logged\r\nlog_statement = off\r\n                                   # Log all statements\r\nlog_per_node_statement = off\r\n                                   # Log all statements\r\n                                   # with node and backend informations\r\nlog_standby_delay = 'if_over_threshold'\r\n                                   # Log standby delay\r\n                                   # Valid values are combinations of always,\r\n                                   # if_over_threshold, none\r\n\r\n# - Syslog specific -\r\n\r\nsyslog_facility = 'LOCAL0'\r\n                                   # Syslog local facility. Default to LOCAL0\r\nsyslog_ident = 'pgpool'\r\n                                   # Syslog program identification string\r\n                                   # Default to 'pgpool'\r\n\r\n# - Debug -\r\n\r\ndebug_level = 0\r\n                                   # Debug message verbosity level\r\n                                   # 0 means no message, 1 or more mean verbose\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# FILE LOCATIONS\r\n#------------------------------------------------------------------------------\r\n\r\npid_file_name = '/var/run/pgpool/pgpool.pid'\r\n                                   # PID file name\r\n                                   # (change requires restart)\r\nlogdir = '/tmp'\r\n                                   # Directory of pgPool status file\r\n                                   # (change requires restart)\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# CONNECTION POOLING\r\n#------------------------------------------------------------------------------\r\n\r\nconnection_cache = on\r\n                                   # Activate connection pools\r\n                                   # (change requires restart)\r\n\r\n                                   # Semicolon separated list of queries\r\n                                   # to be issued at the end of a session\r\n                                   # The default is for 8.3 and later\r\nreset_query_list = 'ABORT; DISCARD ALL'\r\n                                   # The following one is for 8.2 and before\r\n#reset_query_list = 'ABORT; RESET ALL; SET SESSION AUTHORIZATION DEFAULT'\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# REPLICATION MODE\r\n#------------------------------------------------------------------------------\r\n\r\nreplication_mode = off\r\n                                   # Activate replication mode\r\n                                   # (change requires restart)\r\nreplicate_select = off\r\n                                   # Replicate SELECT statements\r\n                                   # when in replication or parallel mode\r\n                                   # replicate_select is higher priority than\r\n                                   # load_balance_mode.\r\n\r\ninsert_lock = off\r\n                                   # Automatically locks a dummy row or a table\r\n                                   # with INSERT statements to keep SERIAL data\r\n                                   # consistency\r\n                                   # Without SERIAL, no lock will be issued\r\nlobj_lock_table = ''\r\n                                   # When rewriting lo_creat command in\r\n                                   # replication mode, specify table name to\r\n                                   # lock\r\n\r\n# - Degenerate handling -\r\n\r\nreplication_stop_on_mismatch = off\r\n                                   # On disagreement with the packet kind\r\n                                   # sent from backend, degenerate the node\r\n                                   # which is most likely \"minority\"\r\n                                   # If off, just force to exit this session\r\n\r\nfailover_if_affected_tuples_mismatch = off\r\n                                   # On disagreement with the number of affected\r\n                                   # tuples in UPDATE/DELETE queries, then\r\n                                   # degenerate the node which is most likely\r\n                                   # \"minority\".\r\n                                   # If off, just abort the transaction to\r\n                                   # keep the consistency\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# LOAD BALANCING MODE\r\n#------------------------------------------------------------------------------\r\n\r\nload_balance_mode = on\r\n                                   # Activate load balancing mode\r\n                                   # (change requires restart)\r\nignore_leading_white_space = on\r\n                                   # Ignore leading white spaces of each query\r\nwhite_function_list = ''\r\n                                   # Comma separated list of function names\r\n                                   # that don't write to database\r\n                                   # Regexp are accepted\r\nblack_function_list = 'currval,lastval,nextval,setval'\r\n                                   # Comma separated list of function names\r\n                                   # that write to database\r\n                                   # Regexp are accepted\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# MASTER/SLAVE MODE\r\n#------------------------------------------------------------------------------\r\n\r\nmaster_slave_mode = on\r\n                                   # Activate master/slave mode\r\n                                   # (change requires restart)\r\nmaster_slave_sub_mode = 'stream'\r\n                                   # Master/slave sub mode\r\n                                   # Valid values are combinations slony or\r\n                                   # stream. Default is slony.\r\n                                   # (change requires restart)\r\n\r\n# - Streaming -\r\n\r\nsr_check_period = 10\r\n                                   # Streaming replication check period\r\n                                   # Disabled (0) by default\r\nsr_check_user = 'nobody'\r\n                                   # Streaming replication check user\r\n                                   # This is neccessary even if you disable streaming\r\n                                   # replication delay check by sr_check_period = 0\r\nsr_check_password = ''\r\n                                   # Password for streaming replication check user\r\ndelay_threshold = 10000000\r\n                                   # Threshold before not dispatching query to standby node\r\n                                   # Unit is in bytes\r\n                                   # Disabled (0) by default\r\n\r\n# - Special commands -\r\n\r\nfollow_master_command = ''\r\n                                   # Executes this command after master failover\r\n                                   # Special values:\r\n                                   #   %d = node id\r\n                                   #   %h = host name\r\n                                   #   %p = port number\r\n                                   #   %D = database cluster path\r\n                                   #   %m = new master node id\r\n                                   #   %H = hostname of the new master node\r\n                                   #   %M = old master node id\r\n                                   #   %P = old primary node id\r\n                                   #   %% = '%' character\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# PARALLEL MODE AND QUERY CACHE\r\n#------------------------------------------------------------------------------\r\n\r\nparallel_mode = off\r\n                                   # Activates parallel query mode\r\n                                   # (change requires restart)\r\nenable_query_cache = off\r\n                                   # Activates query cache\r\n                                   # (change requires restart)\r\n\r\npgpool2_hostname = ''\r\n                                   # Set pgpool2 hostname\r\n                                   # (change requires restart)\r\n\r\n# - System DB info -\r\n\r\nsystem_db_hostname  = 'localhost'\r\n                                   # (change requires restart)\r\nsystem_db_port = 5432\r\n                                   # (change requires restart)\r\nsystem_db_dbname = 'pgpool'\r\n                                   # (change requires restart)\r\nsystem_db_schema = 'pgpool_catalog'\r\n                                   # (change requires restart)\r\nsystem_db_user = 'pgpool'\r\n                                   # (change requires restart)\r\nsystem_db_password = ''\r\n                                   # (change requires restart)\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# HEALTH CHECK\r\n#------------------------------------------------------------------------------\r\n\r\nhealth_check_period = 0\r\n                                   # Health check period\r\n                                   # Disabled (0) by default\r\nhealth_check_timeout = 20\r\n                                   # Health check timeout\r\n                                   # 0 means no timeout\r\nhealth_check_user = 'nobody'\r\n                                   # Health check user\r\nhealth_check_password = ''\r\n                                   # This parameter is not yet implemented.\r\n                                   # Password for health check user\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# FAILOVER AND FAILBACK\r\n#------------------------------------------------------------------------------\r\n\r\nfailover_command = ''\r\n                                   # Executes this command at failover\r\n                                   # Special values:\r\n                                   #   %d = node id\r\n                                   #   %h = host name\r\n                                   #   %p = port number\r\n                                   #   %D = database cluster path\r\n                                   #   %m = new master node id\r\n                                   #   %H = hostname of the new master node\r\n                                   #   %M = old master node id\r\n                                   #   %P = old primary node id\r\n                                   #   %% = '%' character\r\nfailback_command = ''\r\n                                   # Executes this command at failback.\r\n                                   # Special values:\r\n                                   #   %d = node id\r\n                                   #   %h = host name\r\n                                   #   %p = port number\r\n                                   #   %D = database cluster path\r\n                                   #   %m = new master node id\r\n                                   #   %H = hostname of the new master node\r\n                                   #   %M = old master node id\r\n                                   #   %P = old primary node id\r\n                                   #   %% = '%' character\r\n\r\nfail_over_on_backend_error = on\r\n                                   # Initiates failover when writing to the\r\n                                   # backend communication socket fails\r\n                                   # This is the same behaviour of pgpool-II\r\n                                   # 2.2.x and previous releases\r\n                                   # If set to off, pgpool will report an\r\n                                   # error and disconnect the session.\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# ONLINE RECOVERY\r\n#------------------------------------------------------------------------------\r\n\r\nrecovery_user = 'nobody'\r\n                                   # Online recovery user\r\nrecovery_password = ''\r\n                                   # Online recovery password\r\nrecovery_1st_stage_command = ''\r\n                                   # Executes a command in first stage\r\nrecovery_2nd_stage_command = ''\r\n                                   # Executes a command in second stage\r\nrecovery_timeout = 90\r\n                                   # Timeout in seconds to wait for the\r\n                                   # recovering node's postmaster to start up\r\n                                   # 0 means no wait\r\nclient_idle_limit_in_recovery = 0\r\n                                   # Client is disconnected after being idle\r\n                                   # for that many seconds in the second stage\r\n                                   # of online recovery\r\n                                   # 0 means no disconnection\r\n                                   # -1 means immediate disconnection\r\n\r\n\r\n#------------------------------------------------------------------------------\r\n# OTHERS\r\n#------------------------------------------------------------------------------\r\n\r\nrelcache_expire = 0\r\n                                   # Life time of relation cache in seconds.\r\n                                   # 0 means no cache expiration(the default).\r\n                                   # The relation cache is used for cache the\r\n                                   # query result against PostgreSQL system\r\n                                   # catalog to obtain various information\r\n                                   # including table structures or if it's a\r\n                                   # temporary table or not. The cache is\r\n                                   # maintained in a pgpool child local memory\r\n                                   # and being kept as long as it survives.\r\n                                   # If someone modify the table by using\r\n                                   # ALTER TABLE or some such, the relcache is\r\n                                   # not consistent anymore.\r\n                                   # For this purpose, cache_expiration\r\n                                   # controls the life time of the cache.\n"})})]})}function h(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},255511:function(e,n,r){r.d(n,{R:()=>s,x:()=>i});var t=r(596363);let o={},a=t.createContext(o);function s(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);