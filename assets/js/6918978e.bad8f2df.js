"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[739002],{529087:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>o});var t=n(596363);const s={},a=t.createContext(s);function c(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:r},e.children)}},935520:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"x data structure/data tree","title":"Tree","description":"\ub8e8\ud2b8\ub178\ub4dc : \ubd80\ubaa8\uac00 \uc5c6\ub294 \ucd5c\uc0c1\uc704 \ub178\ub4dc","source":"@site/docs/x data structure/data tree.md","sourceDirName":"x data structure","slug":"/x data structure/data tree","permalink":"/docs/x data structure/data tree","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Red-Black Tree","permalink":"/docs/x data structure/data tree red-black tree"},"next":{"title":"data weak reference","permalink":"/docs/x data structure/data weak reference"}}');var s=n(447259),a=n(529087);const c={},o="Tree",d={},i=[];function l(e){const r={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"tree",children:"Tree"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\ub8e8\ud2b8\ub178\ub4dc : \ubd80\ubaa8\uac00 \uc5c6\ub294 \ucd5c\uc0c1\uc704 \ub178\ub4dc"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\ub9ac\ud504\ub178\ub4dc : \uc790\uc2dd\uc774 \uc5c6\ub294 \ucd5c\ud558\uc704 \ub178\ub4dc"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\uae4a\uc774 : \ub8e8\ud2b8 \ub178\ub4dc\uc5d0\uc11c\uc758 \ub2e8\uacc4 -> \uac80\uc0c9\ud560 \ub54c \uc911\uc694"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'class Tree {\r\n  constructor(value) {\r\n    this.value = value; // node\uac00 \uac00\uc9c0\uace0 \uc788\ub294 \uac12\r\n    this.children = []; // node\uc758 \uc790\uc2dd\ub4e4\r\n  }\r\n\r\n  insertNode(value) {\r\n    const childNode = new Tree(value);\r\n    this.children.push(childNode);\r\n  }\r\n\r\n  contains(value) {\r\n    if (this.value === value) {\r\n      // node \uc790\uc2e0\uc758 \uac12\uc774\ub77c\uba74 true\r\n      return true;\r\n    }\r\n    // \uc544\ub2c8\uba74 children\uc5d0\uc11c \ud0d0\uc0c9\r\n    for (let i = 0; i < this.children.length; i++) {\r\n      const childNode = this.children[i];\r\n      if (childNode.contains(value)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // \uc804\ubd80 \ud0d0\uc0c9\ud588\uc74c\uc5d0\ub3c4 \ucc3e\uc9c0 \ubabb\ud588\ub2e4\uba74 false\r\n    return false;\r\n  }\r\n}\r\n\r\nconst tree = new Tree("a");\r\ntree.insertNode("b");\r\ntree.insertNode("c");\r\nconsole.log(tree.contains("a"));\n'})})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);