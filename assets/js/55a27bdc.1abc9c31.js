"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[478488],{529087:(n,r,a)=>{a.d(r,{R:()=>T,x:()=>E});var e=a(596363);const _={},A=e.createContext(_);function T(n){const r=e.useContext(A);return e.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function E(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(_):n.components||_:T(n.components),e.createElement(A.Provider,{value:r},n.children)}},961829:(n,r,a)=>{a.r(r),a.d(r,{assets:()=>k,contentTitle:()=>E,default:()=>s,frontMatter:()=>T,metadata:()=>e,toc:()=>t});const e=JSON.parse('{"id":"kafka/kafka base KRaft","title":"kafka base KRaft","description":"kafka 2.x\ub294 zookeeper \uc5c6\uc774 \ub3d9\uc791\ud560 \uc218 \uc5c6\ub2e4.","source":"@site/docs/kafka/kafka base KRaft.md","sourceDirName":"kafka","slug":"/kafka/kafka base KRaft","permalink":"/docs/kafka/kafka base KRaft","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kafka base KRaft Quorum (\ucffc\ub7fc / \ub3d9\uc758)","permalink":"/docs/kafka/kafka base KRaft Quorum"},"next":{"title":"kafka base MQTT","permalink":"/docs/kafka/kafka base MQTT"}}');var _=a(447259),A=a(529087);const T={},E="kafka base KRaft",k={},t=[{value:"docker-compose.yaml",id:"docker-composeyaml",level:2}];function R(n){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,A.R)(),...n.components};return(0,_.jsxs)(_.Fragment,{children:[(0,_.jsx)(r.header,{children:(0,_.jsx)(r.h1,{id:"kafka-base-kraft",children:"kafka base KRaft"})}),"\n",(0,_.jsxs)(r.blockquote,{children:["\n",(0,_.jsx)(r.p,{children:"kafka 2.x\ub294 zookeeper \uc5c6\uc774 \ub3d9\uc791\ud560 \uc218 \uc5c6\ub2e4."}),"\n",(0,_.jsx)(r.p,{children:"kafka 3.x\ubd80\ud130\ub294 zookeeper \uc5c6\uc774 \ub3d9\uc791\ud560 \uc218 \uc788\ub2e4."}),"\n",(0,_.jsx)(r.p,{children:"kafka 4.x\ubd80\ud130\ub294 zookeeper\uac00 \uc644\uc804\ud788 \uc81c\uac70\ub418\uc5c8\ub2e4. (KRaft Only)"}),"\n",(0,_.jsxs)(r.blockquote,{children:["\n",(0,_.jsx)(r.p,{children:"zookeeper\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 kafka \uc790\uccb4\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud558\ub294 KRaft"}),"\n"]}),"\n"]}),"\n",(0,_.jsx)(r.h2,{id:"docker-composeyaml",children:"docker-compose.yaml"}),"\n",(0,_.jsxs)(r.blockquote,{children:["\n",(0,_.jsx)(r.p,{children:"window \ud658\uacbd\uc5d0\uc11c memory \ubd80\uc871\uc73c\ub85c \uba48\ucdb0\ubc84\ub9ac\ub294 \uc774\uc288\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}),"\n",(0,_.jsx)(r.p,{children:".wslconfig\uc5d0\uc11c memory\ub97c \ub298\ub824\uc11c \ud574\uacb0"}),"\n"]}),"\n",(0,_.jsx)(r.pre,{children:(0,_.jsx)(r.code,{className:"language-yaml",children:'networks:\r\n  kafka_network:\r\n\r\nvolumes:\r\n  Kafka00:\r\n  Kafka01:\r\n  Kafka02:\r\n\r\nservices:\r\n  ### Kafka00\r\n  kafka00:\r\n    image: bitnami/kafka:latest\r\n    restart: unless-stopped\r\n    container_name: kafka00\r\n    ports:\r\n      - "10000:9094"\r\n    environment:\r\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\r\n      # KRaft settings\r\n      - KAFKA_CFG_BROKER_ID=0\r\n      - KAFKA_CFG_NODE_ID=0\r\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\r\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka00:9093,1@kafka01:9093,2@kafka02:9093\r\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\r\n      # Listeners\r\n      - ALLOW_PLAINTEXT_LISTENER=yes\r\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\r\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka00:9092,EXTERNAL://127.0.0.1:10000\r\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\r\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\r\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\r\n      # Clustering\r\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\r\n    networks:\r\n      - kafka_network\r\n    volumes:\r\n      - "Kafka00:/bitnami/kafka"\r\n  ### Kafka01\r\n  kafka01:\r\n    image: bitnami/kafka:latest\r\n    restart: unless-stopped\r\n    container_name: kafka01\r\n    ports:\r\n      - "10001:9094"\r\n    environment:\r\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\r\n      # KRaft settings\r\n      - KAFKA_CFG_BROKER_ID=1\r\n      - KAFKA_CFG_NODE_ID=1\r\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\r\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka00:9093,1@kafka01:9093,2@kafka02:9093\r\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\r\n      # Listeners\r\n      - ALLOW_PLAINTEXT_LISTENER=yes\r\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\r\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka01:9092,EXTERNAL://127.0.0.1:10001\r\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\r\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\r\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\r\n      # Clustering\r\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\r\n    networks:\r\n      - kafka_network\r\n    volumes:\r\n      - "Kafka01:/bitnami/kafka"\r\n  ## Kafka02\r\n  kafka02:\r\n    image: bitnami/kafka:latest\r\n    restart: unless-stopped\r\n    container_name: kafka02\r\n    ports:\r\n      - "10002:9094"\r\n    environment:\r\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\r\n      # KRaft settings\r\n      - KAFKA_CFG_BROKER_ID=2\r\n      - KAFKA_CFG_NODE_ID=2\r\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\r\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka00:9093,1@kafka01:9093,2@kafka02:9093\r\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\r\n      # Listeners\r\n      - ALLOW_PLAINTEXT_LISTENER=yes\r\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\r\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka02:9092,EXTERNAL://127.0.0.1:10002\r\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\r\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\r\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\r\n      # Clustering\r\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\r\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\r\n    networks:\r\n      - kafka_network\r\n    volumes:\r\n      - "Kafka02:/bitnami/kafka"\r\n\r\n  kafka-ui:\r\n    image: provectuslabs/kafka-ui:latest\r\n    restart: unless-stopped\r\n    container_name: kafka-ui\r\n    ports:\r\n      - "8080:8080"\r\n    environment:\r\n      - KAFKA_CLUSTERS_0_NAME=Local-Kraft-Cluster\r\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka00:9092,kafka01:9092,kafka02:9092\r\n      - DYNAMIC_CONFIG_ENABLED=true\r\n      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true\r\n      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true\r\n      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999\r\n    depends_on:\r\n      - kafka00\r\n      - kafka01\r\n      - kafka02\r\n    networks:\r\n      - kafka_network\n'})})]})}function s(n={}){const{wrapper:r}={...(0,A.R)(),...n.components};return r?(0,_.jsx)(r,{...n,children:(0,_.jsx)(R,{...n})}):R(n)}}}]);