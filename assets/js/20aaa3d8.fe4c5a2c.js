"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[685271],{529087:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(596363);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}},676858:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"nestjs/nest base pipe GlobalValidationPipe","title":"nest GlobalValidationPipe","description":"global-validation.pipe.ts","source":"@site/docs/nestjs/nest base pipe GlobalValidationPipe.md","sourceDirName":"nestjs","slug":"/nestjs/nest base pipe GlobalValidationPipe","permalink":"/docs/nestjs/nest base pipe GlobalValidationPipe","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"module","permalink":"/docs/nestjs/nest base module"},"next":{"title":"nest pipe custom","permalink":"/docs/nestjs/nest base pipe custom"}}');var s=n(447259),o=n(529087);const i={},a="nest GlobalValidationPipe",l={},p=[{value:"global-validation.pipe.ts",id:"global-validationpipets",level:2},{value:"validation.exception.ts",id:"validationexceptionts",level:2},{value:"validation-exception.filter.ts",id:"validation-exceptionfilterts",level:2},{value:"app.module.ts",id:"appmodulets",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"nest-globalvalidationpipe",children:"nest GlobalValidationPipe"})}),"\n",(0,s.jsx)(r.h2,{id:"global-validationpipets",children:"global-validation.pipe.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { ValidationException } from "@/server/pipes/global-validation.pipe";\r\nimport { ArgumentsHost, Catch, ExceptionFilter, Logger } from "@nestjs/common";\r\nimport { Request, Response } from "express";\r\nimport { ERROR } from "../error";\r\n\r\n@Catch(ValidationException)\r\nexport class ValidationExceptionFilter implements ExceptionFilter {\r\n  private readonly logger = new Logger(ValidationExceptionFilter.name);\r\n  catch(error: ValidationException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const res = ctx.getResponse<Response>();\r\n    const req = ctx.getRequest<Request>();\r\n    const statusCode = error.getStatus();\r\n    const response = error.getResponse() as ERROR;\r\n    const message = error.message;\r\n    const cause = error.cause;\r\n    const stack = error.stack;\r\n\r\n    const errorResponse = {\r\n      statusCode,\r\n      message,\r\n      path: req.url,\r\n      timestamp: new Date().toISOString(),\r\n      error: response,\r\n    };\r\n\r\n    res.status(statusCode).json(errorResponse);\r\n\r\n    this.logger.error(\r\n      `\r\n  MESSAGE: ${errorResponse.message}\r\n  TIMESTAMP: ${errorResponse.timestamp}\r\n  METHOD: ${req.method}\r\n  PATH: ${errorResponse.path}\r\n  ERROR: ${JSON.stringify(errorResponse.error)}\r\n  STACK: ${stack}\r\n  CAUSE: ${cause}\r\n  `,\r\n    );\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"validationexceptionts",children:"validation.exception.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { ValidationPipe } from "@nestjs/common";\r\n\r\nexport class ValidationException extends HttpException {\r\n  constructor(message: any) {\r\n    super(message, HttpStatus.BAD_REQUEST);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"validation-exceptionfilterts",children:"validation-exception.filter.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { ValidationException } from "@/server/pipes/global-validation.pipe";\r\nimport { ArgumentsHost, Catch, ExceptionFilter, Logger } from "@nestjs/common";\r\nimport { Request, Response } from "express";\r\nimport { ERROR } from "../error";\r\n\r\n@Catch(ValidationException)\r\nexport class ValidationExceptionFilter implements ExceptionFilter {\r\n  private readonly logger = new Logger(ValidationExceptionFilter.name);\r\n  catch(error: ValidationException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const res = ctx.getResponse<Response>();\r\n    const req = ctx.getRequest<Request>();\r\n    const statusCode = error.getStatus();\r\n    const response = error.getResponse() as string | ERROR;\r\n    const message = error.message;\r\n    const cause = error.cause;\r\n    const stack = error.stack;\r\n\r\n    const errorResponse = {\r\n      statusCode,\r\n      message,\r\n      path: req.url,\r\n      timestamp: new Date().toISOString(),\r\n      error: {\r\n        code: 400,\r\n        message: response,\r\n      } as ERROR,\r\n    };\r\n\r\n    res.status(statusCode).json(errorResponse);\r\n\r\n    this.logger.error(\r\n      `\r\n  MESSAGE: ${errorResponse.message}\r\n  TIMESTAMP: ${errorResponse.timestamp}\r\n  PATH: ${errorResponse.path}\r\n  ERROR: ${JSON.stringify(errorResponse.error)}\r\n  STACK: ${stack}\r\n  CAUSE: ${cause}\r\n  `,\r\n    );\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"appmodulets",children:"app.module.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"{\r\n  provide: APP_FILTER,\r\n  useClass: ValidationExceptionFilter,\r\n},\n"})})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);