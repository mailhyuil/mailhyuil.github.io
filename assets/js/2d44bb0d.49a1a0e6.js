"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["282614"],{639953:function(n,t,r){r.r(t),r.d(t,{frontMatter:()=>c,toc:()=>l,default:()=>d,metadata:()=>e,assets:()=>i,contentTitle:()=>s});var e=JSON.parse('{"id":"x design pattern/Creational factory method example GUI","title":"abstract factory method","description":"\uC11C\uBE0C\uD074\uB798\uC2A4\uC5D0\uC11C \uAC1D\uCCB4 \uC0DD\uC131 \uBA54\uC18C\uB4DC\uB97C \uC624\uBC84\uB77C\uC774\uB4DC\uD558\uC5EC \uAC1D\uCCB4\uB97C \uC0DD\uC131\uD558\uB294 \uD328\uD134","source":"@site/docs/x design pattern/Creational factory method example GUI.md","sourceDirName":"x design pattern","slug":"/x design pattern/Creational factory method example GUI","permalink":"/docs/x design pattern/Creational factory method example GUI","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Builder Pattern","permalink":"/docs/x design pattern/Creational builder"},"next":{"title":"design pattern Factory Method Pattern","permalink":"/docs/x design pattern/Creational factory method"}}'),o=r(447259),a=r(255511);let c={},s="abstract factory method",i={},l=[{value:"usage 1",id:"usage-1",level:2},{value:"result",id:"result",level:2}];function u(n){let t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"abstract-factory-method",children:"abstract factory method"})}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"\uC11C\uBE0C\uD074\uB798\uC2A4\uC5D0\uC11C \uAC1D\uCCB4 \uC0DD\uC131 \uBA54\uC18C\uB4DC\uB97C \uC624\uBC84\uB77C\uC774\uB4DC\uD558\uC5EC \uAC1D\uCCB4\uB97C \uC0DD\uC131\uD558\uB294 \uD328\uD134"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"usage-1",children:"usage 1"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:'interface GUIFactory {\r\n  createButton(): Button;\r\n  createCheckbox(): Checkbox;\r\n}\r\n\r\nclass WinFactory implements GUIFactory {\r\n  createButton(): Button {\r\n    return new WinButton();\r\n  }\r\n  createCheckbox(): Checkbox {\r\n    return new WinCheckbox();\r\n  }\r\n}\r\n\r\nclass MacFactory implements GUIFactory {\r\n  createButton(): Button {\r\n    return new MacButton();\r\n  }\r\n  createCheckbox(): Checkbox {\r\n    return new MacCheckbox();\r\n  }\r\n}\r\n\r\ninterface Button {\r\n  paint();\r\n}\r\n\r\nclass WinButton implements Button {\r\n  // \uBC84\uD2BC\uC744 \uC708\uB3C4\uC6B0 \uC2A4\uD0C0\uC77C\uB85C \uB80C\uB354\uB9C1\uD558\uC138\uC694.\r\n  paint() {}\r\n}\r\n\r\nclass MacButton implements Button {\r\n  // \uBC84\uD2BC\uC744 \uB9E5 \uC2A4\uD0C0\uC77C\uB85C \uB80C\uB354\uB9C1\uD558\uC138\uC694.\r\n  paint() {}\r\n}\r\n\r\ninterface Checkbox {\r\n  paint();\r\n}\r\n\r\nclass WinCheckbox implements Checkbox {\r\n  // \uC708\uB3C4\uC6B0 \uC2A4\uD0C0\uC77C\uC758 \uD655\uC778\uB780\uC744 \uB80C\uB354\uB9C1\uD558\uC138\uC694.\r\n  paint() {}\r\n}\r\n\r\nclass MacCheckbox implements Checkbox {\r\n  // \uB9E5 \uC2A4\uD0C0\uC77C\uC758 \uD655\uC778\uB780\uC744 \uB80C\uB354\uB9C1\uD558\uC138\uC694.\r\n  paint() {}\r\n}\r\n\r\nclass Application {\r\n  private factory: GUIFactory;\r\n  private button: Button;\r\n  constructor(factory: GUIFactory) {\r\n    this.factory = factory;\r\n  }\r\n\r\n  createUI() {\r\n    this.button = this.factory.createButton();\r\n  }\r\n\r\n  paint() {\r\n    this.button.paint();\r\n  }\r\n}\r\n\r\n/* main */\r\n\r\nconst config = { OS: "Mac" };\r\n\r\nlet factory;\r\n\r\nif (config.OS == "Windows") {\r\n  factory = new WinFactory();\r\n} else if (config.OS == "Mac") {\r\n  factory = new MacFactory();\r\n} else {\r\n  console.error("Error! Unknown operating system.");\r\n}\r\n\r\nconst app: Application = new Application(factory);\n'})}),"\n",(0,o.jsx)(t.h2,{id:"result",children:"result"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:'// Without Factory\r\nclass IOSButton {}\r\nclass AndroidButton {}\r\nconst button1 = os === "ios" ? new IOSButton() : new AndroidButton();\r\nconst button2 = os === "ios" ? new IOSButton() : new AndroidButton();\r\nclass ButtonFactory {\r\n  createButton(os: string): IOSButton | AndroidButton {\r\n    if (os === "ios") {\r\n      return new IOSButton();\r\n    } else {\r\n      return new AndroidButton();\r\n    }\r\n  }\r\n}\r\n\r\n// With Factory\r\nconst factory = new ButtonFactory();\r\nconst btn1 = factory.createButton(os);\r\nconst btn2 = factory.createButton(os);\n'})})]})}function d(n={}){let{wrapper:t}={...(0,a.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},255511:function(n,t,r){r.d(t,{R:()=>c,x:()=>s});var e=r(596363);let o={},a=e.createContext(o);function c(n){let t=e.useContext(a);return e.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),e.createElement(a.Provider,{value:t},n.children)}}}]);