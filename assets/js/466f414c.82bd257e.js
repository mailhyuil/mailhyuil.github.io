"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[684255],{529087:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(596363);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},653505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"rxjs/rxjs join with combineLatestWith","title":"rxjs operator combineLatestWith","description":"combineLatest\uc640 \ub3d9\uc791\uc740 \uac19\uc9c0\ub9cc pipe\uc548\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","source":"@site/docs/rxjs/rxjs join with combineLatestWith.md","sourceDirName":"rxjs","slug":"/rxjs/rxjs join with combineLatestWith","permalink":"/docs/rxjs/rxjs join with combineLatestWith","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rxjs switchAll","permalink":"/docs/rxjs/rxjs join switchAll"},"next":{"title":"rxjs operator concatWith","permalink":"/docs/rxjs/rxjs join with concatWith"}}');var o=n(447259),s=n(529087);const i={},c="rxjs operator combineLatestWith",a={},p=[];function u(e){const t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"rxjs-operator-combinelatestwith",children:"rxjs operator combineLatestWith"})}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"combineLatest\uc640 \ub3d9\uc791\uc740 \uac19\uc9c0\ub9cc pipe\uc548\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import { fromEvent, combineLatestWith, map } from 'rxjs';\r\n\r\n// Setup: Add two inputs to the page\r\nconst input1 = document.createElement('input');\r\ndocument.body.appendChild(input1);\r\nconst input2 = document.createElement('input');\r\ndocument.body.appendChild(input2);\r\n\r\n// Get streams of changes\r\nconst input1Changes$ = fromEvent(input1, 'change');\r\nconst input2Changes$ = fromEvent(input2, 'change');\r\n\r\n// Combine the changes by adding them together\r\ninput1Changes$.pipe(\r\n  combineLatestWith(input2Changes$),\r\n  map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\r\n)\r\n.subscribe(x => console.log(x));\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);