"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[342532],{529087:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(596363);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},803654:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"x design pattern/Behavioral Chain of Responsibility - CoR example ResyncStrategy","title":"chain of responsibility (\ucc45\uc784 \uc5f0\uc1c4 \ud328\ud134)","description":"core","source":"@site/docs/x design pattern/Behavioral Chain of Responsibility - CoR example ResyncStrategy.md","sourceDirName":"x design pattern","slug":"/x design pattern/Behavioral Chain of Responsibility - CoR example ResyncStrategy","permalink":"/docs/x design pattern/Behavioral Chain of Responsibility - CoR example ResyncStrategy","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Design Patterns","permalink":"/docs/category/design-patterns"},"next":{"title":"design pattern CoR example Express","permalink":"/docs/x design pattern/Behavioral Chain of Responsibility - CoR example express"}}');var s=r(447259),a=r(529087);const i={},l="chain of responsibility (\ucc45\uc784 \uc5f0\uc1c4 \ud328\ud134)",d={},o=[{value:"core",id:"core",level:2},{value:"usage",id:"usage",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"chain-of-responsibility-\ucc45\uc784-\uc5f0\uc1c4-\ud328\ud134",children:"chain of responsibility (\ucc45\uc784 \uc5f0\uc1c4 \ud328\ud134)"})}),"\n",(0,s.jsx)(n.h2,{id:"core",children:"core"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface Handler<Request = string | undefined, Result = string | undefined> {\r\n  setNext(handler: Handler<Request, Result>): Handler<Request, Result>;\r\n  handle(request: Request): Result;\r\n}\r\n\r\nabstract class AbstractHandler implements Handler {\r\n  private nextHandler: Handler;\r\n\r\n  public setNext(handler: Handler): Handler {\r\n    this.nextHandler = handler;\r\n    return handler;\r\n  }\r\n\r\n  public handle(request: string) {\r\n    if (this.nextHandler) {\r\n      return this.nextHandler.handle(request);\r\n    }\r\n    return;\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'interface Handler<Request = string, Result = any> {\r\n  setNext(handler: Handler<Request, Result>): Handler<Request, Result>;\r\n  handle(request: Request): Result;\r\n}\r\n\r\nabstract class AbstractHandler implements Handler {\r\n  protected nextHandler?: Handler;\r\n\r\n  public setNext(handler: Handler): Handler {\r\n    this.nextHandler = handler;\r\n    return handler;\r\n  }\r\n\r\n  public handle(request: string) {\r\n    if (this.nextHandler) {\r\n      return this.nextHandler.handle(request);\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nclass ResyncWhenUserMissing extends AbstractHandler {\r\n  public handle(request: string) {\r\n    console.log("Resyncing...");\r\n    db.push({ name: "\ud734\uc77c" });\r\n    return super.handle(request);\r\n  }\r\n}\r\n\r\nconst db: any[] = [];\r\n\r\nclass UserRepository extends AbstractHandler {\r\n  findByName(name: string): any {\r\n    const found = db.find((user) => user.name === name);\r\n    if (!found && this.nextHandler instanceof ResyncWhenUserMissing) {\r\n      this.nextHandler.handle("resync");\r\n      this.nextHandler = undefined;\r\n      return this.findByName(name);\r\n    }\r\n    return found;\r\n  }\r\n\r\n  findAll(): any[] {\r\n    if (!db.length && this.nextHandler instanceof ResyncWhenUserMissing) {\r\n      this.nextHandler.handle("resync");\r\n      this.nextHandler = undefined;\r\n      return this.findAll();\r\n    }\r\n    return db;\r\n  }\r\n\r\n  public setNext(handler: Handler) {\r\n    this.nextHandler = handler;\r\n    return this;\r\n  }\r\n}\r\n\r\nconst userRepository = new UserRepository();\r\nconst found = userRepository.setNext(new ResyncWhenUserMissing()).findByName("\ud734\uc77c");\r\nconsole.log(found);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);