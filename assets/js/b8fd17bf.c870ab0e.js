"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["554092"],{394586:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>a,toc:()=>l,default:()=>p,metadata:()=>t,assets:()=>c,contentTitle:()=>s});var t=JSON.parse('{"id":"x design pattern/SOLID Principle","title":"SOLID Principle","description":"\uD56D\uC0C1 \'\uBCC0\uD654\'\uB97C \uC5FC\uB450\uC5D0 \uB450\uACE0 \uCF54\uB4DC\uB97C \uC791\uC131\uD558\uB77C","source":"@site/docs/x design pattern/SOLID Principle.md","sourceDirName":"x design pattern","slug":"/x design pattern/SOLID Principle","permalink":"/docs/x design pattern/SOLID Principle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SOLID ISP & Strategy Pattern","permalink":"/docs/x design pattern/SOLID ISP & strategy pattern"},"next":{"title":"design pattern bridge vs adapter","permalink":"/docs/x design pattern/Structural adapter vs bridge"}}'),i=r(447259),o=r(255511);let a={},s="SOLID Principle",c={},l=[{value:"SRP - Single Responsibility Principle",id:"srp---single-responsibility-principle",level:2},{value:"OCP - Open Closed Principle",id:"ocp---open-closed-principle",level:2},{value:"bad",id:"bad",level:3},{value:"good",id:"good",level:3},{value:"LSP - Liskov Substitution Principle",id:"lsp---liskov-substitution-principle",level:2},{value:"ISP - Interface Segregation Principle",id:"isp---interface-segregation-principle",level:2},{value:"bad",id:"bad-1",level:3},{value:"good",id:"good-1",level:3},{value:"DIP - Dependency Inversion Principle",id:"dip---dependency-inversion-principle",level:2},{value:"bad",id:"bad-2",level:3},{value:"good",id:"good-2",level:3}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"solid-principle",children:"SOLID Principle"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uD56D\uC0C1 '\uBCC0\uD654'\uB97C \uC5FC\uB450\uC5D0 \uB450\uACE0 \uCF54\uB4DC\uB97C \uC791\uC131\uD558\uB77C"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uAC19\uC740 \uC774\uC720\uB85C \uBCC0\uD654\uD558\uB294 \uAC83\uB07C\uB9AC \uBB36\uACE0, \uB2E4\uB978 \uC774\uC720\uB85C \uBCC0\uD654\uD558\uB294 \uAC83\uB07C\uB9AC\uB294 \uBD84\uB9AC\uD558\uB77C."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"srp---single-responsibility-principle",children:"SRP - Single Responsibility Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC11C\uBE44\uC2A4\uC5D0 \uB300\uD55C \uCC45\uC784\uC740 \uD558\uB098\uC5EC\uC57C \uD55C\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"\uAC19\uC740 \uC218\uC900\uC758 \uC11C\uBE44\uC2A4"\uB97C \uC11C\uB85C\uC758 \uC11C\uBE44\uC2A4\uC5D0 \uB0B4\uC5D0\uC11C \uC8FC\uC785\uD558\uC9C0 \uB9D0\uC544\uB77C'}),"\n",(0,i.jsx)(n.p,{children:"order \uACFC email \uC740 \uAC19\uC740 \uC800\uC218\uC900\uC758 \uC11C\uBE44\uC2A4"}),"\n",(0,i.jsx)(n.p,{children:"\uB9CC\uC57D shopping-mall\uC774\uB77C\uB294 \uACE0\uC218\uC900\uC758 \uC11C\uBE44\uC2A4\uAC00 \uC788\uB2E4\uBA74 \uC774 \uC11C\uBE44\uC2A4 \uB0B4\uC5D0\uC11C\uB294 order, email \uC11C\uBE44\uC2A4\uB97C \uC8FC\uC785\uD560 \uC218 \uC788\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC5B4\uB5A4 \uD074\uB798\uC2A4\uB97C \uBCC0\uACBD\uD574\uC57C \uD558\uB294 \uC774\uC720\uB294 \uC624\uC9C1 \uD558\uB098\uBFD0 \uC774\uC5B4\uC57C \uD55C\uB2E4. \uAC19\uC740 \uC774\uC720\uB85C \uBCC0\uD654\uD558\uB294 \uAC83\uB07C\uB9AC \uBB36\uACE0, \uB2E4\uB978 \uC774\uC720\uB85C \uBCC0\uD654\uD558\uB294 \uAC83\uB07C\uB9AC\uB294 \uBD84\uB9AC\uD558\uB77C."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Service\uB97C \uB098\uB204\uACE0 \uC774\uBCA4\uD2B8\uB85C \uC18C\uD1B5\uD574\uB77C"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ocp---open-closed-principle",children:"OCP - Open Closed Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uD655\uC7A5\uC5D0\uB294 \uC5F4\uB824\uC788\uACE0, \uBCC0\uACBD\uC5D0\uB294 \uB2EB\uD600\uC788\uC5B4\uC57C \uD55C\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC0C8\uB85C\uC6B4 \uAE30\uB2A5\uC774 \uCD94\uAC00\uB418\uBA74, \uAE30\uC874\uC758 \uCF54\uB4DC\uB97C \uBCC0\uACBD\uD558\uC9C0 \uC54A\uACE0 \uD655\uC7A5\uD560 \uC218 \uC788\uC5B4\uC57C \uD55C\uB2E4."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Injectable()\r\nexport class PaymentService {\r\n  //\u274C Bad\r\n  //Everytime we add a new payment method we need to modify the code\r\n  //\uC0C8\uB85C\uC6B4 \uACB0\uC81C \uBC29\uBC95\uC774 \uCD94\uAC00\uB420 \uB54C\uB9C8\uB2E4 \uCF54\uB4DC\uB97C \uC218\uC815\uD574\uC57C \uD55C\uB2E4.\r\n  public badProcessPayment(order: Order, paymentMethod: string): void {\r\n    if (paymentMethod === "creditCard") {\r\n      // Process credit card payment\r\n    } else if (paymentMethod === "paypal") {\r\n      // Process PayPal payment\r\n    } else if (paymentMethod === "bitcoin") {\r\n      // Process Bitcoin payment\r\n    } else {\r\n      // Handle other payment methods\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Injectable()\r\nexport class PaymentService {\r\n  //\u2705 Good\r\n  // \uC0C8\uB85C\uC6B4 \uACB0\uC81C \uBC29\uBC95\uC774 \uCD94\uAC00\uB418\uBA74 PaymentGateway\uB97C \uC218\uC815\uD558\uBA74 \uB41C\uB2E4.\r\n  private paymentGateways: Record<string, PaymentGateway> = {};\r\n\r\n  public registerPaymentGateway(paymentMethod: PAYMENT_METHOD, gateway: PaymentGateway) {\r\n    this.paymentGateways[paymentMethod] = gateway;\r\n  }\r\n\r\n  public async processPayment(order: Order, paymentMethod: PAYMENT_METHOD) {\r\n    const gateway = this.paymentGateways[paymentMethod];\r\n    if (gateway) {\r\n      await gateway.processPayment(order);\r\n    } else {\r\n      throw new Error("Unsupported payment method!");\r\n    }\r\n  }\r\n}\r\n\r\n// \u2705 Good\r\n//Extending the payment service without modifying existing code (Open-Closed Principle)\r\nexport interface PaymentGateway {\r\n  processPayment(order: Order): void;\r\n}\r\n\r\nexport class CreditCardGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process credit card payment\r\n  }\r\n}\r\n\r\nexport class PayPalGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process PayPal payment\r\n  }\r\n}\r\n\r\nexport class BitcoinGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process Bitcoin payment\r\n  }\r\n}\r\n\r\n//Maybe you want to add support for a new payment Method \u{1F914} \u{1F447}\r\nexport class ApplePayGateway implements PaymentGateway {\r\n  processPayment(order: Order): void {\r\n    // Process ApplePay payment\r\n  }\r\n}\r\n\r\nexport enum PAYMENT_METHOD {\r\n  CREDIT_CARD = "credit-card",\r\n  PAYPAL = "paypal",\r\n  BITCOIN = "bitcoin",\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"lsp---liskov-substitution-principle",children:"LSP - Liskov Substitution Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uBD80\uBAA8 \uD074\uB798\uC2A4\uB294 \uC790\uC2DD \uAC1D\uCCB4\uAC00 \uC644\uC804\uD788 \uB300\uCCB4\uD560 \uC218 \uC788\uC5B4\uC57C \uD55C\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC815\uB9AC\uD558\uBA74 LSP\uB294 \uC11C\uBE0C \uD074\uB798\uC2A4\uAC00 \uC288\uD37C \uD074\uB798\uC2A4\uC758 \uCC45\uC784(\uD589\uC704)\uC744 \uBB34\uC2DC\uD558\uAC70\uB098 \uC7AC\uC815\uC758\uD558\uC9C0 \uC54A\uACE0 \uD655\uC7A5\uB9CC \uC218\uD589\uD55C\uB2E4\uB294 \uAC83\uC744 \uC758\uBBF8\uD569\uB2C8\uB2E4."}),"\n",(0,i.jsx)(n.p,{children:"\uBD80\uBAA8\uAC00 \uC218\uD589\uD558\uACE0 \uC788\uB294 \uCC45\uC784\uC744 \uADF8\uB300\uB85C \uC218\uD589\uD558\uBA74\uC11C \uCD94\uAC00\uC801\uC778 \uD544\uB4DC\uB098 \uAE30\uB2A5\uC744 \uC81C\uACF5\uD558\uB824\uB294 \uACBD\uC6B0\uC5D0\uB9CC \uC0C1\uC18D\uC744 \uD558\uB294 \uAC83\uC774 \uBC14\uB78C\uC9C1\uD558\uBA70 \uBD80\uBAA8 \uD074\uB798\uC2A4\uC758 \uCC45\uC784\uC744 \uBCC0\uD654\uC2DC\uD0A4\uB294 \uAE30\uB2A5\uC740 LSP\uBC95\uCE59\uC5D0 \uC704\uBC30 \uB41C\uB2E4\uACE0 \uBCFC \uC218 \uC788\uC2B5\uB2C8\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC790\uC2DD\uC740 \uBD80\uBAA8\uC758 \uBAA8\uB4E0 \uD589\uC704\uB97C \uC218\uD589\uD560 \uC218 \uC788\uC5B4\uC57C \uD55C\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'\uC0C1\uC18D\uC744 \uC0AC\uC6A9\uD560 \uB54C\uB294 "is-a" \uAD00\uACC4\uAC00 \uC131\uB9BD\uD558\uB294\uC9C0\uB97C \uACE0\uB824\uD574\uC57C \uD569\uB2C8\uB2E4.'}),"\n",(0,i.jsx)(n.p,{children:"is-a = \uB9AC\uC2A4\uCF54\uD504 \uCE58\uD658\uC6D0\uCE59\uC744 \uC9C0\uD0A4\uBA74\uC11C \uBD80\uBAA8\uC758 \uBAA8\uB4E0 \uBA54\uC18C\uB4DC\uB97C \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'class KingDuck {\r\n  fly() {\r\n    console.log("I can fly");\r\n  }\r\n}\r\n\r\n// PrincessDuck\uC774 \uB0A0 \uC218 \uC5C6\uB2E4\uBA74 KingDuck\uC758 \uC790\uB9AC\uB97C \uB300\uCCB4\uD560 \uC218 \uC5C6\uB2E4.\r\nclass PrincessDuck extends KingDuck {\r\n  fly() {\r\n    console.log("I can\'t fly");\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"isp---interface-segregation-principle",children:"ISP - Interface Segregation Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uD074\uB77C\uC774\uC5B8\uD2B8\uB294 \uC790\uC2E0\uC774 \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uB294 \uBA54\uC18C\uB4DC\uC5D0 \uC758\uC874\uD558\uC9C0 \uC54A\uC544\uC57C \uD55C\uB2E4."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"interface\uB97C \uC6A9\uB3C4\uC5D0 \uB9DE\uAC8C \uB098\uB220\uB77C"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad-1",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"//Bad \u274C\r\n//Not seperating the concerns\r\nexport interface Notification {\r\n  to?: string; //< for email\r\n  subject?: string; //< for email\r\n  body?: string; //< for email & push\r\n  phoneNumber?: string; //< for sms\r\n  message?: string; //< for sms\r\n  userId?: string; //< for push\r\n  title?: string; //< for push\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//AMAZON Simple Email Service Instance\r\nconst ses: any = {};\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  //Bad \u274C\r\n  //interface(DTO)\uAC00 \uC0AC\uC6A9\uD558\uC9C0\uB3C4 \uC54A\uB294 property\uB97C \uAC00\uC9C0\uACE0 \uC788\uB2E4.\r\n  async badSendEmail(notification: Notification) {\r\n    // Define the parameters for the email\r\n    const params = {\r\n      Source: "no-reply@coderone.io",\r\n      Destination: {\r\n        ToAddresses: [notification.to],\r\n      },\r\n      Message: {\r\n        Subject: {\r\n          Data: notification.subject,\r\n        },\r\n        Body: {\r\n          Text: {\r\n            Data: notification.body,\r\n          },\r\n        },\r\n      },\r\n    };\r\n    await ses.sendEmail(params);\r\n  }\r\n  //Bad \u274C\r\n  badSendSMS(notification: Notification) {\r\n    // Logic to send SMS notification\r\n  }\r\n  //Bad \u274C\r\n  badSendPushNotification(notification: Notification) {\r\n    // Logic to send push notification\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good-1",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"//Good \u2705\r\nexport interface EmailNotification {\r\n  to: string;\r\n  subject: string;\r\n  body: string;\r\n}\r\n\r\nexport interface SMSNotification {\r\n  phoneNumber: string;\r\n  message: string;\r\n}\r\n\r\nexport interface PushNotification {\r\n  userId: string;\r\n  title: string;\r\n  body: string;\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//AMAZON Simple Email Service Instance\r\nconst ses: any = {};\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  //Good \u2705\r\n  sendEmail(notification: EmailNotification) {\r\n    // Logic to send email notification\r\n  }\r\n  //Good \u2705\r\n  sendSMS(notification: SMSNotification): void {\r\n    // Logic to send SMS notification\r\n  }\r\n  //Good \u2705\r\n  sendPushNotification(notification: PushNotification): void {\r\n    // Logic to send push notification\r\n  }\r\n}\r\n\r\n/* Controllers */\r\n@Controller("email")\r\nexport class EmailController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendEmail(notification: EmailNotification): void {\r\n    this.notificationService.sendEmail(notification);\r\n  }\r\n}\r\n\r\n@Controller("push-notification")\r\nexport class PushNotificationController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendPushNotification(notification: PushNotification): void {\r\n    this.notificationService.sendPushNotification(notification);\r\n  }\r\n}\r\n\r\n@Controller("sms")\r\nexport class SMSController {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  @Post()\r\n  sendSMS(notification: SMSNotification): void {\r\n    this.notificationService.sendSMS(notification);\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"dip---dependency-inversion-principle",children:"DIP - Dependency Inversion Principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC758\uC874\uC131 \uC5ED\uC804 \uC6D0\uCE59"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"\uACE0\uC218\uC900 \uBAA8\uB4C8"\uC740 "\uC800\uC218\uC900 \uBAA8\uB4C8"\uC758 \uAD6C\uD604\uC5D0 \uC758\uC874\uD574\uC11C\uB294 \uC548\uB41C\uB2E4.'}),"\n",(0,i.jsx)(n.p,{children:'"\uC800\uC218\uC900 \uBAA8\uB4C8"\uC774 "\uACE0\uC218\uC900 \uBAA8\uB4C8"\uC5D0\uC11C \uC815\uC758\uD55C \uCD94\uC0C1 \uD0C0\uC785\uC5D0 \uC758\uC874\uD574\uC57C \uD55C\uB2E4.'}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uC800\uC218\uC900 \uBAA8\uB4C8\uC744 \uC704\uD55C \uBA54\uC18C\uB4DC\uB97C \uB530\uB85C \uB9CC\uB4E4\uC9C0 \uB9D0\uC544\uB77C!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bad-2",children:"bad"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//Bad \u274C\r\nconst s3: any = {};\r\nconst cloudStorage: any = {};\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n  public findAmazonS3File(filename: string) {\r\n    // Custom S3 Implementation here\r\n    // Set up S3 getObject parameters\r\n    const params = {\r\n      Bucket: "STORAGE",\r\n      Key: process.env.AWS_key,\r\n    };\r\n\r\n    // Fetch the file from S3\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        throw new Error("Error fetching the file from S3");\r\n      } else {\r\n        return data.Body; // Return the file data in the response\r\n      }\r\n    });\r\n  }\r\n\r\n  public async findGoogleCloudStorageFile(filename: string) {\r\n    // Google Cloud Storage specific implementation\r\n    // To adhere to DIP\r\n    // Get the file reference\r\n    const bucket = cloudStorage.bucket("STORAGE");\r\n    const file = bucket.file(filename);\r\n\r\n    // Download the file\r\n    const [fileContent] = await file.download();\r\n\r\n    return fileContent;\r\n  }\r\n}\r\n\r\n/* Controllers */\r\nimport { Controller, Get, Param } from "@nestjs/common";\r\nimport { StorageFetcher, StorageService } from "./storage.service";\r\nimport { StorageS3FetcherService } from "./storage-s3-fetcher.service";\r\nimport { StorageCSFetcherService } from "./storage-cs-fetcher.service";\r\n\r\n@Controller("storage")\r\nexport class StorageController {\r\n  constructor(private storageService: StorageFetcher) {}\r\n\r\n  //Bad \u274C\r\n  @Get("file/:filename")\r\n  public badGetFile(@Param("filename") filename: string) {\r\n    return this.storageService.findAmazonS3File(filename);\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"good-2",children:"good"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'//Good \u2705\r\n//Use an abstract class to provide a common structure for different implementations\r\n//You have to implement each Storage Service using this\r\nexport interface StorageFetcher {\r\n  findFile(filename: string): any;\r\n}\r\n\r\n//Your Google Cloud Storage instance\r\nconst cloudStorage: any = {};\r\n\r\n//Good \u2705\r\n//This implements the Google Cloud Storage fetching API\r\n@Injectable()\r\nexport class StorageCSFetcherService implements StorageFetcher {\r\n  public async findFile(filename: string) {\r\n    //Google Cloud Storage specific implementation\r\n    //To adhere to DIP\r\n    // Get the file reference\r\n    const bucket = cloudStorage.bucket("STORAGE");\r\n    const file = bucket.file(filename);\r\n\r\n    // Download the file\r\n    const [fileContent] = await file.download();\r\n\r\n    return fileContent;\r\n  }\r\n}\r\n\r\n//Good \u2705\r\n//This implements S3 API for the StorageFetcher\r\n//Allows us to adhere to DIP\r\n@Injectable()\r\nexport class StorageS3FetcherService implements StorageFetcher {\r\n  public findFile(filename: string) {\r\n    //Custom S3 Implementation here\r\n    // Set up S3 getObject parameters\r\n    const params = {\r\n      Bucket: "STORAGE",\r\n      Key: process.env.AWS_key,\r\n    };\r\n\r\n    // Fetch the file from S3\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        throw new Error("Error fetching the file from S3");\r\n      } else {\r\n        return data.Body; // Return the file data in the response\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/* Controllers */\r\nimport { Controller, Get, Param } from "@nestjs/common";\r\nimport { StorageFetcher, StorageService } from "./storage.service";\r\nimport { StorageS3FetcherService } from "./storage-s3-fetcher.service";\r\nimport { StorageCSFetcherService } from "./storage-cs-fetcher.service";\r\n\r\n@Controller("storage")\r\nexport class StorageController {\r\n  constructor(private storageService: StorageFetcher) {}\r\n  //Good \u2705\r\n  @Get("file/:filename")\r\n  public getFile(@Param("filename") filename: string) {\r\n    return this.storageService.findFile(filename);\r\n  }\r\n}\r\n\r\n/* Module */\r\n@Module({\r\n  controllers: [StorageController],\r\n  providers: [\r\n    // StorageS3FetcherService,\r\n    { provide: StorageFetcher, useClass: StorageCSFetcherService },\r\n  ],\r\n})\r\nexport class StorageModule {}\n'})})]})}function p(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},255511:function(e,n,r){r.d(n,{R:()=>a,x:()=>s});var t=r(596363);let i={},o=t.createContext(i);function a(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);