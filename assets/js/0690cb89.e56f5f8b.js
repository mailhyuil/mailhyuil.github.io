"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[293672],{529087:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(596363);const t={},c=o.createContext(t);function s(e){const n=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(c.Provider,{value:n},e.children)}},928213:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"protocol/L5 TLS certbot renew - \uac31\uc2e0","title":"certbot renew (\uac31\uc2e0)","description":"renew \ud6c4 nginx\ub97c reload \ud574\uc57c\ud55c\ub2e4!","source":"@site/docs/protocol/L5 TLS certbot renew - \uac31\uc2e0.md","sourceDirName":"protocol","slug":"/protocol/L5 TLS certbot renew - \uac31\uc2e0","permalink":"/docs/protocol/L5 TLS certbot renew - \uac31\uc2e0","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"certbot options","permalink":"/docs/protocol/L5 TLS certbot options"},"next":{"title":"certbot --no-random-sleep-on-renew","permalink":"/docs/protocol/L5 TLS certbot renew --no-random-sleep-on-renew"}}');var t=r(447259),c=r(529087);const s={},l="certbot renew (\uac31\uc2e0)",i={},d=[{value:"\uac31\uc2e0",id:"\uac31\uc2e0",level:2},{value:"\uc790\ub3d9 \uac31\uc2e0 cronjob",id:"\uc790\ub3d9-\uac31\uc2e0-cronjob",level:2},{value:"letsencrypt-renew.sh",id:"letsencrypt-renewsh",level:3},{value:"cron",id:"cron",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"certbot-renew-\uac31\uc2e0",children:"certbot renew (\uac31\uc2e0)"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"renew \ud6c4 nginx\ub97c reload \ud574\uc57c\ud55c\ub2e4!"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\uac31\uc2e0",children:"\uac31\uc2e0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# \ud14c\uc2a4\ud2b8\r\ncertbot renew --dry-run\r\n# \uac31\uc2e0\r\ncertbot renew\r\n# certbot renew --cert-name dep.team\r\n\r\n# nginx reload\r\nnginx -s reload\r\n# docker\r\ndocker exec nginx nginx -s reload\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\uc790\ub3d9-\uac31\uc2e0-cronjob",children:"\uc790\ub3d9 \uac31\uc2e0 cronjob"}),"\n",(0,t.jsx)(n.h3,{id:"letsencrypt-renewsh",children:"letsencrypt-renew.sh"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"chmod -x letsencrypt-renew.sh \ub85c \uad8c\ud55c \ubcc0\uacbd"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"#!/bin/sh\r\nsudo -i\r\ncertbot renew > /var/log/letsencrypt/letsencrypt-renew.log\r\nnginx -s reload\r\n# docker exec nginx nginx -s reload\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cron",children:"cron"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"crontab -e"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"30 4 * * 0 /etc/letsencrypt/letsencrypt-renew.sh\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);