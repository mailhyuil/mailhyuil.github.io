"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[155345],{529087:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var t=r(596363);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},991575:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"build/bundle webpack base filename","title":"webpack filename","description":"","source":"@site/docs/build/bundle webpack base filename.md","sourceDirName":"build","slug":"/build/bundle webpack base filename","permalink":"/docs/build/bundle webpack base filename","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"webpack externals","permalink":"/docs/build/bundle webpack base externals & externalsPresets"},"next":{"title":"webpack mode","permalink":"/docs/build/bundle webpack base mode"}}');var a=r(447259),o=r(529087);const s={},i="webpack filename",l={},c=[];function d(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"webpack-filename",children:"webpack filename"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[absolute-resource-path] # The absolute filename\r\n[all-loaders] # Automatic and explicit loaders and params up to the name of the first loader\r\n[loaders] # Explicit loaders and params up to the name of the first loader\r\n[resource] # The path used to resolve the file and any query params used on the first loader\r\n[resource-path] # The path used to resolve the file without any query params\r\n[hash] #  The hash of the module identifier\r\n[chunkhash] #  The hash of the chunk content\r\n[name] #  The module name\r\n[id] #  The module identifier\r\n[query] #  The module query, i.e., the string following ? in the filename\r\n[contenthash] #  A hash generated from the content of the extracted file\r\n[emoji] #  A random emoji\r\n[ext] #  The extension of the resource\r\n[root] #  The root directory of the resource\r\n[dirname] #  The dirname of the resource\r\n[basename] #  The basename of the resource\r\n[query] #  The query of the resource\r\n[folder] #  The folder of the resource\r\n[regExp] #  A regular expression matching the request\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);