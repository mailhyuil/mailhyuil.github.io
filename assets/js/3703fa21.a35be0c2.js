"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[116534],{529087:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var n=t(596363);const o={},s=n.createContext(o);function a(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:r},e.children)}},914815:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"x design pattern/x retry pattern","title":"retry pattern","description":"\uc5d0\ub7ec \ubc1c\uc0dd \uc2dc \uc7ac\uc2dc\ub3c4\ud558\ub294 \ud328\ud134","source":"@site/docs/x design pattern/x retry pattern.md","sourceDirName":"x design pattern","slug":"/x design pattern/x retry pattern","permalink":"/docs/x design pattern/x retry pattern","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"result pattern","permalink":"/docs/x design pattern/x result pattern"},"next":{"title":"saga","permalink":"/docs/x design pattern/x saga"}}');var o=t(447259),s=t(529087);const a={},c="retry pattern",l={},i=[];function p(e){const r={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"retry-pattern",children:"retry pattern"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"\uc5d0\ub7ec \ubc1c\uc0dd \uc2dc \uc7ac\uc2dc\ub3c4\ud558\ub294 \ud328\ud134"}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:'const retry = async (callback: () => void, max: number = 3) => {\r\n  let attempt = 0;\r\n  let result;\r\n  while (true) {\r\n    try {\r\n      result = callback();\r\n      break;\r\n    } catch (error) {\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      if (attempt >= max - 1) {\r\n        throw error;\r\n      }\r\n      attempt++;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nretry(() => {\r\n  console.log("hello");\r\n  throw new Error("error");\r\n});\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);