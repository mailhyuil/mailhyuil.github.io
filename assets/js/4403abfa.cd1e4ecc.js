"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[590642],{529087:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(596363);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},577560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"testing/testing nestjs middleware","title":"testing nestjs middleware","description":"","source":"@site/docs/testing/testing nestjs middleware.md","sourceDirName":"testing","slug":"/testing/testing nestjs middleware","permalink":"/docs/testing/testing nestjs middleware","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest testing interceptor","permalink":"/docs/testing/testing nestjs interceptor"},"next":{"title":"testing nestjs pipe","permalink":"/docs/testing/testing nestjs pipe"}}');var s=n(447259),o=n(529087);const i={},c="testing nestjs middleware",a={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"testing-nestjs-middleware",children:"testing nestjs middleware"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { createMock } from "@golevelup/ts-jest";\r\nimport { ExecutionContext, ForbiddenException } from "@nestjs/common";\r\nimport { of } from "rxjs";\r\nimport { ExampleMiddleware } from "./example.middleware";\r\n\r\ndescribe("ExampleMiddleware", () => {\r\n  let middleware: ExampleMiddleware;\r\n  let context: ExecutionContext;\r\n\r\n  beforeEach(() => {\r\n    middleware = new ExampleMiddleware();\r\n    context = createMock<ExecutionContext>();\r\n  });\r\n\r\n  it("should be defined", () => {\r\n    expect(interceptor).toBeDefined();\r\n  });\r\n\r\n  describe("use", () => {\r\n    it("should call next()", async () => {\r\n      /// req \ubaa8\ud0b9\r\n      const req = (context.switchToHttp().getRequest as jest.Mock<any, any>).mockRejectedValueOnce({\r\n        user: user,\r\n      });\r\n      /// res \ubaa8\ud0b9\r\n      const res = (context.switchToHttp().getResponse as jest.Mock<any, any>).mockReturnValueOnce({\r\n        body: { data },\r\n      });\r\n      const next = jest.fn();\r\n\r\n      middleware.use(req, res, next);\r\n\r\n      expect(next).toBeCalled();\r\n    });\r\n  });\r\n});\n'})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);