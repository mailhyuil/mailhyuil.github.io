"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["557679"],{77142:function(r,n,e){e.r(n),e.d(n,{frontMatter:()=>o,toc:()=>p,default:()=>c,metadata:()=>a,assets:()=>i,contentTitle:()=>s});var a=JSON.parse('{"id":"angular/angular graphql apollo-angular","title":"angular graphql","description":"install","source":"@site/docs/angular/angular graphql apollo-angular.md","sourceDirName":"angular","slug":"/angular/angular graphql apollo-angular","permalink":"/docs/angular/angular graphql apollo-angular","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular google-maps","permalink":"/docs/angular/angular google-maps"},"next":{"title":"angular html element \uCC38\uC870","permalink":"/docs/angular/angular html element \uCC38\uC870"}}'),l=e(447259),t=e(255511);let o={},s="angular graphql",i={},p=[{value:"install",id:"install",level:2},{value:"app.module.ts",id:"appmodulets",level:2},{value:"some.component.ts",id:"somecomponentts",level:2}];function u(r){let n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,t.R)(),...r.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"angular-graphql",children:"angular graphql"})}),"\n",(0,l.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"npm i graphql\r\nnpm i @apollo/client\r\nnpm i apollo-angular\n"})}),"\n",(0,l.jsx)(n.h2,{id:"appmodulets",children:"app.module.ts"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { APOLLO_OPTIONS, ApolloModule } from "apollo-angular";\r\nimport { HttpLink } from "apollo-angular/http";\r\nimport { InMemoryCache } from "@apollo/client/core";\r\n\r\n@NgModule({\r\n  imports: [ApolloModule],\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory(httpLink: HttpLink) {\r\n        return {\r\n          cache: new InMemoryCache(),\r\n          link: httpLink.create({\r\n            uri: "https://localhost:3000/api/v1", // interceptor\uB3C4 \uAC19\uC774 \uC801\uC6A9\uB428\r\n          }),\r\n        };\r\n      },\r\n      deps: [HttpLink],\r\n    },\r\n  ],\r\n})\r\nexport class AppModule {}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"somecomponentts",children:"some.component.ts"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Apollo, gql } from "apollo-angular";\r\nimport { Component, OnInit } from "@angular/core";\r\n\r\n@Component({\r\n  selector: "exchange-rates",\r\n  template: `\r\n    <div *ngIf="loading">Loading...</div>\r\n    <div *ngIf="error">Error :(</div>\r\n    <div *ngIf="rates">\r\n      <div *ngFor="let rate of rates">\r\n        <p>{{ rate.currency }}: {{ rate.rate }}</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class ExchangeRates implements OnInit {\r\n  rates: any[];\r\n  loading = true;\r\n  error: any;\r\n\r\n  constructor(private readonly apollo: Apollo) {}\r\n\r\n  ngOnInit() {\r\n    this.apollo\r\n      .watchQuery({\r\n        query: gql`\r\n          {\r\n            rates(currency: "USD") {\r\n              currency\r\n              rate\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rates = result.data?.rates;\r\n        this.loading = result.loading;\r\n        this.error = result.error;\r\n      });\r\n  }\r\n}\n'})})]})}function c(r={}){let{wrapper:n}={...(0,t.R)(),...r.components};return n?(0,l.jsx)(n,{...r,children:(0,l.jsx)(u,{...r})}):u(r)}},255511:function(r,n,e){e.d(n,{R:()=>o,x:()=>s});var a=e(596363);let l={},t=a.createContext(l);function o(r){let n=a.useContext(t);return a.useMemo(function(){return"function"==typeof r?r(n):{...n,...r}},[n,r])}function s(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(l):r.components||l:o(r.components),a.createElement(t.Provider,{value:n},r.children)}}}]);