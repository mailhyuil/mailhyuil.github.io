"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["522073"],{788900:function(e,r,t){t.r(r),t.d(r,{frontMatter:()=>a,toc:()=>l,default:()=>m,metadata:()=>n,assets:()=>c,contentTitle:()=>i});var n=JSON.parse('{"id":"firebase/firebase firestore","title":"firebase firestore","description":"\uCF58\uC194 -> firestore -> \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC0DD\uC131","source":"@site/docs/firebase/firebase firestore.md","sourceDirName":"firebase","slug":"/firebase/firebase firestore","permalink":"/docs/firebase/firebase firestore","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"firebase.json","permalink":"/docs/firebase/firebase firebase json"},"next":{"title":"firebase flutter service","permalink":"/docs/firebase/firebase flutter service"}}'),o=t(447259),s=t(255511);let a={},i="firebase firestore",c={},l=[{value:"install",id:"install",level:2},{value:"CRUD",id:"crud",level:2}];function d(e){let r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"firebase-firestore",children:"firebase firestore"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"\uCF58\uC194 -> firestore -> \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC0DD\uC131"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-sh",children:"# firebase \uC124\uC815 \uCD94\uAC00\r\nng add @angular/fire\n"})}),"\n",(0,o.jsx)(r.h2,{id:"crud",children:"CRUD"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"firestore.collection(collectionName).doc(docId).method()"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"addDoc, getDocs, updateDoc, deleteDoc, doc, collection, collectionData"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { HttpClientModule } from "@angular/common/http";\r\nimport { Component, inject } from "@angular/core";\r\nimport { Firestore, Timestamp, addDoc, collection, deleteDoc, doc, getDocs, orderBy, query, setDoc } from "@angular/fire/firestore";\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from "@angular/forms";\r\nimport { MatButtonModule } from "@angular/material/button";\r\nimport { MatInputModule } from "@angular/material/input";\r\n\r\n@Component({\r\n  selector: "app-home",\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatInputModule, MatButtonModule, HttpClientModule],\r\n  templateUrl: "./home.page.html",\r\n  styleUrls: ["./home.page.scss"],\r\n})\r\nexport class HomePage {\r\n  memos: {\r\n    id: string;\r\n    content: string;\r\n    createdAt: Timestamp;\r\n    updatedAt: Timestamp;\r\n  }[] = [];\r\n  firestore: Firestore = inject(Firestore);\r\n  collectionName = "memos";\r\n  formGroup = new FormGroup({\r\n    content: new FormControl(""),\r\n  });\r\n\r\n  async ngOnInit() {\r\n    await this.fetchMemos();\r\n  }\r\n\r\n  async fetchMemos() {\r\n    // Fetch all memos from the Firestore collection, ordered by createdAt timestamp\r\n    const q = query(collection(this.firestore, this.collectionName), orderBy("createdAt", "desc"));\r\n    const querySnapshot = await getDocs(q);\r\n    this.memos = querySnapshot.docs.map((doc) => ({\r\n      id: doc.id,\r\n      content: doc.data()["content"],\r\n      createdAt: doc.data()["createdAt"],\r\n      updatedAt: doc.data()["updatedAt"],\r\n    }));\r\n  }\r\n\r\n  async submit() {\r\n    const body = this.formGroup.getRawValue();\r\n    const now = new Date();\r\n    const memoData = {\r\n      ...body,\r\n      createdAt: Timestamp.fromDate(now),\r\n      updatedAt: Timestamp.fromDate(now),\r\n    };\r\n\r\n    try {\r\n      // Add a new memo to the Firestore collection\r\n      await addDoc(collection(this.firestore, this.collectionName), memoData);\r\n      // Clear the form and refresh the memo list\r\n      this.formGroup.reset();\r\n      await this.fetchMemos();\r\n    } catch (error) {\r\n      console.error("Error adding memo:", error);\r\n    }\r\n  }\r\n\r\n  async remove(id: string) {\r\n    try {\r\n      // Delete a memo from the Firestore collection\r\n      await deleteDoc(doc(this.firestore, this.collectionName, id));\r\n      // Refresh the memo list\r\n      await this.fetchMemos();\r\n    } catch (error) {\r\n      console.error("Error deleting memo:", error);\r\n    }\r\n  }\r\n\r\n  async update(id: string, newContent: string) {\r\n    try {\r\n      // Update a memo in the Firestore collection\r\n      const now = new Date();\r\n      const updatedData = {\r\n        content: newContent,\r\n        updatedAt: Timestamp.fromDate(now),\r\n      };\r\n      await setDoc(doc(this.firestore, this.collectionName, id), updatedData);\r\n      // Refresh the memo list\r\n      await this.fetchMemos();\r\n    } catch (error) {\r\n      console.error("Error updating memo:", error);\r\n    }\r\n  }\r\n}\n'})})]})}function m(e={}){let{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},255511:function(e,r,t){t.d(r,{R:()=>a,x:()=>i});var n=t(596363);let o={},s=n.createContext(o);function a(e){let r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);