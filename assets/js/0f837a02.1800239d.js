"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[905688],{529087:(e,s,o)=>{o.d(s,{R:()=>a,x:()=>u});var t=o(596363);const n={},r=t.createContext(n);function a(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function u(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(r.Provider,{value:s},e.children)}},579587:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"nodejs/nodejs module stream PassThrough","title":"nodejs module stream PassThrough","description":"PassThrough is a simple transform stream that passes the input stream data to the output. It is useful when you want to use a stream in your code but you don\'t want to modify the data.","source":"@site/docs/nodejs/nodejs module stream PassThrough.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs module stream PassThrough","permalink":"/docs/nodejs/nodejs module stream PassThrough","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs module resolution","permalink":"/docs/nodejs/nodejs module resolution"},"next":{"title":"nodejs module stream back pressure","permalink":"/docs/nodejs/nodejs module stream backpressure"}}');var n=o(447259),r=o(529087);const a={},u="nodejs module stream PassThrough",d={},l=[];function c(e){const s={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"nodejs-module-stream-passthrough",children:"nodejs module stream PassThrough"})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"PassThrough is a simple transform stream that passes the input stream data to the output. It is useful when you want to use a stream in your code but you don't want to modify the data."}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"\ub370\uc774\ud130\ub97c \ubcc0\ud615\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 PassThrough \uc2a4\ud2b8\ub9bc\uc744 \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'const { PassThrough } = require("stream");\r\n\r\nconst pass = new PassThrough();\r\n\r\npass.on("data", chunk => {\r\n  console.log(chunk.toString());\r\n});\r\n\r\npass.write("Hello, ");\r\npass.write("world!");\r\n\r\npass.end();\n'})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);