"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[540343],{529087:(r,e,n)=>{n.d(e,{R:()=>a,x:()=>d});var s=n(596363);const o={},t=s.createContext(o);function a(r){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function d(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:a(r.components),s.createElement(t.Provider,{value:e},r.children)}},852324:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"nodejs/nodejs module multicore worker_threads SharedArrayBuffer & Atomics","title":"node worker_threads SharedArrayBuffer & Atomics","description":"SharedArrayBuffer\uc640 Atomics API\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc2a4\ub808\ub4dc\uac04 \uc548\uc804\ud558\uac8c \ub370\uc774\ud130\ub97c \uacf5\uc720\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","source":"@site/docs/nodejs/nodejs module multicore worker_threads SharedArrayBuffer & Atomics.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs module multicore worker_threads SharedArrayBuffer & Atomics","permalink":"/docs/nodejs/nodejs module multicore worker_threads SharedArrayBuffer & Atomics","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nodejs cluster","permalink":"/docs/nodejs/nodejs module multicore cluster"},"next":{"title":"node worker_threads in child_process (\uc790\uc2dd \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \uba40\ud2f0 \uc2a4\ub808\ub529)","permalink":"/docs/nodejs/nodejs module multicore worker_threads in child_process - \uc790\uc2dd \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \uba40\ud2f0 \uc2a4\ub808\ub529"}}');var o=n(447259),t=n(529087);const a={},d="node worker_threads SharedArrayBuffer & Atomics",c={},i=[{value:"main.js",id:"mainjs",level:2},{value:"child.js",id:"childjs",level:2},{value:"worker.js",id:"workerjs",level:2}];function l(r){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"node-worker_threads-sharedarraybuffer--atomics",children:"node worker_threads SharedArrayBuffer & Atomics"})}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"SharedArrayBuffer\uc640 Atomics API\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc2a4\ub808\ub4dc\uac04 \uc548\uc804\ud558\uac8c \ub370\uc774\ud130\ub97c \uacf5\uc720\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"postMessage\ub97c \uc0ac\uc6a9\uc2dc \ub370\uc774\ud130\ub97c \ubcf5\uc0ac\ud574\uc11c \uc804\ub2ec\ud558\uac8c \ub418\uc5b4 \uc624\ubc84\ud5e4\ub4dc\uac00 \ubc1c\uc0dd"}),"\n",(0,o.jsx)(e.p,{children:"SharedArrayBuffer\ub97c \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\ub97c \ubcf5\uc0ac\ud558\uc9c0 \uc54a\uace0 \uacf5\uc720\ud560 \uc218 \uc788\uc74c"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"mainjs",children:"main.js"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'const { fork } = require("child_process");\r\n\r\n// \uc790\uc2dd \ud504\ub85c\uc138\uc2a4 \uc2e4\ud589\r\nconst child = fork("./child.js");\r\n\r\nchild.on("message", message => {\r\n  console.log("main got message:", message);\r\n});\r\n\r\n// \uc790\uc2dd \ud504\ub85c\uc138\uc2a4\uc5d0 \uc791\uc5c5 \uc694\uccad (num \uac12 \uc124\uc815)\r\nchild.send({ num: 10000 });\n'})}),"\n",(0,o.jsx)(e.h2,{id:"childjs",children:"child.js"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'const { Worker } = require("worker_threads");\r\nconst os = require("os");\r\n\r\nprocess.on("message", async message => {\r\n  const { num } = message;\r\n  const workers = os.cpus().length;\r\n\r\n  if (num) {\r\n    // \ud83d\ude80 SharedArrayBuffer \uc0dd\uc131 (Int32Array \uae30\uc900 workers \uac1c\uc218 + \uc644\ub8cc \ud50c\ub798\uadf8 \ucd94\uac00)\r\n    const sharedBuffer = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * (workers + 1));\r\n    const sharedArray = new Int32Array(sharedBuffer);\r\n\r\n    const workerPromises = [];\r\n    for (let i = 0; i < workers; i++) {\r\n      const start = Math.floor((num / workers) * i);\r\n      const end = Math.floor((num / workers) * (i + 1));\r\n\r\n      workerPromises.push(\r\n        new Promise(resolve => {\r\n          const worker = new Worker("./worker.js", {\r\n            workerData: { start, end, index: i, sharedBuffer },\r\n          });\r\n          worker.once("exit", resolve);\r\n        }),\r\n      );\r\n    }\r\n\r\n    // \ubaa8\ub4e0 \uc6cc\ucee4 \uc644\ub8cc \ub300\uae30\r\n    await Promise.all(workerPromises);\r\n\r\n    // \ud83d\ude80 \ubaa8\ub4e0 \uc6cc\ucee4\uac00 \ub05d\ub0ac\uc74c\uc744 \uc54c\ub9bc (Atomics.notify \uc0ac\uc6a9)\r\n    Atomics.notify(sharedArray, workers, workers);\r\n\r\n    // \ucd5c\uc885 \ud569\uc0b0 \ud6c4 \ubd80\ubaa8 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc804\uc1a1\r\n    const totalSum = sharedArray.reduce((acc, cur) => acc + cur, 0);\r\n    process.send(totalSum);\r\n  }\r\n  process.exit(0);\r\n});\n'})}),"\n",(0,o.jsx)(e.h2,{id:"workerjs",children:"worker.js"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'const { workerData } = require("worker_threads");\r\n\r\nconst { start, end, index, sharedBuffer } = workerData;\r\n\r\n// \ud83d\ude80 SharedArrayBuffer\uc5d0\uc11c \uacf5\uc720\ub41c \uba54\ubaa8\ub9ac \uac00\uc838\uc624\uae30\r\nconst sharedArray = new Int32Array(sharedBuffer);\r\n\r\n// \ud83d\ude80 \ubd80\ubd84 \ud569 \uacc4\uc0b0\r\nlet sum = 0;\r\nfor (let i = start; i < end; i++) {\r\n  sum += i;\r\n}\r\n\r\n// \ud83d\ude80 Atomics\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc548\uc804\ud558\uac8c \uacf5\uc720 \ubc30\uc5f4\uc5d0 \uacb0\uacfc \uc800\uc7a5\r\nAtomics.store(sharedArray, index, sum);\r\n\r\n// \uc6cc\ucee4 \uc885\ub8cc\r\nprocess.exit(0);\n'})})]})}function u(r={}){const{wrapper:e}={...(0,t.R)(),...r.components};return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(l,{...r})}):l(r)}}}]);