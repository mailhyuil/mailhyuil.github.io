"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["650002"],{201517:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>s,toc:()=>l,default:()=>c,metadata:()=>t,assets:()=>u,contentTitle:()=>d});var t=JSON.parse('{"id":"kubernetes/kube ControlPlane kubeadm - Upgrade","title":"kube base kubeadm (Upgrade)","description":"kubernetes\uB97C \uC124\uCE58\uD574\uC8FC\uB294 \uB3C4\uAD6C","source":"@site/docs/kubernetes/kube ControlPlane kubeadm - Upgrade.md","sourceDirName":"kubernetes","slug":"/kubernetes/kube ControlPlane kubeadm - Upgrade","permalink":"/docs/kubernetes/kube ControlPlane kubeadm - Upgrade","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kube-scheduler","permalink":"/docs/kubernetes/kube ControlPlane kube-scheduler"},"next":{"title":"cAdvisor","permalink":"/docs/kubernetes/kube ControlPlane kubelet cAdvisor"}}'),o=r(447259),a=r(255511);let s={},d="kube base kubeadm (Upgrade)",u={},l=[];function i(e){let n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"kube-base-kubeadm-upgrade",children:"kube base kubeadm (Upgrade)"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"kubernetes\uB97C \uC124\uCE58\uD574\uC8FC\uB294 \uB3C4\uAD6C"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\uD074\uB7EC\uC2A4\uD130\uB97C \uBD80\uD2B8\uC2A4\uD2B8\uB7A9\uD558\uB294 \uBA85\uB839\uC774\uB2E4."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"# ssh to node to upgrade\r\nssh <node-to-upgrade>\r\n\r\n###### \uC800\uC7A5\uC18C \uCD94\uAC00 #####\r\nsudo apt-get update\r\n# apt-transport-https may be a dummy package; if so, you can skip that package\r\nsudo apt-get install -y apt-transport-https ca-certificates curl gpg\r\n# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.\r\n# sudo mkdir -p -m 755 /etc/apt/keyrings\r\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\r\n# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list\r\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\r\n\r\n##### Upgrade \uC2DC\uC791 #####\r\n\r\n# Find the latest 1.32 version in the list.\r\n# It should look like 1.32.x-*, where x is the latest patch.\r\nsudo apt update\r\nsudo apt-cache madison kubeadm\r\n###################################################\r\n###################################################\r\n##### get version to upgrade  e.g. 1.32.0-1.1 #####\r\n###################################################\r\n###################################################\r\n\r\n# replace x in 1.32.x-* with the latest patch version\r\nsudo apt-mark unhold kubeadm && \\\r\nsudo apt-get update && sudo apt-get install -y kubeadm='1.32.x-*' && \\\r\nsudo apt-mark hold kubeadm\r\n\r\nkubeadm version\r\nsudo kubeadm upgrade plan\r\n\r\n\r\n# controlplane \uC77C \uB54C\r\nsudo kubeadm upgrade apply v1.32.x\r\n# worker node\uC77C \uB54C (\uBC84\uC804\uC744 \uC4F8 \uD544\uC694 \uC5C6\uC74C)\r\nsudo kubeadm upgrade node\r\n\r\n\r\n# exit from node\r\nexit\r\n\r\n# in local\r\n# replace <node-to-drain> with the name of your node you are draining\r\n# you can drain in advance before you process to upgrade above\r\nkubectl drain <node-to-upgrade> --ignore-daemonsets\r\n\r\n# ssh to node upgrade back\r\nssh <node-to-upgrade>\r\n\r\n# replace x in 1.32.x-* with the latest patch version\r\nsudo apt-mark unhold kubelet kubectl && \\\r\nsudo apt-get update && sudo apt-get install -y kubelet='1.32.x-*' kubectl='1.32.x-*' && \\\r\nsudo apt-mark hold kubelet kubectl\r\n\r\nsudo systemctl daemon-reload\r\nsudo systemctl restart kubelet\r\n\r\n# exit from node\r\nexit\r\n\r\n# replace <node-to-uncordon> with the name of your node\r\nkubectl uncordon <node-to-upgrade>\n"})})]})}function c(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},255511:function(e,n,r){r.d(n,{R:()=>s,x:()=>d});var t=r(596363);let o={},a=t.createContext(o);function s(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);