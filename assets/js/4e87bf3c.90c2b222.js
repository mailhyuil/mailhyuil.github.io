"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["81980"],{762996:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>i,toc:()=>l,default:()=>p,metadata:()=>t,assets:()=>a,contentTitle:()=>c});var t=JSON.parse('{"id":"nestjs/nest advanced SSE - Server Sent Event","title":"nest server sent event","description":"sse \uD578\uB4E4\uB7EC\uB294 \uC811\uC18D\uD55C \uBAA8\uB450\uC5D0\uAC8C \uC601\uD5A5\uC744 \uBBF8\uCE5C\uB2E4","source":"@site/docs/nestjs/nest advanced SSE - Server Sent Event.md","sourceDirName":"nestjs","slug":"/nestjs/nest advanced SSE - Server Sent Event","permalink":"/docs/nestjs/nest advanced SSE - Server Sent Event","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest advanced HMR (Hot reload)","permalink":"/docs/nestjs/nest advanced HMR - Hot Reload"},"next":{"title":"nest advanced SSE Delta Encoding","permalink":"/docs/nestjs/nest advanced SSE Delta Encoding"}}'),s=r(447259),o=r(255511);let i={},c="nest server sent event",a={},l=[{value:"controller",id:"controller",level:2},{value:"service",id:"service",level:2},{value:"client",id:"client",level:2}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"nest-server-sent-event",children:"nest server sent event"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"sse \uD578\uB4E4\uB7EC\uB294 \uC811\uC18D\uD55C \uBAA8\uB450\uC5D0\uAC8C \uC601\uD5A5\uC744 \uBBF8\uCE5C\uB2E4"}),"\n",(0,s.jsx)(n.p,{children:"interval\uB85C \uB370\uC774\uD130\uB97C \uBCF4\uB0B4\uBA74 \uC811\uC18D\uD55C \uBAA8\uB4E0 \uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uAC8C \uBCF4\uB0C4"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"client\uC5D0\uC11C EventSource\uB97C 5\uAC1C \uC0AC\uC6A9\uD558\uB2C8 \uC571\uC774 \uBA48\uCDA4 (\uCD5C\uC18C\uD55C\uC73C\uB85C \uC0AC\uC6A9)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\uBE0C\uB77C\uC6B0\uC800\uB294 1\uBD84 \uC774\uC0C1 \uB370\uC774\uD130\uB97C \uBC1B\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uC790\uB3D9\uC73C\uB85C \uC5F0\uACB0\uC744 \uB04A\uB294\uB2E4"}),"\n",(0,s.jsx)(n.p,{children:"interval\uB85C \uB370\uC774\uD130\uB97C \uACC4\uC18D \uBCF4\uB0B4\uC8FC\uBA74 \uD574\uACB0"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"server\uB294 MessageEvent interface\uB97C \uBC18\uD658\uD574\uC57C \uD55C\uB2E4. (data, type, lastEventId, origin, ports)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"controller",children:"controller"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { Body, Controller, Param, Post, Res, Sse } from "@nestjs/common";\r\nimport { ApiTags } from "@nestjs/swagger";\r\nimport { Response } from "express";\r\nimport { interval } from "rxjs";\r\nimport { SseService } from "./sse.service";\r\n\r\n@ApiTags("Sse")\r\n@Controller({ path: "sse", version: "1" })\r\nexport class SseController {\r\n  constructor(private readonly sseService: SseService) {}\r\n\r\n  @Post("message")\r\n  async message(@Body() body: { id: string; message: string }) {\r\n    await this.sseService.message(body);\r\n  }\r\n\r\n  @Sse(":id")\r\n  async connect(@Param("id") id: string, @Res({ passthrough: true }) res: Response) {\r\n    const subject$ = this.sseService.create(id);\r\n\r\n    // keep-alive\r\n    const subscription = interval(1000 * 60 * 30).subscribe(() => {\r\n      subject$.next({ type: "keep-alive", data: "keep-alive" } as MessageEvent);\r\n    });\r\n\r\n    res.on("close", () => {\r\n      this.sseService.deleteConnection(id);\r\n      subject$.complete();\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    return subject$.asObservable();\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"service",children:"service"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { Injectable } from "@nestjs/common";\r\nimport { Subject } from "rxjs";\r\n\r\n@Injectable()\r\nexport class SseService implements OnModuleDestroy {\r\n  connections = new Map<string, Subject<MessageEvent<{ chunk: string }>>>();\r\n\r\n  onModuleDestroy() {\r\n    for (const subject$ of this.connections.values()) {\r\n      subject$.complete();\r\n    }\r\n  }\r\n\r\n  create(id: string) {\r\n    if (!this.connections.has(id)) {\r\n      this.connections.set(id, new Subject<MessageEvent<{ chunk: string }>>());\r\n    }\r\n    const subject$ = this.connections.get(id);\r\n\r\n    return subject$;\r\n  }\r\n\r\n  deleteConnection(id: string) {\r\n    this.connections.delete(id);\r\n  }\r\n\r\n  async message(data: { id: string; message: string }) {\r\n    const { id, message } = data;\r\n\r\n    const subject$ = this.create(id);\r\n\r\n    subject$.next({\r\n      data: { chunk: `received message : ${message}` },\r\n    } as MessageEvent<{ chunk: string }>);\r\n\r\n    subject$.next({ type: "end", data: "end" } as MessageEvent);\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"client",children:"client"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { HttpClient } from "@angular/common/http";\r\nimport { Component, inject, signal } from "@angular/core";\r\nimport { takeUntilDestroyed } from "@angular/core/rxjs-interop";\r\nimport { fromEvent } from "rxjs";\r\n\r\n@Component({\r\n  selector: "app-greeting",\r\n  templateUrl: "./greeting.component.html",\r\n  imports: [],\r\n  standalone: true,\r\n})\r\nexport class GreetingComponent {\r\n  http = inject(HttpClient);\r\n  content = signal("");\r\n  eventSource?: EventSource;\r\n  id = Math.random().toString(36).substring(7);\r\n\r\n  constructor() {\r\n    if (!this.eventSource) {\r\n      this.eventSource = new EventSource(`http://localhost:3000/api/v1/sse/${this.id}`, {\r\n        withCredentials: false,\r\n      });\r\n    }\r\n    fromEvent(this.eventSource, "open")\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(() => {\r\n        console.log("connected");\r\n      });\r\n    fromEvent(this.eventSource, "error")\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(error => {\r\n        console.error(error);\r\n      });\r\n    fromEvent<MessageEvent<string>>(this.eventSource, "message")\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(({ data }) => {\r\n        const { chunk } = JSON.parse(data);\r\n        this.content.update(prev => prev + chunk);\r\n      });\r\n    fromEvent<MessageEvent<string>>(this.eventSource, "end")\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(({ data }) => {\r\n        // end \uCC98\uB9AC\r\n      });\r\n  }\r\n\r\n  onClick() {\r\n    this.http\r\n      .post(`http://localhost:3000/api/v1/sse/message`, {\r\n        id: this.id,\r\n        message: "Hello, World!",\r\n      })\r\n      .subscribe();\r\n  }\r\n\r\n  onDestroy() {\r\n    this.eventSource?.close();\r\n    this.eventSource = undefined;\r\n  }\r\n}\n'})})]})}function p(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},255511:function(e,n,r){r.d(n,{R:()=>i,x:()=>c});var t=r(596363);let s={},o=t.createContext(s);function i(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);