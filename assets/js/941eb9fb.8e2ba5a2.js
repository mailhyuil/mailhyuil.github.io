"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["2014"],{976980:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>a,toc:()=>c,default:()=>m,metadata:()=>s,assets:()=>l,contentTitle:()=>i});var s=JSON.parse('{"id":"nestjs/nest file upload Image - aws s3","title":"nest file upload Image","description":"prisma","source":"@site/docs/nestjs/nest file upload Image - aws s3.md","sourceDirName":"nestjs","slug":"/nestjs/nest file upload Image - aws s3","permalink":"/docs/nestjs/nest file upload Image - aws s3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nest file upload Attachment","permalink":"/docs/nestjs/nest file upload Attachment"},"next":{"title":"nest multer-s3","permalink":"/docs/nestjs/nest file upload multer-s3"}}'),t=n(447259),o=n(255511);let a={},i="nest file upload Image",l={},c=[{value:"prisma",id:"prisma",level:2},{value:"aws-s3.module.ts",id:"aws-s3modulets",level:2},{value:"aws-s3.service.ts",id:"aws-s3servicets",level:2},{value:"aws-s3-upload.pipe.ts",id:"aws-s3-uploadpipets",level:2}];function d(e){let r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"nest-file-upload-image",children:"nest file upload Image"})}),"\n",(0,t.jsx)(r.h2,{id:"prisma",children:"prisma"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-prisma",children:'model Image {\r\n    id    String      @id @default(cuid())\r\n    url   String\r\n    createdAt DateTime @default(now()) @map("created_at")\r\n    @@map("images")\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"aws-s3modulets",children:"aws-s3.module.ts"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { Module } from "@nestjs/common";\r\nimport { AwsS3Service } from "./aws-s3.service";\r\n\r\n@Module({\r\n  imports: [],\r\n  controllers: [],\r\n  providers: [AwsS3Service],\r\n  exports: [AwsS3Service],\r\n})\r\nexport class AwsS3Module {}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"aws-s3servicets",children:"aws-s3.service.ts"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { DeleteObjectCommand, PutObjectCommand, S3Client } from "@aws-sdk/client-s3";\r\nimport { Injectable, InternalServerErrorException, Logger } from "@nestjs/common";\r\nimport { plainToInstance } from "class-transformer";\r\nimport { MemoryStoredFile } from "nestjs-form-data";\r\nimport path from "path";\r\nimport { AwsS3DTO } from "./aws-s3.dto";\r\n\r\n@Injectable()\r\nexport class AwsS3Service {\r\n  logger = new Logger(AwsS3Service.name);\r\n  s3: S3Client;\r\n\r\n  constructor() {\r\n    this.s3 = new S3Client({\r\n      region: process.env["AWS_REGION"],\r\n      credentials: {\r\n        accessKeyId: process.env["AWS_ACCESS_KEY"],\r\n        secretAccessKey: process.env["AWS_SECRET_ACCESS_KEY"],\r\n      },\r\n    });\r\n  }\r\n\r\n  async upload(file: MemoryStoredFile) {\r\n    const ext = path.extname(file.originalName);\r\n    const basename = path.basename(file.originalName, ext);\r\n    const key = `original/${basename}_${Date.now()}${ext}`;\r\n\r\n    const command = new PutObjectCommand({\r\n      Bucket: process.env["AWS_S3_BUCKET_NAME"],\r\n      Key: key,\r\n      Body: file.buffer,\r\n    });\r\n    await this.s3.send(command).catch(error => {\r\n      this.logger.error(error);\r\n      throw new InternalServerErrorException("Failed to upload file");\r\n    });\r\n    return plainToInstance(AwsS3DTO, {\r\n      key,\r\n      url: process.env["AWS_CLOUDFRONT_DOMAIN"] + key,\r\n    });\r\n  }\r\n\r\n  async delete(key: string) {\r\n    const command = new DeleteObjectCommand({\r\n      Bucket: process.env["AWS_S3_BUCKET_NAME"],\r\n      Key: key,\r\n    });\r\n    return await this.s3.send(command);\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"aws-s3-uploadpipets",children:"aws-s3-upload.pipe.ts"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { Injectable, PipeTransform } from "@nestjs/common";\r\nimport { MemoryStoredFile } from "nestjs-form-data";\r\nimport { AwsS3DTO } from "./aws-s3.dto";\r\nimport { AwsS3Service } from "./aws-s3.service";\r\n\r\nexport const AwsS3UploadPipeFn = (fieldName: string) => {\r\n  @Injectable()\r\n  class AwsS3UploadPipe implements PipeTransform<unknown, Promise<unknown>> {\r\n    constructor(private readonly awsS3Service: AwsS3Service) {}\r\n    async transform(body: unknown): Promise<unknown> {\r\n      const files = body[fieldName] as MemoryStoredFile[] | MemoryStoredFile;\r\n      if (!files) return body;\r\n\r\n      if (!Array.isArray(files)) {\r\n        body[fieldName] = await this.awsS3Service.upload(files);\r\n        return body;\r\n      }\r\n\r\n      const fileDtos: AwsS3DTO[] = await Promise.all(\r\n        files.map(async file => {\r\n          return this.awsS3Service.upload(file);\r\n        }),\r\n      );\r\n\r\n      body[fieldName] = fileDtos;\r\n      return body;\r\n    }\r\n  }\r\n  return AwsS3UploadPipe;\r\n};\n'})})]})}function m(e={}){let{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},255511:function(e,r,n){n.d(r,{R:()=>a,x:()=>i});var s=n(596363);let t={},o=s.createContext(t);function a(e){let r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);