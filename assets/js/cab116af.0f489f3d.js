"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[905020],{529087:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>i});var r=t(596363);const a={},s=r.createContext(a);function l(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),r.createElement(s.Provider,{value:e},n.children)}},609884:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"angular/angular state management ngxs store","title":"angular @ngxs/store","description":"Action, Selector, State","source":"@site/docs/angular/angular state management ngxs store.md","sourceDirName":"angular","slug":"/angular/angular state management ngxs store","permalink":"/docs/angular/angular state management ngxs store","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular HMR","permalink":"/docs/angular/angular state management ngxs HMR"},"next":{"title":"angular state management rxjs normalize","permalink":"/docs/angular/angular state management rxjs normalize"}}');var a=t(447259),s=t(529087);const l={},i="angular @ngxs/store",c={},o=[{value:"install",id:"install",level:2},{value:"main.ts",id:"maints",level:2},{value:"State",id:"state",level:2},{value:"Action",id:"action",level:2},{value:"Dispatching Action",id:"dispatching-action",level:3},{value:"Store",id:"store",level:2},{value:"store/auth.store.ts",id:"storeauthstorets",level:2},{value:"auth.guard.ts",id:"authguardts",level:2}];function d(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"angular-ngxsstore",children:"angular @ngxs/store"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Action, Selector, State"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Selector = get"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Action = set"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"install",children:"install"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm i @ngxs/store\n"})}),"\n",(0,a.jsx)(e.h2,{id:"maints",children:"main.ts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:"importProvidersFrom(NgxsModule.forRoot([AdminState])),\n"})}),"\n",(0,a.jsx)(e.h2,{id:"state",children:"State"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\uc0c1\ud0dc\ub97c \uac00\uc9c4 \ud074\ub798\uc2a4"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'@State<AdminStateModel>({\r\n  name: "admin",\r\n  defaults: {\r\n    admin: null,\r\n  },\r\n})\r\n@Injectable()\r\nexport class AdminState {}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"action",children:"Action"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud558\ub294 \ud074\ub798\uc2a4"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'export class AddAnimal {\r\n  static readonly type = "[Zoo] Add Animal";\r\n  constructor(public name: string) {}\r\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"dispatching-action",children:"Dispatching Action"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Action class\ub97c dispatch => @Action()\uc774 \ud638\ucd9c\ub428"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"@Select()\uac00 \ud638\ucd9c\ub418\uba74 => @Selector()\uac00 \ud638\ucd9c\ub428"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:"addAnimal(name: string) {\r\n  this.store.dispatch(new AddAnimal(name));\r\n}\r\n\r\n@Action(SetAuth) // dispatch\uac00 \uc218\ud589\ub418\uba74 \uc774 Action \ud578\ub4e4\ub7ec\uac00 \ud638\ucd9c\ub41c\ub2e4.\r\nsetAuth(ctx: StateContext<AuthStateModel>, action: SetAuth) {\r\n  ctx.setState({\r\n    auth: action.auth,\r\n  });\r\n}\r\n\r\n@Selector // @Select()\uac00 \ud638\ucd9c\ub418\uba74 \ud638\ucd9c\ub428\n"})}),"\n",(0,a.jsx)(e.h2,{id:"store",children:"Store"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:"@Select((state)=>state.auth)\r\n@Select(AuthState)\r\n@Select(AuthState.auth)\r\n\r\nthis.store.selectSnapshot(state=>state.auth)\r\nthis.store.selectOnce(state=>state.auth)\r\nthis.store.select(state=>state.auth)\r\n\r\nthis.store.subscribe()\n"})}),"\n",(0,a.jsx)(e.h2,{id:"storeauthstorets",children:"store/auth.store.ts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'export type AdminStateModel = {\r\n  admin: IAdminDTO | null;\r\n};\r\n\r\nexport class SetAdmin {\r\n  static readonly type = "[Admin] Set Admin";\r\n  constructor(public admin: IAdminDTO) {}\r\n}\r\n\r\n@State<AdminStateModel>({\r\n  name: "admin",\r\n  defaults: {\r\n    admin: null,\r\n  },\r\n})\r\n@Injectable()\r\nexport class AdminState {\r\n  @Selector()\r\n  static getAdmin(state: AdminStateModel): IAdminDTO | null {\r\n    return state.admin;\r\n  }\r\n\r\n  @Action(SetAdmin)\r\n  setAdmin(ctx: StateContext<AdminStateModel>, action: SetAdmin) {\r\n    ctx.setState({ admin: action.admin });\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"authguardts",children:"auth.guard.ts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'export const AuthGuard = (next: ActivatedRouteSnapshot): boolean => {\r\n  const store = inject(Store);\r\n  const router = inject(Router);\r\n  const toast = inject(ToastService);\r\n  const httpService = inject(HttpService);\r\n\r\n  return true;\r\n\r\n  const accessToken = localStorage.getItem("accessToken");\r\n  if (!accessToken) {\r\n    router.navigateByUrl("/login", { replaceUrl: true });\r\n    return false;\r\n  }\r\n\r\n  store\r\n    .selectOnce<AdminStateModel>((state) => state.admin)\r\n    .subscribe({\r\n      next: (state) => {\r\n        const loginedAdmin = state.admin;\r\n        if (!loginedAdmin) {\r\n          router.navigateByUrl("/login", { replaceUrl: true });\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      },\r\n    });\r\n\r\n  return false;\r\n};\n'})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}}}]);