"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[490127],{529087:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>a});var o=t(596363);const r={},s=o.createContext(r);function c(n){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),o.createElement(s.Provider,{value:e},n.children)}},922456:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"nodejs/nodejs xstate - state machine","title":"node xstate","description":"state machine\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac","source":"@site/docs/nodejs/nodejs xstate - state machine.md","sourceDirName":"nodejs","slug":"/nodejs/nodejs xstate - state machine","permalink":"/docs/nodejs/nodejs xstate - state machine","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"xlxs","permalink":"/docs/nodejs/nodejs xlsx \uc5d1\uc140 - excel"},"next":{"title":"npm audit","permalink":"/docs/nodejs/npm audit vulnerability"}}');var r=t(447259),s=t(529087);const c={},a="node xstate",i={},d=[];function u(n){const e={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"node-xstate",children:"node xstate"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"state machine\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:'import { assign, createActor, createMachine } from "xstate";\r\n\r\nconst countMachine = createMachine({\r\n  context: {\r\n    count: 0,\r\n  },\r\n  on: {\r\n    INC: {\r\n      actions: assign({\r\n        count: ({ context }) => context.count + 1,\r\n      }),\r\n    },\r\n    DEC: {\r\n      actions: assign({\r\n        count: ({ context }) => context.count - 1,\r\n      }),\r\n    },\r\n    SET: {\r\n      actions: assign({\r\n        count: ({ event }) => event.value,\r\n      }),\r\n    },\r\n  },\r\n});\r\n\r\nconst countActor = createActor(countMachine).start();\r\n\r\ncountActor.subscribe((state) => {\r\n  console.log(state.context.count);\r\n});\r\n\r\ncountActor.send({ type: "INC" });\r\n// logs 1\r\ncountActor.send({ type: "DEC" });\r\n// logs 0\r\ncountActor.send({ type: "SET", value: 10 });\r\n// logs 10\n'})})]})}function l(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}}}]);