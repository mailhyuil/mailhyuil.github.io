"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[643169],{529087:(n,r,e)=>{e.d(r,{R:()=>l,x:()=>s});var t=e(596363);const a={},o=t.createContext(a);function l(n){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function s(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),t.createElement(o.Provider,{value:r},n.children)}},840769:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"angular/angular table tanstack angular-table","title":"angular tanstack angular-table","description":"install","source":"@site/docs/angular/angular table tanstack angular-table.md","sourceDirName":"angular","slug":"/angular/angular table tanstack angular-table","permalink":"/docs/angular/angular table tanstack angular-table","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular ag-grid","permalink":"/docs/angular/angular table ag-grid"},"next":{"title":"tailwindcss","permalink":"/docs/angular/angular tailwindcss"}}');var a=e(447259),o=e(529087);const l={},s="angular tanstack angular-table",d={},c=[{value:"install",id:"install",level:2},{value:"data-grid.component.ts",id:"data-gridcomponentts",level:2},{value:"data-grid.component.html",id:"data-gridcomponenthtml",level:2}];function i(n){const r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"angular-tanstack-angular-table",children:"angular tanstack angular-table"})}),"\n",(0,a.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sh",children:"npm i @tanstack/angular-table\n"})}),"\n",(0,a.jsx)(r.h2,{id:"data-gridcomponentts",children:"data-grid.component.ts"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { ChangeDetectionStrategy, Component, input } from "@angular/core";\r\nimport { ColumnDef, createAngularTable, FlexRenderDirective, getCoreRowModel } from "@tanstack/angular-table";\r\n\r\n@Component({\r\n  selector: "app-data-grid",\r\n  templateUrl: "./data-grid.component.html",\r\n  styleUrls: ["./data-grid.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule, FlexRenderDirective],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [],\r\n})\r\nexport default class DataGridComponent<T> {\r\n  data = input<T[]>([]);\r\n  columnDefs = input<ColumnDef<T>[]>([]);\r\n  table = createAngularTable(() => ({\r\n    data: this.data(),\r\n    columns: this.columnDefs(),\r\n    getCoreRowModel: getCoreRowModel(),\r\n  }));\r\n}\n'})}),"\n",(0,a.jsx)(r.h2,{id:"data-gridcomponenthtml",children:"data-grid.component.html"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-html",children:'<div class="p-2">\r\n  <table class="w-full overflow-x-auto">\r\n    <thead class="border-b">\r\n      @for (headerGroup of table.getHeaderGroups(); track headerGroup.id) {\r\n      <tr>\r\n        @for (header of headerGroup.headers; track header.id) { @if (!header.isPlaceholder) {\r\n        <th class="p-1 text-start">\r\n          <ng-container\r\n            *flexRender="\r\n                    header.column.columnDef.header;\r\n                    props: header.getContext();\r\n                    let header\r\n                  "\r\n          >\r\n            <div [innerHTML]="header"></div>\r\n          </ng-container>\r\n        </th>\r\n        } }\r\n      </tr>\r\n      }\r\n    </thead>\r\n    <tbody>\r\n      @for (row of table.getRowModel().rows; track row.id) {\r\n      <tr class="border-b" [ngClass]="{ \'bg-gray-50\': $odd }">\r\n        @for (cell of row.getVisibleCells(); track cell.id) {\r\n        <td class="p-1">\r\n          <ng-container\r\n            *flexRender="\r\n                  cell.column.columnDef.cell;\r\n                  props: cell.getContext();\r\n                  let cell\r\n                "\r\n          >\r\n            <div [innerHTML]="cell"></div>\r\n          </ng-container>\r\n        </td>\r\n        }\r\n      </tr>\r\n      }\r\n    </tbody>\r\n    <tfoot>\r\n      @for (footerGroup of table.getFooterGroups(); track footerGroup.id) {\r\n      <tr>\r\n        @for (footer of footerGroup.headers; track footer.id) {\r\n        <th>\r\n          <ng-container\r\n            *flexRender="\r\n                  footer.column.columnDef.footer;\r\n                  props: footer.getContext();\r\n                  let footer\r\n                "\r\n          >\r\n            {{ footer }}\r\n          </ng-container>\r\n        </th>\r\n        }\r\n      </tr>\r\n      }\r\n    </tfoot>\r\n  </table>\r\n</div>\n'})})]})}function u(n={}){const{wrapper:r}={...(0,o.R)(),...n.components};return r?(0,a.jsx)(r,{...n,children:(0,a.jsx)(i,{...n})}):i(n)}}}]);