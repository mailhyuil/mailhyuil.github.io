"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[465466],{35391:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"react & nextjs/next guard","title":"next guard auth-guard","description":"react\uc5d0\uc11c\ub294 \ucef4\ud3ec\ub10c\ud2b8\ub85c \uac10\uc2f8\ub294 \ubc29\uc2dd\uc73c\ub85c decorator\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4.","source":"@site/docs/react & nextjs/next guard.md","sourceDirName":"react & nextjs","slug":"/react & nextjs/next guard","permalink":"/docs/react & nextjs/next guard","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"next routing","permalink":"/docs/react & nextjs/next component Script"},"next":{"title":"next middleware api-interceptor","permalink":"/docs/react & nextjs/next http interceptor"}}');var a=t(447259),s=t(529087);const o={},u="next guard auth-guard",d={},i=[{value:"AuthGuard.tsx",id:"authguardtsx",level:2},{value:"usage",id:"usage",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"next-guard-auth-guard",children:"next guard auth-guard"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"react\uc5d0\uc11c\ub294 \ucef4\ud3ec\ub10c\ud2b8\ub85c \uac10\uc2f8\ub294 \ubc29\uc2dd\uc73c\ub85c decorator\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"authguardtsx",children:"AuthGuard.tsx"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { useRouter } from "next/router";\r\n\r\nexport const AuthGuard = props => {\r\n  const router = useRouter();\r\n  const isJWTValid = useIsJWTValid(); // you need to implement this. In this example, undefined means things are still loading, null means user is not signed in, anything truthy means they\'re signed in\r\n\r\n  if (typeof window !== "undefined" && user === null) router.push("/");\r\n\r\n  if (!user) return <Loading />; // a loading component that prevents the page from rendering\r\n\r\n  return props.children;\r\n};\n'})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const MyApp = ({ Component, pageProps }) => {\r\n  return (\r\n    <AuthGuard>\r\n      <Component {...pageProps} />\r\n    </AuthGuard>\r\n  );\r\n};\r\n\r\nexport default MyApp;\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},529087:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>u});var r=t(596363);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);