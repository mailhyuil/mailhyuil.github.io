"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[116970],{529087:(t,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var e=r(596363);const s={},o=e.createContext(s);function c(t){const n=e.useContext(o);return e.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function i(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:c(t.components),e.createElement(o.Provider,{value:n},t.children)}},867548:(t,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>e,toc:()=>l});const e=JSON.parse('{"id":"build/compile tsc AST ts-patch & ttypescript","title":"tsc ttypescript (transformer typescript)","description":"typescript\ub294 \uc544\uc9c1 tsconfig.json\uc5d0\uc11c custom transformers\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","source":"@site/docs/build/compile tsc AST ts-patch & ttypescript.md","sourceDirName":"build","slug":"/build/compile tsc AST ts-patch & ttypescript","permalink":"/docs/build/compile tsc AST ts-patch & ttypescript","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tsc AST ts-morph","permalink":"/docs/build/compile tsc AST ts-morph"},"next":{"title":"tsc AST ts-query","permalink":"/docs/build/compile tsc AST ts-query"}}');var s=r(447259),o=r(529087);const c={},i="tsc ttypescript (transformer typescript)",p={},l=[{value:"install",id:"install",level:2},{value:"tsconfig.json",id:"tsconfigjson",level:2},{value:"config",id:"config",level:2}];function a(t){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tsc-ttypescript-transformer-typescript",children:"tsc ttypescript (transformer typescript)"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"typescript\ub294 \uc544\uc9c1 tsconfig.json\uc5d0\uc11c custom transformers\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"ttypescript\ub97c \uc0ac\uc6a9\ud558\uba74 compile module\uc744 \ud328\uce6d\ud558\uc5ec \uc774\ub97c \uac00\ub2a5\ucf00\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"ttypescript\ub294 \uc720\uc9c0\ubcf4\uc218\uac00 \uc911\ub2e8\ub418\uc5b4 \ud604\uc7ac\ub294 ts-patch\ub97c \uc0ac\uc6a9\ud558\ub294\uac8c \uc88b\ub2e4."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# new!\r\nnpm i -g ts-patch # \uae00\ub85c\ubc8c\ub85c \uc124\uce58\r\nnpm i -D ts-node # ts-patch\ub294 ts-node\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc124\uce58\ud574\uc57c \ud568\r\nnpm i -D typescript # typescript \uc124\uce58\r\nts-patch install # typescript\uc758 tsc\ub97c ts-patch\ub85c \ud328\uce58 # npm i \ub97c \ud560\ub54c\ub9c8\ub2e4 \ub2e4\uc2dc \ud574\uc918\uc57c\ud568 prepare script\uc5d0 \ucd94\uac00\ud558\uba74 npm i \ud560\ub54c\ub9c8\ub2e4 \uc790\ub3d9\uc73c\ub85c \uc2e4\ud589\ud574\uc90c\r\nts-patch check # \ud328\uce58\uac00 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778\r\ntspc # tsc\ub97c \ud328\uce58 \uc548\ud560\uac70\ub77c\uba74 tsc \ub300\uc2e0 tspc\ub97c \uc0ac\uc6a9\ud574\ub3c4 \ub41c\ub2e4.\r\n\r\n# deprecated\r\nnpm i -D ttypescript\r\nttsc\n"})}),"\n",(0,s.jsx)(n.h2,{id:"tsconfigjson",children:"tsconfig.json"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "compilerOptions": {\r\n    "plugins": [{ "transform": "./my-transformer.ts" }]\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"config",children:"config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'export interface PluginConfig {\r\n  /**\r\n   * Path to transformer or transformer module name\r\n   */\r\n  transform?: string;\r\n\r\n  /**\r\n   * The optional name of the exported transform plugin in the transform module.\r\n   */\r\n  import?: string;\r\n\r\n  /**\r\n   * Plugin entry point format type, default is program\r\n   */\r\n  type?: "program" | "config" | "checker" | "raw" | "compilerOptions";\r\n\r\n  /**\r\n   * Should transformer applied after all ones\r\n   */\r\n  after?: boolean;\r\n\r\n  /**\r\n   * Should transformer applied for d.ts files, supports from TS2.9\r\n   */\r\n  afterDeclarations?: boolean;\r\n  /**\r\n   * any other properties provided to the transformer as config argument\r\n   * */\r\n  [options: string]: any;\r\n}\n'})})]})}function d(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(a,{...t})}):a(t)}}}]);