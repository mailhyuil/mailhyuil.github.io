"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[725330],{389444:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"go/go package postgres - pgx","title":"go package pgx","description":"install","source":"@site/docs/go/go package postgres - pgx.md","sourceDirName":"go","slug":"/go/go package postgres - pgx","permalink":"/docs/go/go package postgres - pgx","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"go package os","permalink":"/docs/go/go package os"},"next":{"title":"go package prisma","permalink":"/docs/go/go package prisma"}}');var t=r(447259),o=r(529087);const c={},s="go package pgx",i={},g=[{value:"install",id:"install",level:2},{value:"usage",id:"usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"go-package-pgx",children:"go package pgx"})}),"\n",(0,t.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"go get github.com/jackc/pgx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport (\r\n    "context"\r\n    "fmt"\r\n    "log"\r\n    "os"\r\n    "time"\r\n\r\n    "github.com/jackc/pgx/v4"\r\n)\r\n\r\nfunc main() {\r\n    conn, err := pgx.Connect(context.Background(), os.Getenv("DATABASE_URL"))\r\n    if err != nil {\r\n        log.Fatalf("Unable to connect to database: %v\\n", err)\r\n    }\r\n    defer conn.Close(context.Background())\r\n\r\n    var greeting string\r\n    err = conn.QueryRow(context.Background(), "select \'hello world\'").Scan(&greeting)\r\n    if err != nil {\r\n        log.Fatalf("QueryRow failed: %v\\n", err)\r\n    }\r\n    fmt.Println(greeting)\r\n\r\n    rows, err := conn.Query(context.Background(), "select * from users")\r\n    if err != nil {\r\n        log.Fatalf("Query failed: %v\\n", err)\r\n    }\r\n    defer rows.Close()\r\n\r\n    for rows.Next() {\r\n        var id int\r\n        var name string\r\n        var email string\r\n        var created_at time.Time\r\n        err = rows.Scan(&id, &name, &email, &created_at)\r\n        if err != nil {\r\n            log.Fatalf("Scan failed: %v\\n", err)\r\n        }\r\n        fmt.Println(id, name, email, created_at)\r\n    }\r\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},529087:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var a=r(596363);const t={},o=a.createContext(t);function c(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);