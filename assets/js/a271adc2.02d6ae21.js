"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["793136"],{469904:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,toc:()=>c,default:()=>p,metadata:()=>s,assets:()=>o,contentTitle:()=>a});var s=JSON.parse('{"id":"nx/nx jest","title":"nx jest","description":"install","source":"@site/docs/nx/nx jest.md","sourceDirName":"nx","slug":"/nx/nx jest","permalink":"/docs/nx/nx jest","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nx ionic + angular","permalink":"/docs/nx/nx ionic + angular"},"next":{"title":"nx libs","permalink":"/docs/nx/nx libs"}}'),t=r(447259),i=r(255511);let l={},a="nx jest",o={},c=[{value:"install",id:"install",level:2},{value:"apps/server/__test__/services/example.service.spec.ts",id:"appsserver__test__servicesexampleservicespects",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"nx-jest",children:"nx jest"})}),"\n",(0,t.jsx)(n.h2,{id:"install",children:"install"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm install -D @nx/jest\r\nnx g @nx/jest\n"})}),"\n",(0,t.jsx)(n.h2,{id:"appsserver__test__servicesexampleservicespects",children:"apps/server/__test__/services/example.service.spec.ts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { Test, TestingModule } from "@nestjs/testing";\r\nimport { ExampleService } from "../src/app/examples/example.service";\r\nimport { PrismaService } from "../src/prisma/prisma.service";\r\n\r\nconst result = [];\r\n\r\nconst one = result[0];\r\n\r\nconst db = {\r\n  example: {\r\n    findMany: jest.fn().mockResolvedValue(result),\r\n    findUnique: jest.fn().mockResolvedValue(one),\r\n    findUniqueOrThrow: jest.fn().mockResolvedValue(one),\r\n    findFirst: jest.fn().mockResolvedValue(one),\r\n    findFirstOrThrow: jest.fn().mockResolvedValue(one),\r\n    create: jest.fn().mockResolvedValue(one),\r\n    update: jest.fn().mockResolvedValue(one),\r\n    upsert: jest.fn().mockResolvedValue(one),\r\n    delete: jest.fn().mockResolvedValue(one),\r\n  },\r\n};\r\n\r\ndescribe("ExampleService", () => {\r\n  let prisma: PrismaService;\r\n  let service: ExampleService;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [\r\n        ExampleService,\r\n        {\r\n          provide: PrismaService,\r\n          useValue: db,\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    prisma = module.get<PrismaService>(PrismaService);\r\n    service = module.get<ExampleService>(ExampleService);\r\n  });\r\n\r\n  it("should be defined", () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n\r\n  describe("findAll", () => {\r\n    it("should return an array of examples", async () => {\r\n      const examples = await service.findAll();\r\n      expect(examples).toEqual(result);\r\n    });\r\n  });\r\n});\n'})})]})}function p(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},255511:function(e,n,r){r.d(n,{R:()=>l,x:()=>a});var s=r(596363);let t={},i=s.createContext(t);function l(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);