"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[269188],{529087:(n,e,r)=>{r.d(e,{R:()=>a,x:()=>u});var t=r(596363);const s={},i=t.createContext(s);function a(n){const e=t.useContext(i);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function u(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(i.Provider,{value:e},n.children)}},845002:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>u,default:()=>o,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rust/rust base io \ubc31\uc900 \uc785\ucd9c\ub825","title":"\ubc31\uc900 \uc785\ucd9c\ub825","description":"\ud55c \uc904 \uc785\ub825","source":"@site/docs/rust/rust base io \ubc31\uc900 \uc785\ucd9c\ub825.md","sourceDirName":"rust","slug":"/rust/rust base io \ubc31\uc900 \uc785\ucd9c\ub825","permalink":"/docs/rust/rust base io \ubc31\uc900 \uc785\ucd9c\ub825","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"get started","permalink":"/docs/rust/rust base install"},"next":{"title":"rust IO","permalink":"/docs/rust/rust base io"}}');var s=r(447259),i=r(529087);const a={},u="\ubc31\uc900 \uc785\ucd9c\ub825",l={},d=[{value:"\ud55c \uc904 \uc785\ub825",id:"\ud55c-\uc904-\uc785\ub825",level:2},{value:"\uc22b\uc790 \uc785\ub825\ubc1b\uae30",id:"\uc22b\uc790-\uc785\ub825\ubc1b\uae30",level:2},{value:"\uc5ec\ub7ec \uc904 \uc785\ub825",id:"\uc5ec\ub7ec-\uc904-\uc785\ub825",level:2},{value:"\uc22b\uc790 \uc5ec\ub7ec\uac1c \uc785\ub825\ubc1b\uae30",id:"\uc22b\uc790-\uc5ec\ub7ec\uac1c-\uc785\ub825\ubc1b\uae30",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\ubc31\uc900-\uc785\ucd9c\ub825",children:"\ubc31\uc900 \uc785\ucd9c\ub825"})}),"\n",(0,s.jsx)(e.h2,{id:"\ud55c-\uc904-\uc785\ub825",children:"\ud55c \uc904 \uc785\ub825"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:'use std::io::stdin;\r\n\r\nfn main() {\r\n\tlet mut buffer = String::new();\r\n    stdin().read_line(&mut buffer).unwrap();\r\n\r\n    println!("{}",buffer);\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\uc22b\uc790-\uc785\ub825\ubc1b\uae30",children:"\uc22b\uc790 \uc785\ub825\ubc1b\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:'use std::io::stdin;\r\n\r\nfn main() {\r\n    let mut buffer_a = String::new();\r\n    let mut buffer_b = String::new();\r\n\r\n    stdin().read_line(&mut buffer_a).unwrap();\r\n    stdin().read_line(&mut buffer_b).unwrap();\r\n\r\n    let A:i32 = buffer_a.trim().parse::<i32>().unwrap();\r\n    let B:i32 = buffer_b.trim().parse::<i32>().unwrap();\r\n\r\n    println!("{}", A+B)\r\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:'use std::io;\r\n\r\nfn main() {\r\n    let mut s = String::new();\r\n    io::stdin().read_line(&mut s).expect("-1");\r\n    let s1:Vec<usize> = s.split_whitespace().map(|c| c.trim().parse().expect("-1")).collect::<Vec<_>>();\r\n    println!("{}",s1[0] + s1[1]);\r\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:'fn main(){\r\n    let mut buffer: String = String::new();\r\n    std::io::stdin().read_line(&mut buffer).unwrap();\r\n\r\n    let result = buffer.trim()\r\n        .split_whitespace()\r\n        .map(|x| x.parse::<i32>().unwrap())\r\n        .sum::<i32>();\r\n\r\n    println!("{}",result);\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\uc5ec\ub7ec-\uc904-\uc785\ub825",children:"\uc5ec\ub7ec \uc904 \uc785\ub825"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:"use std::io::stdin;\r\n\r\nfn main() {\r\n\tlet mut buffer = String::new();\r\n    stdin().read_line(&mut buffer).unwrap();\r\n\r\n    let n = buffer.trim().parse::<usize>().unwrap();\r\n\r\n    for _ in 0..n {\r\n    \tbuffer.clear();\r\n        stdin().read_line(&mut buffer).unwrap();\r\n\r\n        ...\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\uc22b\uc790-\uc5ec\ub7ec\uac1c-\uc785\ub825\ubc1b\uae30",children:"\uc22b\uc790 \uc5ec\ub7ec\uac1c \uc785\ub825\ubc1b\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rs",children:"use std::io::{stdin, Read}\r\n\r\nfn main() {\r\n\tlet mut input = String::new();\r\n    stdin().read_to_string(&mut input).unwrap();\r\n    let mut input = input.split_ascii_whitespace().flat_map(str::parse::<usize>);\r\n\r\n    let n = input.next().unwrap();\r\n}\r\n//    ... \ud544\uc694\ud560 \ub54c \ub9c8\ub2e4 input.next().unwrap() \ud638\ucd9c\n"})})]})}function o(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}}}]);