"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[973618],{529087:(n,r,e)=>{e.d(r,{R:()=>i,x:()=>p});var t=e(596363);const s={},o=t.createContext(s);function i(n){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function p(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(o.Provider,{value:r},n.children)}},816792:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>a,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"nestjs/nest \uc138\ud305 settings","title":"nest \uc138\ud305","description":"install","source":"@site/docs/nestjs/nest \uc138\ud305 settings.md","sourceDirName":"nestjs","slug":"/nestjs/nest \uc138\ud305 settings","permalink":"/docs/nestjs/nest \uc138\ud305 settings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prisma","permalink":"/docs/nestjs/nest \uc138\ud305 settings prisma"},"next":{"title":"nestia createRandom","permalink":"/docs/nestjs/nestia createRandom"}}');var s=e(447259),o=e(529087);const i={},p="nest \uc138\ud305",a={},l=[{value:"install",id:"install",level:2},{value:"main.ts",id:"maints",level:2},{value:"app.module.ts",id:"appmodulets",level:2},{value:"server/open-api/init-openapi.ts",id:"serveropen-apiinit-openapits",level:2}];function m(n){const r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"nest-\uc138\ud305",children:"nest \uc138\ud305"})}),"\n",(0,s.jsx)(r.h2,{id:"install",children:"install"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"################ \ud544\uc218 \ud328\ud0a4\uc9c0 #####################\r\n\r\n# env\r\nnpm i dotenv\r\n# encryption\r\nnpm i bcrypt\r\nnpm i -D @types/bcrypt\r\n# security\r\nnpm i helmet\r\n# response compression\r\nnpm i compression\r\nnpm i -D @types/compression\r\n# validation\r\nnpm i class-validator\r\nnpm i class-transformer\r\nnpm i nestjs-form-data\r\n# logging\r\nnpm i morgan\r\nnpm i -D @types/morgan\r\nnpm i winston\r\nnpm i nest-winston\r\nnpm i winston-daily-rotate-file\r\n# testing\r\nnpm i -D @nestjs/testing\r\nnpm i -D supertest\r\nnpm i -D @types/supertest\r\n# jwt\r\nnpm i @nestjs/jwt\r\n# cookie\r\nnpm i cookie-parser\r\nnpm i -D @types/cookie-parser\r\n# openapi\r\nnpm i @nestjs/swagger\r\nnpm i ng-openapi-gen\r\nnpm i @apidevtools/json-schema-ref-parser\r\n# date\r\nnpm i dayjs\r\n# http\r\nnpm i axios\r\nnpm i @nestjs/axios\r\n# rate limit\r\nnpm i @nestjs/throttler\r\n# server cache\r\nnpm i @nestjs/cache-manager\r\nnpm i cache-manager\r\n# prisma\r\nnpm i -D prisma\r\nnpm i @prisma/client\r\nnpm i prisma-error-enum\r\nnpm i prisma-extension-soft-delete\r\n# event\r\nnpm i @nestjs/event-emitter\r\n# schedule\r\nnpm i @nestjs/schedule\r\n# file upload\r\nnpm i -D @types/multer\r\n# nestjs-cls\r\nnpm i nestjs-cls\r\nnpm i @nestjs-cls/transactional\r\nnpm i @nestjs-cls/transactional-adapter-prisma\r\n# AOP\r\nnpm i @toss/nestjs-aop\r\n\r\n################ \uc120\ud0dd\uc801 \ud328\ud0a4\uc9c0 #####################\r\n\r\n# redis cache\r\nnpm i redis\r\n\r\n# websocket-server\r\nnpm i @nestjs/websockets\r\nnpm i @nestjs/platform-socket.io\r\n# websocket-client\r\nnpm i ngx-socket-io\r\n# npm i socket.io\r\n# npm i socket.io-client\r\n# npm i @types/socket.io\r\n\r\n# message queue\r\nnpm i bull\r\nnpm i @nestjs/bull\r\n\r\n# mongoose\r\nnpm i mongoose\r\nnpm i @nestjs/mongoose\r\n\r\n# drizzle\r\nnpm i drizzle\r\n\r\n# graphql server\r\nnpm i @nestjs/graphql\r\nnpm i @nestjs/apollo\r\nnpm i @apollo/server\r\n# graphql client\r\nnpm i @apollo/client\r\nnpm i apollo-angular\r\n\r\n# image optimize\r\nnpm i sharp\r\nnpm i -D @types/sharp\r\n\r\n# session\r\nnpm i express-session\r\nnpm i -D @types/express-session\r\n\r\n# aws-sdk\r\nnpm i aws-sdk\r\nnpm i @aws-sdk/client-s3\r\nnpm i multer-s3\r\n\r\n# CSRF\r\n# npm i csurf\r\n\r\n# config\r\n# npm i @nestjs/config\r\n\r\n# npm i -D dotenv-cli\n"})}),"\n",(0,s.jsx)(r.h2,{id:"maints",children:"main.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { INestApplication } from "@nestjs/common";\r\nimport { NestFactory } from "@nestjs/core";\r\nimport { AppModule } from "./app/app.module";\r\nimport { winstonLogger, winstonStream } from "./logger/winston.logger";\r\nimport { NestExpressApplication } from "@nestjs/platform-express";\r\nimport cookieParser from "cookie-parser";\r\nimport helmet from "helmet";\r\nimport morgan from "morgan";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestExpressApplication>(AppModule, {\r\n    logger: winstonLogger,\r\n  });\r\n\r\n  /** Logger */\r\n  app.use(\r\n    morgan(NODE_ENV !== "none" ? "combined" : "dev", {\r\n      stream: winstonStream,\r\n      skip: function (req, res) {\r\n        if (NODE_ENV !== "none") {\r\n          return res.statusCode >= 400 && res.statusCode !== 404; // info log\ub97c \ub0a8\uae38\uac70\ub77c\uba74 (\uc5d0\ub7ec\ub97c pipe\uc5d0\uc11c \ucc98\ub9ac \uc2dc \ub85c\uae45\ud558\uc9c0 \uc54a\uc74c (\ub450\ubc88 \ucc0d\ud798))\r\n          return true; // exception log\ub97c http exception filter\uc5d0\uc11c \ub0a8\uae30\uace0 \uc788\uace0 info log\ub97c \ub0a8\uae30\uc9c0 \uc54a\uc744\uac70\ub77c\uba74 true\ub85c \ucc98\ub9ac\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n    }),\r\n  );\r\n  /** Cookie Parser */\r\n  app.use(cookieParser());\r\n  /** Compression */\r\n  /** *\uc8fc\uc758* \uc131\ub2a5 \uba74\uc5d0\uc11c nestjs\ubcf4\ub2e4 nginx\uac19\uc740 reverse proxy\uc5d0\uc11c \uc555\ucd95\ud558\ub294 \ud3b8\uc774 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. */\r\n  // app.use(compression());\r\n  /** Security */\r\n  app.use(helmet());\r\n  /** CORS */\r\n  /** *\uc8fc\uc758* \ub2e4\ub978 \ube0c\ub77c\uc6b0\uc800 \ud074\ub77c\uc774\uc5b8\ud2b8 Origin\uc73c\ub85c \ubd80\ud130\uc758 \uc694\uccad\uc774 \uc788\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9 */\r\n  /** \uc11c\ubc84 to \uc11c\ubc84\ub294 \ud544\uc694\uc5c6\uc74c */\r\n  app.enableCors();\r\n  /** Trust Proxy */\r\n  app.set("trust proxy", true);\r\n  /** Global Prefix */\r\n  app.setGlobalPrefix("api");\r\n  /** Versioning */\r\n  app.enableVersioning({\r\n    type: VersioningType.URI,\r\n    defaultVersion: "1", // global fallback version \uc124\uc815\r\n  });\r\n  /** Port */\r\n  const port = process.env.SERVER_PORT || 3000;\r\n  /** OpenAPI */\r\n  initOpenAPI(app, port);\r\n  /** Server Listen */\r\n  await app.listen(port);\r\n  winstonLogger.log(`\ud83d\ude80 Application is running on: http://localhost:${port}/api`);\r\n}\r\n\r\nbootstrap();\n'})}),"\n",(0,s.jsx)(r.h2,{id:"appmodulets",children:"app.module.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { BadRequestException, Module, ValidationPipe, NestModule } from "@nestjs/common";\r\nimport { APP_FILTER, APP_PIPE, APP_GUARD, APP_INTERCEPTOR, DiscoveryModule } from "@nestjs/core";\r\nimport { GlobalExceptionsFilter } from "./filters/global-exception.filter";\r\nimport { ThrottlerGuard, ThrottlerModule } from "@nestjs/throttler";\r\nimport { ValidationError } from "class-validator";\r\nimport { AppController } from "./app.controller";\r\nimport { AppService } from "./app.service";\r\nimport { PrismaModule } from "./prisma/prisma.module";\r\nimport { EventEmitterModule } from "@nestjs/event-emitter";\r\nimport { GlobalValidationPipe } from "./pipes/global-validation.pipe";\r\nimport { ClsModule } from "nestjs-cls";\r\nimport { AopModule } from "@toss/nestjs-aop";\r\nimport { ClsPluginTransactional } from "@nestjs-cls/transactional";\r\nimport { TransactionalAdapterPrisma } from "@nestjs-cls/transactional-adapter-prisma";\r\nimport { HttpExceptionFilter } from "./filters/http-exception.filter";\r\n\r\n@Module({\r\n  imports: [\r\n    PrismaModule,\r\n    AopModule\r\n    EventEmitterModule.forRoot(),\r\n    ThrottlerModule.forRoot([\r\n      {\r\n        ttl: 1000, // 1 seconds\r\n        limit: 100, // 100 requests\r\n        ignoreUserAgents: [/k6/i],\r\n      },\r\n    ]),\r\n    CacheModule.register({\r\n      global: true,\r\n      ttl: 5, // 5 seconds\r\n      max: 10, // maximum number of items in cache\r\n    }),\r\n    ClsModule.forRoot({\r\n      global: true,\r\n      middleware: { mount: true },\r\n      plugins: [\r\n        new ClsPluginTransactional({\r\n          imports: [\r\n            PrismaModule, // module in which the PrismaClient is provided\r\n          ],\r\n          adapter: new TransactionalAdapterPrisma({\r\n            prismaInjectionToken: PrismaService, // the injection token of the PrismaClient\r\n          }),\r\n        }),\r\n      ],\r\n    }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [\r\n    AppService,\r\n    {\r\n      provide: APP_FILTER,\r\n      useClass: HttpExceptionFilter,\r\n    },\r\n    {\r\n      provide: APP_FILTER,\r\n      useClass: PrismaGlobalExceptionFilter,\r\n    },\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: ThrottlerGuard,\r\n    },\r\n    {\r\n      provide: APP_PIPE,\r\n      useValue: GlobalValidationPipe,\r\n    },\r\n  ],\r\n})\r\nexport class AppModule {}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"serveropen-apiinit-openapits",children:"server/open-api/init-openapi.ts"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import { INestApplication, Logger } from "@nestjs/common";\r\nimport { NestFactory } from "@nestjs/core";\r\nimport { DocumentBuilder, SwaggerModule } from "@nestjs/swagger";\r\nimport { writeFile } from "fs";\r\nimport $RefParser from "@apidevtools/json-schema-ref-parser";\r\nimport { NgOpenApiGen } from "ng-openapi-gen";\r\nimport { resolve } from "path";\r\nimport { AppModule } from "../src/app/app.module";\r\n\r\nexport async function initOpenApi(app?: INestApplication, port?: number | string) {\r\n  if (!app) {\r\n    app = await NestFactory.create(AppModule);\r\n  }\r\n  if (!port) {\r\n    port = process.env.SERVER_PORT || 3000;\r\n  }\r\n  /** OpenAPI */\r\n  const swaggerConfig = new DocumentBuilder()\r\n    .setTitle("API")\r\n    .addServer(`http://localhost:${port}`)\r\n    .setVersion("1.0")\r\n    .addCookieAuth("id-token", {\r\n      type: "apiKey",\r\n      in: "cookie",\r\n      description: "JWT Id Token",\r\n      name: "Id Token",\r\n      bearerFormat: "JWT",\r\n    })\r\n    .addCookieAuth("refresh-token", {\r\n      type: "apiKey",\r\n      in: "cookie",\r\n      description: "JWT Refresh Token",\r\n      name: "Refresh Token",\r\n      bearerFormat: "JWT",\r\n    })\r\n    .build();\r\n\r\n  const document = SwaggerModule.createDocument(app, swaggerConfig);\r\n  SwaggerModule.setup("api/v1/document", app, document);\r\n\r\n  const openApiPath = resolve(__dirname, "openapi.json");\r\n  writeFile(openApiPath, JSON.stringify(document), () => {\r\n    Logger.log(`\u2705 openapi.json \ud30c\uc77c\uc744 \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. ${openApiPath}`);\r\n  });\r\n\r\n  const openApiOptions = {\r\n    input: openApiPath,\r\n    output: "api/src/lib",\r\n    indexFile: true,\r\n  };\r\n\r\n  const RefParser = new $RefParser();\r\n  const openApi = await RefParser.bundle(openApiOptions.input, {\r\n    dereference: { circular: false },\r\n  });\r\n\r\n  try {\r\n    const ngOpenGen = new NgOpenApiGen(openApi, openApiOptions);\r\n    ngOpenGen.generate();\r\n  } catch (error) {\r\n    Logger.error(error);\r\n  }\r\n}\n'})})]})}function c(n={}){const{wrapper:r}={...(0,o.R)(),...n.components};return r?(0,s.jsx)(r,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}}}]);