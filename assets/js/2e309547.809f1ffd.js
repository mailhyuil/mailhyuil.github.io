"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["363689"],{957179:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,toc:()=>i,default:()=>h,metadata:()=>o,assets:()=>s,contentTitle:()=>a});var o=JSON.parse('{"id":"angular/angular component checkbox","title":"angular component checkbox","description":"checkbox-group","source":"@site/docs/angular/angular component checkbox.md","sourceDirName":"angular","slug":"/angular/angular component checkbox","permalink":"/docs/angular/angular component checkbox","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"angular base component accordion","permalink":"/docs/angular/angular component accrodion"},"next":{"title":"angular base component editor (quill)","permalink":"/docs/angular/angular component editor - quill"}}'),c=r(447259),t=r(255511);let l={},a="angular component checkbox",s={},i=[{value:"checkbox-group",id:"checkbox-group",level:2},{value:"ts",id:"ts",level:3},{value:"html",id:"html",level:3},{value:"checkbox",id:"checkbox",level:2},{value:"ts",id:"ts-1",level:3},{value:"html",id:"html-1",level:3}];function u(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"angular-component-checkbox",children:"angular component checkbox"})}),"\n",(0,c.jsx)(n.h2,{id:"checkbox-group",children:"checkbox-group"}),"\n",(0,c.jsx)(n.h3,{id:"ts",children:"ts"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  QueryList,\r\n  booleanAttribute,\r\n  inject,\r\n} from "@angular/core";\r\nimport { LabelComponent } from "@team-lepisode/components";\r\nimport { ValueAccessorDirective } from "../../directives/value-accessor.directive";\r\nimport { CheckboxComponent } from "../checkbox/checkbox.component";\r\n\r\n@Component({\r\n  selector: "app-checkbox-group",\r\n  templateUrl: "./checkbox-group.component.html",\r\n  styleUrls: ["./checkbox-group.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule, CheckboxComponent, LabelComponent],\r\n  hostDirectives: [ValueAccessorDirective],\r\n})\r\nexport class CheckboxGroupComponent implements AfterContentInit {\r\n  value: string[] = [];\r\n  valueAccessor = inject(ValueAccessorDirective<string[]>);\r\n  @Input() label?: string;\r\n  @Input({ transform: booleanAttribute }) required: boolean = false;\r\n  @ContentChildren(CheckboxComponent)\r\n  checkboxes!: QueryList<CheckboxComponent>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.valueAccessor.value.subscribe(v => {\r\n      this.value = v || [];\r\n      this.checkboxes.forEach(checkbox => {\r\n        if (!checkbox.modelValue) return;\r\n        const check = this.value.includes(checkbox.modelValue);\r\n        if (checkbox.value !== check) {\r\n          checkbox.valueAccessor.writeValue(check);\r\n          checkbox.valueAccessor.valueChange(check);\r\n        }\r\n      });\r\n    });\r\n    this.checkboxes.forEach(checkbox => {\r\n      checkbox.valueAccessor.value.subscribe(v => {\r\n        if (!checkbox.modelValue) return;\r\n        if (v) {\r\n          this.add(checkbox);\r\n        } else {\r\n          this.remove(checkbox);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  add(checkbox?: CheckboxComponent) {\r\n    if (!checkbox?.modelValue) return;\r\n    if (!this.value) return;\r\n    this.value = [...new Set([...this.value, checkbox.modelValue])];\r\n    this.valueAccessor.writeValue(this.value);\r\n    this.valueAccessor.valueChange(this.value);\r\n  }\r\n\r\n  remove(checkbox?: CheckboxComponent) {\r\n    if (!checkbox?.modelValue) return;\r\n    if (!this.value) return;\r\n    this.value = this.value.filter(v => v !== checkbox.modelValue);\r\n    this.valueAccessor.writeValue(this.value);\r\n    this.valueAccessor.valueChange(this.value);\r\n  }\r\n}\n'})}),"\n",(0,c.jsx)(n.h3,{id:"html",children:"html"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'<div class="flex flex-col gap-2">\r\n  <lepi-label *ngIf="label" [required]="required">{{ label }}</lepi-label>\r\n  <div class="grid grid-cols-4 gap-4 lg:items-center">\r\n    <ng-content />\r\n  </div>\r\n</div>\n'})}),"\n",(0,c.jsx)(n.h2,{id:"checkbox",children:"checkbox"}),"\n",(0,c.jsx)(n.h3,{id:"ts-1",children:"ts"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:'import { CommonModule } from "@angular/common";\r\nimport { Component, Input } from "@angular/core";\r\nimport { IconComponent } from "@team-lepisode/components";\r\nimport { ValueAccessorDirective } from "../../directives/value-accessor.directive";\r\n\r\n@Component({\r\n  selector: "app-checkbox",\r\n  templateUrl: "./checkbox.component.html",\r\n  styleUrls: ["./checkbox.component.scss"],\r\n  standalone: true,\r\n  imports: [CommonModule, IconComponent],\r\n  hostDirectives: [ValueAccessorDirective],\r\n})\r\nexport class CheckboxComponent {\r\n  value?: boolean = false;\r\n  @Input() modelValue?: string;\r\n  constructor(public readonly valueAccessor: ValueAccessorDirective<boolean>) {\r\n    valueAccessor.value.subscribe(v => (this.value = v));\r\n  }\r\n  toggle() {\r\n    const newValue = !this.value;\r\n    this.valueAccessor.writeValue(newValue);\r\n    this.valueAccessor.valueChange(newValue);\r\n  }\r\n}\n'})}),"\n",(0,c.jsx)(n.h3,{id:"html-1",children:"html"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'<section class="flex items-center gap-3 select-none group">\r\n  <div\r\n    class="relative flex items-center justify-center w-5 h-5 transition-all duration-200 border-2 rounded-sm cursor-pointer shrink-0"\r\n    [ngClass]="\r\n      value ? \'border-primary-500 bg-primary-500\' : \'border-gray-400 bg-white\'\r\n    "\r\n    (click)="toggle()"\r\n  >\r\n    <div\r\n      class="absolute w-0 h-0 rounded-full group-hover:bg-primary-50 -z-10 group-hover:h-9 group-hover:w-9 group-hover:transition-all group-hover:duration-200 group-hover:ease-in-out"\r\n    ></div>\r\n    <lepi-icon *ngIf="value" class="w-4 h-4 text-white bg-white" name="mdi:check" />\r\n  </div>\r\n  <div class="flex flex-col gap-1 text-sm cursor-pointer" (click)="toggle()" [class.active]="value">\r\n    <div class="text-sm">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</section>\n'})})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}},255511:function(e,n,r){r.d(n,{R:()=>l,x:()=>a});var o=r(596363);let c={},t=o.createContext(c);function l(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);