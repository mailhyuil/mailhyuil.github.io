"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([["181546"],{447358:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>s,toc:()=>a,default:()=>l,metadata:()=>c,assets:()=>d,contentTitle:()=>i});var c=JSON.parse('{"id":"cicd github actions/cicd github actions docker","title":"cicd github actions docker","description":"secrets \uC124\uC815","source":"@site/docs/cicd github actions/cicd github actions docker.md","sourceDirName":"cicd github actions","slug":"/cicd github actions/cicd github actions docker","permalink":"/docs/cicd github actions/cicd github actions docker","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"cicd github actions docker cache","permalink":"/docs/cicd github actions/cicd github actions docker cache"},"next":{"title":"cicd github actions nodejs","permalink":"/docs/cicd github actions/cicd github actions nodejs"}}'),t=r(447259),o=r(255511);let s={},i="cicd github actions docker",d={},a=[];function u(e){let n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cicd-github-actions-docker",children:"cicd github actions docker"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"secrets \uC124\uC815"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY"}),"\n",(0,t.jsx)(n.p,{children:"SSH_HOST, SSH_USERNAME, SSH_KEY, SSH_PORT"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'name: Deploy Client Production\r\non:\r\n  push:\r\n    branches:\r\n      - main\r\n    paths:\r\n      - "apps/client/**"\r\n      - ".github/workflows/client-production.yml"\r\n      - "docker/client.Dockerfile"\r\n  workflow_dispatch:\r\njobs:\r\n  deploy_client_prod:\r\n    runs-on: self-hosted\r\n    steps:\r\n      - name: Checkout\r\n        uses: actions/checkout@v4\r\n\r\n      - name: Login to Image Registry\r\n        uses: docker/login-action@v3\r\n        with:\r\n          username: ${{ secrets.DOCKER_USERNAME }}\r\n          password: ${{ secrets.DOCKER_PASSWORD }}\r\n          registry: ${{ secrets.DOCKER_REGISTRY }}\r\n\r\n      - name: Set up Docker Buildx (Multi Platform Builder)\r\n        uses: docker/setup-buildx-action@v3\r\n\r\n      - name: Build and Push\r\n        uses: docker/build-push-action@v5\r\n        with:\r\n          context: .\r\n          push: true\r\n          cache-from: type=gha # cache \uC0AC\uC6A9\r\n          cache-to: type=gha,mode=max # cache \uC0AC\uC6A9\r\n          file: ./docker/client.Dockerfile\r\n          target: production # target\uC740 stage\uC758 \uC774\uB984 "AS [target]"\r\n          tags: ${{ secrets.DOCKER_REGISTRY }}/client:${{ github.sha }} , ${{ secrets.DOCKER_REGISTRY }}/client:latest\r\n\r\n      # self-host \uC0AC\uC6A9\r\n      - name: Access to Remote Server & Run Container [CD]\r\n        run: |\r\n          echo "${{ secrets.SSH_KEY }}" >> $HOME/ssh_key.pem\r\n          chmod 600 $HOME/ssh_key.pem\r\n          ssh -o StrictHostKeyChecking=no -i $HOME/ssh_key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << ENDSSH\r\n            sudo -i\r\n            cd /home/ubuntu\r\n            docker compose pull client\r\n            docker compose down client\r\n            docker compose down nginx\r\n            docker volume remove ubuntu_client-data\r\n            docker compose up -d\r\n            docker image prune -af\r\n          ENDSSH\r\n          rm $HOME/ssh_key.pem\r\n\r\n      # appleboy/ssh-action \uC0AC\uC6A9\r\n      - name: Access to Remote Server & Run Container [CD]\r\n        uses: appleboy/ssh-action@v0.1.8\r\n        with:\r\n          host: ${{ secrets.SSH_HOST }}\r\n          username: ${{ secrets.SSH_USERNAME }}\r\n          key: ${{ secrets.SSH_KEY }}\r\n          port: 22\r\n          script: |\r\n            sudo -i\r\n            cd /home/ubuntu\r\n            docker compose pull client\r\n            docker compose down client\r\n            docker compose down nginx\r\n            docker volume remove ubuntu_client-data\r\n            docker compose up -d\r\n            docker image prune -af\n'})})]})}function l(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},255511:function(e,n,r){r.d(n,{R:()=>s,x:()=>i});var c=r(596363);let t={},o=c.createContext(t);function s(e){let n=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);